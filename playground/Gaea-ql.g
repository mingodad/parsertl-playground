//From: https://github.com/XiaoMi/Gaea/blob/fb0925b31b190228e50c06c707baf2d7c48c7149/parser/parser.y

// Copyright 2013 The ql Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSES/QL-LICENSE file.

// Copyright 2015 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Initial yacc source generated by ebnf2y[1]
// at 2013-10-04 23:10:47.861401015 +0200 CEST
//
//  $ ebnf2y -o ql.y -oe ql.ebnf -start StatementList -pkg ql -p _
//
//   [1]: http://github.com/cznic/ebnf2y

/*Tokens*/
%token action
%token add
//%token addDate
%token admin
%token after
%token algorithm
%token all
%token alter
%token always
%token analyze
%token any
%token as
%token asc
%token ascii
%token autoIncrement
%token avg
%token avgRowLength
%token begin
%token bigIntType
%token binaryType
%token binding
%token bindings
%token binlog
//%token bitAnd
%token bitLit
//%token bitOr
%token bitType
//%token bitXor
%token blobType
%token boolType
%token booleanType
%token both
%token btree
%token buckets
%token builtinAddDate
%token builtinBitAnd
%token builtinBitOr
%token builtinBitXor
%token builtinCast
%token builtinCount
%token builtinCurDate
%token builtinCurTime
%token builtinDateAdd
%token builtinDateSub
%token builtinExtract
%token builtinGroupConcat
%token builtinMax
%token builtinMin
%token builtinNow
%token builtinPosition
%token builtinStddevPop
%token builtinStddevSamp
%token builtinSubDate
%token builtinSubstring
%token builtinSum
%token builtinSysDate
%token builtinTrim
%token builtinUser
%token builtinVarPop
%token builtinVarSamp
%token by
%token byteType
%token cancel
%token cascade
%token cascaded
%token caseKwd
//%token cast
%token chain
%token change
%token charType
%token character
%token charsetKwd
%token check
%token checksum
%token cleanup
%token client
%token coalesce
%token collation
%token column
%token columns
%token comment
%token commit
%token committed
%token compact
%token compressed
%token compression
%token connection
%token consistent
%token constraint
%token convert
%token copyKwd
//%token count
%token create
%token cumeDist
//%token curTime
%token current
%token currentDate
%token currentTime
%token currentTs
%token currentUser
%token data
%token database
%token databases
//%token dateAdd
//%token dateSub
%token dateType
%token datetimeType
%token day
%token dayHour
%token dayMicrosecond
%token dayMinute
%token daySecond
%token ddl
%token deallocate
%token decLit
%token decimalType
%token defaultKwd
%token definer
%token delayKeyWrite
%token delayed
%token deleteKwd
%token denseRank
%token desc
%token describe
%token disable
%token distinct
%token do
%token doubleAtIdentifier
%token doubleType
%token drainer
%token drop
%token dual
%token duplicate
%token dynamic
%token elseKwd
%token enable
%token enclosed
%token end
%token engine
%token engines
%token enum
%token escaped
%token event
%token events
%token except
%token exclusive
%token execute
%token exists
%token explain
//%token extract
%token falseKwd
%token fields
%token first
%token firstValue
%token fixed
%token floatLit
%token floatType
%token flush
%token following
%token forKwd
%token force
%token foreign
%token format
%token from
%token fulltext
%token function
%token generated
%token getFormat
%token global
%token grant
%token grants
%token group
//%token groupConcat
%token groups
%token hash
%token having
%token hexLit
%token highPriority
%token hintBegin
%token hintEnd
%token hour
%token hourMicrosecond
%token hourMinute
%token hourSecond
%token identSQLErrors
%token identified
%token identifier
%token ifKwd
%token ignore
%token index
%token indexes
%token infile
%token inplace
%token insert
%token instant
%token int1Type
%token int2Type
%token int3Type
%token int4Type
%token int8Type
%token intLit
%token intType
%token integerType
%token internal
%token into
%token invoker
%token isolation
%token job
%token jobs
%token jsonType
%token jss
%token juss
%token keyBlockSize
%token keys
%token kill
%token lag
%token last
%token lastValue
%token lead
%token leading
%token less
%token level
%token limit
%token lines
%token load
%token local
%token localTime
%token localTs
%token lock
%token locked
%token long
%token longblobType
%token longtextType
%token lowPriority
%token master
//%token max
%token maxConnectionsPerHour
%token maxExecutionTime
%token maxQueriesPerHour
%token maxRows
%token maxUpdatesPerHour
%token maxUserConnections
%token maxValue
%token mediumIntType
%token mediumblobType
%token mediumtextType
%token merge
%token microsecond
//%token min
%token minRows
%token minute
%token minuteMicrosecond
%token minuteSecond
%token mode
%token modify
%token month
%token names
%token national
%token next_row_id
%token no
%token noWriteToBinLog
%token none
//%token now
%token nowait
%token nthValue
%token ntile
%token null
%token nulleq
%token nulls
%token numericType
%token nvarcharType
%token offset
%token only
%token option
%token optionally
%token order
%token outer
%token over
%token packKeys
%token paramMarker
%token partition
%token partitions
%token password
%token percentRank
%token plugins
//%token position
%token preceding
%token precisionType
%token prepare
%token primary
%token privileges
%token procedure
%token process
%token processlist
%token profiles
%token pump
%token quarter
%token queries
%token query
%token rangeKwd
%token rank
%token read
%token realType
%token recent
%token recover
%token redundant
%token references
%token regexpKwd
%token release
%token reload
%token rename
%token repeat
%token repeatable
%token replace
%token replication
%token respect
%token restore
%token restrict
%token reverse
%token revoke
%token rlike
%token role
%token rollback
%token rollup
%token routine
%token row
%token rowCount
%token rowFormat
%token rowNumber
%token rows
%token savepoint
%token second
%token secondMicrosecond
%token security
%token selectKwd
%token separator
%token serializable
%token session
%token shardRowIDBits
%token share
%token shared
%token show
%token signed
%token singleAtIdentifier
%token skip
%token slave
%token slow
%token smallIntType
%token snapshot
%token some
%token sql
%token sqlCalcFoundRows
%token start
%token starting
%token stats
%token statsBuckets
%token statsHealthy
%token statsHistograms
%token statsMeta
%token statsPersistent
%token status
//%token stddevPop
//%token stddevSamp
%token stored
//%token subDate
%token subpartition
%token subpartitions
//%token substring
//%token sum
%token super
%token tableKwd
%token tables
%token tablespace
%token temporary
%token temptable
%token terminated
%token textType
%token than
%token then
%token tidb
%token tidbHJ
%token tidbINLJ
%token tidbSMJ
%token timeType
%token timestampAdd
%token timestampDiff
%token timestampType
%token tinyIntType
%token tinyblobType
%token tinytextType
%token to
%token top
%token trace
%token trailing
%token transaction
%token trigger
%token triggers
//%token trim
%token trueKwd
%token truncate
%token unbounded
%token uncommitted
%token undefined
%token union
%token unique
%token unknown
%token unlock
%token unsigned
%token update
%token usage
%token use
%token user
%token utcDate
%token utcTime
%token utcTimestamp
%token value
%token values
//%token varPop
//%token varSamp
%token varbinaryType
%token varcharType
%token variables
%token view
%token virtual
%token warnings
%token week
%token when
%token where
%token window
%token work
%token write
%token yearMonth
%token yearType
%token zerofill

%precedence /*1*/ empty
%precedence /*2*/ lowerThanWith
%precedence /*3*/ with
%precedence /*4*/ sqlCache sqlNoCache
%precedence /*5*/ lowerThanIntervalKeyword
%precedence /*6*/ interval
%precedence /*7*/ lowerThanStringLitToken
%precedence /*8*/ stringLit
%precedence /*9*/ lowerThanSetKeyword
%precedence /*10*/ set
%precedence /*11*/ lowerThanInsertValues
%precedence /*12*/ insertValues
%precedence /*13*/ lowerThanCreateTableSelect
%precedence /*14*/ createTableSelect
%precedence /*15*/ lowerThanKey
%precedence /*16*/ key
%left /*17*/ cross inner join left right straightJoin natural full
%left /*18*/ tableRefPriority
%precedence /*19*/ lowerThanOn
%precedence /*20*/ on using
%right /*21*/ assignmentEq
%left /*22*/ pipes or pipesAsOr
%left /*23*/ xor
%left /*24*/ andand and
%left /*25*/ between
%precedence /*26*/ lowerThanEq
%left /*27*/ in is like eq ge le neq neqSynonym '>' '<'
%left /*28*/ '|'
%left /*29*/ '&'
%left /*30*/ lsh rsh
%left /*31*/ '-' '+'
%left /*32*/ div mod '*' '/' '%'
%left /*33*/ '^'
%left /*34*/ '~' neg
%right /*35*/ not not2
%right /*36*/ collate
%precedence /*37*/ '('
%precedence /*38*/ ')'
%precedence /*39*/ quick
%precedence /*40*/ escape
%precedence /*41*/ lowerThanComma
%precedence /*42*/ ','
%precedence /*43*/ higherThanComma

%start Start

%%

Start :
	StatementList
	;

AlterTableStmt :
	alter IgnoreOptional tableKwd TableName AlterTableSpecList
	| alter IgnoreOptional tableKwd TableName analyze partition PartitionNameList MaxNumBuckets
	| alter IgnoreOptional tableKwd TableName analyze partition PartitionNameList index IndexNameList MaxNumBuckets
	;

AlterTableSpec :
	AlterTableOptionListOpt
	| convert to CharsetKw CharsetName OptCollate
	| add ColumnKeywordOpt ColumnDef ColumnPosition
	| add ColumnKeywordOpt '(' /*37P*/ ColumnDefList ')' /*38P*/
	| add Constraint
	| add partition PartitionDefinitionListOpt
	| add partition partitions NUM
	| coalesce partition NUM
	| drop ColumnKeywordOpt ColumnName RestrictOrCascadeOpt
	| drop primary key /*16P*/
	| drop partition Identifier
	| truncate partition Identifier
	| drop KeyOrIndex Identifier
	| drop foreign key /*16P*/ Symbol
	| disable keys
	| enable keys
	| modify ColumnKeywordOpt ColumnDef ColumnPosition
	| change ColumnKeywordOpt ColumnName ColumnDef ColumnPosition
	| alter ColumnKeywordOpt ColumnName set /*10P*/ defaultKwd SignedLiteral
	| alter ColumnKeywordOpt ColumnName drop defaultKwd
	| rename to TableName
	| rename TableName
	| rename as TableName
	| rename KeyOrIndex Identifier to Identifier
	| LockClause
	| algorithm EqOpt AlterAlgorithm
	| force
	;

AlterAlgorithm :
	defaultKwd
	| copyKwd
	| inplace
	| instant
	;

LockClauseOpt :
	/*empty*/
	| LockClause
	;

LockClause :
	lock eq /*27L*/ none
	| lock eq /*27L*/ defaultKwd
	| lock eq /*27L*/ shared
	| lock eq /*27L*/ exclusive
	;

KeyOrIndex :
	key /*16P*/
	| index
	;

KeyOrIndexOpt :
	/*empty*/
	| KeyOrIndex
	;

ColumnKeywordOpt :
	/*empty*/
	| column
	;

ColumnPosition :
	/*empty*/
	| first
	| after ColumnName
	;

AlterTableSpecList :
	AlterTableSpec
	| AlterTableSpecList ',' /*42P*/ AlterTableSpec
	;

PartitionNameList :
	Identifier
	| PartitionNameList ',' /*42P*/ Identifier
	;

ConstraintKeywordOpt :
	/*empty*/
	| constraint
	| constraint Symbol
	;

Symbol :
	Identifier
	;

RenameTableStmt :
	rename tableKwd TableToTableList
	;

TableToTableList :
	TableToTable
	| TableToTableList ',' /*42P*/ TableToTable
	;

TableToTable :
	TableName to TableName
	;

AnalyzeTableStmt :
	analyze tableKwd TableNameList MaxNumBuckets
	| analyze tableKwd TableName index IndexNameList MaxNumBuckets
	| analyze tableKwd TableName partition PartitionNameList MaxNumBuckets
	| analyze tableKwd TableName partition PartitionNameList index IndexNameList MaxNumBuckets
	;

MaxNumBuckets :
	/*empty*/
	| with /*3P*/ NUM buckets
	;

Assignment :
	ColumnName eq /*27L*/ Expression
	;

AssignmentList :
	Assignment
	| AssignmentList ',' /*42P*/ Assignment
	;

//AssignmentListOpt :
//	/*empty*/
//	| AssignmentList
//	;

BeginTransactionStmt :
	begin
	| start transaction
	| start transaction with /*3P*/ consistent snapshot
	;

BinlogStmt :
	binlog stringLit /*8P*/
	;

ColumnDefList :
	ColumnDef
	| ColumnDefList ',' /*42P*/ ColumnDef
	;

ColumnDef :
	ColumnName Type ColumnOptionListOpt
	;

ColumnName :
	Identifier
	| Identifier '.' Identifier
	| Identifier '.' Identifier '.' Identifier
	;

ColumnNameList :
	ColumnName
	| ColumnNameList ',' /*42P*/ ColumnName
	;

ColumnNameListOpt :
	/*empty*/
	| ColumnNameList
	;

ColumnNameListOptWithBrackets :
	/*empty*/
	| '(' /*37P*/ ColumnNameListOpt ')' /*38P*/
	;

CommitOpt :
	work
	| work and /*24L*/ no chain no release
	| work and /*24L*/ chain no release
	| work and /*24L*/ no chain release
	| work no release
	| work release
	| and /*24L*/ no chain no release
	| and /*24L*/ chain no release
	| and /*24L*/ no chain release
	| no release
	| release
	;

CommitStmt :
	commit
	| commit CommitOpt
	;

PrimaryOpt :
	/*empty*/
	| primary
	;

ColumnOption :
	not /*35R*/ null
	| null
	| autoIncrement
	| PrimaryOpt key /*16P*/
	| unique %prec lowerThanKey /*15P*/
	| unique key /*16P*/
	| defaultKwd DefaultValueExpr
	| on /*20P*/ update NowSymOptionFraction
	| comment stringLit /*8P*/
	| check '(' /*37P*/ Expression ')' /*38P*/
	| GeneratedAlways as '(' /*37P*/ Expression ')' /*38P*/ VirtualOrStored
	| ReferDef
	;

GeneratedAlways :
	/*empty*/
	| generated always
	;

VirtualOrStored :
	/*empty*/
	| virtual
	| stored
	;

ColumnOptionList :
	ColumnOption
	| ColumnOptionList ColumnOption
	;

ColumnOptionListOpt :
	/*empty*/
	| ColumnOptionList
	;

ConstraintElem :
	primary key /*16P*/ IndexName IndexTypeOpt '(' /*37P*/ IndexColNameList ')' /*38P*/ IndexOptionList
	| fulltext KeyOrIndexOpt IndexName '(' /*37P*/ IndexColNameList ')' /*38P*/ IndexOptionList
	| KeyOrIndex IndexName IndexTypeOpt '(' /*37P*/ IndexColNameList ')' /*38P*/ IndexOptionList
	| unique KeyOrIndexOpt IndexName IndexTypeOpt '(' /*37P*/ IndexColNameList ')' /*38P*/ IndexOptionList
	| foreign key /*16P*/ IndexName '(' /*37P*/ IndexColNameList ')' /*38P*/ ReferDef
	;

ReferDef :
	references TableName '(' /*37P*/ IndexColNameList ')' /*38P*/ OnDeleteOpt OnUpdateOpt
	;

OnDeleteOpt :
	%prec lowerThanOn /*19P*/ /*empty*/
	| on /*20P*/ deleteKwd ReferOpt
	;

OnUpdateOpt :
	%prec lowerThanOn /*19P*/ /*empty*/
	| on /*20P*/ update ReferOpt
	;

ReferOpt :
	restrict
	| cascade
	| set /*10P*/ null
	| no action
	;

DefaultValueExpr :
	NowSymOptionFraction
	| SignedLiteral
	;

NowSymOptionFraction :
	NowSym
	| NowSymFunc '(' /*37P*/ ')' /*38P*/
	| NowSymFunc '(' /*37P*/ NUM ')' /*38P*/
	;

NowSymFunc :
	currentTs
	| localTime
	| localTs
	| builtinNow
	;

NowSym :
	currentTs
	| localTime
	| localTs
	;

SignedLiteral :
	Literal
	| '+' /*31L*/ NumLiteral
	| '-' /*31L*/ NumLiteral
	;

NumLiteral :
	intLit
	| floatLit
	| decLit
	;

CreateIndexStmt :
	create CreateIndexStmtUnique index Identifier IndexTypeOpt on /*20P*/ TableName '(' /*37P*/ IndexColNameList ')' /*38P*/ IndexOptionList LockClauseOpt
	;

CreateIndexStmtUnique :
	/*empty*/
	| unique
	;

IndexColName :
	ColumnName OptFieldLen Order
	;

IndexColNameList :
	IndexColName
	| IndexColNameList ',' /*42P*/ IndexColName
	;

CreateDatabaseStmt :
	create DatabaseSym IfNotExists DBName DatabaseOptionListOpt
	;

DBName :
	Identifier
	;

DatabaseOption :
	DefaultKwdOpt CharsetKw EqOpt CharsetName
	| DefaultKwdOpt collate /*36R*/ EqOpt StringName
	;

DatabaseOptionListOpt :
	/*empty*/
	| DatabaseOptionList
	;

DatabaseOptionList :
	DatabaseOption
	| DatabaseOptionList DatabaseOption
	;

CreateTableStmt :
	create tableKwd IfNotExists TableName TableElementListOpt CreateTableOptionListOpt PartitionOpt DuplicateOpt AsOpt CreateTableSelectOpt
	| create tableKwd IfNotExists TableName LikeTableWithOrWithoutParen
	;

DefaultKwdOpt :
	/*empty*/
	| defaultKwd
	;

PartitionOpt :
	/*empty*/
	| partition by key /*16P*/ '(' /*37P*/ ColumnNameList ')' /*38P*/ PartitionNumOpt PartitionDefinitionListOpt
	| partition by hash '(' /*37P*/ Expression ')' /*38P*/ PartitionNumOpt
	| partition by rangeKwd '(' /*37P*/ Expression ')' /*38P*/ PartitionNumOpt SubPartitionOpt PartitionDefinitionListOpt
	| partition by rangeKwd columns '(' /*37P*/ ColumnNameList ')' /*38P*/ PartitionNumOpt PartitionDefinitionListOpt
	;

SubPartitionOpt :
	/*empty*/
	| subpartition by hash '(' /*37P*/ Expression ')' /*38P*/ SubPartitionNumOpt
	| subpartition by key /*16P*/ '(' /*37P*/ ColumnNameList ')' /*38P*/ SubPartitionNumOpt
	;

SubPartitionNumOpt :
	/*empty*/
	| subpartitions NUM
	;

PartitionNumOpt :
	/*empty*/
	| partitions NUM
	;

PartitionDefinitionListOpt :
	%prec lowerThanCreateTableSelect /*13P*/ /*empty*/
	| '(' /*37P*/ PartitionDefinitionList ')' /*38P*/
	;

PartitionDefinitionList :
	PartitionDefinition
	| PartitionDefinitionList ',' /*42P*/ PartitionDefinition
	;

PartitionDefinition :
	partition Identifier PartDefValuesOpt PartDefOptionsOpt
	;

PartDefOptionsOpt :
	/*empty*/
	| PartDefOptionList
	;

PartDefOptionList :
	PartDefOption
	| PartDefOptionList PartDefOption
	;

PartDefOption :
	comment EqOpt stringLit /*8P*/
	| engine EqOpt Identifier
	| tablespace EqOpt Identifier
	;

PartDefValuesOpt :
	/*empty*/
	| values less than maxValue
	| values less than '(' /*37P*/ MaxValueOrExpressionList ')' /*38P*/
	;

DuplicateOpt :
	/*empty*/
	| ignore
	| replace
	;

AsOpt :
	/*empty*/
	| as
	;

CreateTableSelectOpt :
	/*empty*/
	| SelectStmt
	| UnionStmt
	| SubSelect %prec createTableSelect /*14P*/
	;

LikeTableWithOrWithoutParen :
	like /*27L*/ TableName
	| '(' /*37P*/ like /*27L*/ TableName ')' /*38P*/
	;

CreateViewStmt :
	create OrReplace ViewAlgorithm ViewDefiner ViewSQLSecurity view ViewName ViewFieldList as SelectStmt ViewCheckOption
	;

OrReplace :
	/*empty*/
	| or /*22L*/ replace
	;

ViewAlgorithm :
	/*empty*/
	| algorithm eq /*27L*/ undefined
	| algorithm eq /*27L*/ merge
	| algorithm eq /*27L*/ temptable
	;

ViewDefiner :
	/*empty*/
	| definer eq /*27L*/ Username
	;

ViewSQLSecurity :
	/*empty*/
	| sql security definer
	| sql security invoker
	;

ViewName :
	TableName
	;

ViewFieldList :
	/*empty*/
	| '(' /*37P*/ ColumnList ')' /*38P*/
	;

ColumnList :
	Identifier
	| ColumnList ',' /*42P*/ Identifier
	;

ViewCheckOption :
	/*empty*/
	| with /*3P*/ cascaded check option
	| with /*3P*/ local check option
	;

DoStmt :
	do ExpressionList
	;

DeleteFromStmt :
	deleteKwd TableOptimizerHints PriorityOpt QuickOptional IgnoreOptional from TableName IndexHintListOpt WhereClauseOptional OrderByOptional LimitClause
	| deleteKwd TableOptimizerHints PriorityOpt QuickOptional IgnoreOptional TableNameList from TableRefs WhereClauseOptional
	| deleteKwd TableOptimizerHints PriorityOpt QuickOptional IgnoreOptional from TableNameList using /*20P*/ TableRefs WhereClauseOptional
	;

DatabaseSym :
	database
	;

DropDatabaseStmt :
	drop DatabaseSym IfExists DBName
	;

DropIndexStmt :
	drop index IfExists Identifier on /*20P*/ TableName
	;

DropTableStmt :
	drop TableOrTables TableNameList RestrictOrCascadeOpt
	| drop TableOrTables ifKwd exists TableNameList RestrictOrCascadeOpt
	;

DropViewStmt :
	drop view TableNameList RestrictOrCascadeOpt
	| drop view ifKwd exists TableNameList RestrictOrCascadeOpt
	;

DropUserStmt :
	drop user UsernameList
	| drop user ifKwd exists UsernameList
	;

DropRoleStmt :
	drop role RolenameList
	| drop role ifKwd exists RolenameList
	;

DropStatsStmt :
	drop stats TableName
	;

RestrictOrCascadeOpt :
	/*empty*/
	| restrict
	| cascade
	;

TableOrTables :
	tableKwd
	| tables
	;

EqOpt :
	/*empty*/
	| eq /*27L*/
	;

EmptyStmt :
	/*empty*/
	;

TraceStmt :
	trace TraceableStmt
	| trace format eq /*27L*/ stringLit /*8P*/ TraceableStmt
	;

ExplainSym :
	explain
	| describe
	| desc
	;

ExplainStmt :
	ExplainSym TableName
	| ExplainSym TableName ColumnName
	| ExplainSym ExplainableStmt
	| ExplainSym format eq /*27L*/ stringLit /*8P*/ ExplainableStmt
	| ExplainSym analyze ExplainableStmt
	;

LengthNum :
	NUM
	;

NUM :
	intLit
	;

Expression :
	singleAtIdentifier assignmentEq /*21R*/ Expression %prec assignmentEq /*21R*/
	| Expression logOr Expression %prec pipes /*22L*/
	| Expression xor /*23L*/ Expression %prec xor /*23L*/
	| Expression logAnd Expression %prec andand /*24L*/
	| not /*35R*/ Expression %prec not /*35R*/
	| BoolPri IsOrNotOp trueKwd %prec is /*27L*/
	| BoolPri IsOrNotOp falseKwd %prec is /*27L*/
	| BoolPri IsOrNotOp unknown %prec is /*27L*/
	| BoolPri
	;

MaxValueOrExpression :
	maxValue
	| Expression
	;

logOr :
	pipesAsOr /*22L*/
	| or /*22L*/
	;

logAnd :
	andand /*24L*/
	| and /*24L*/
	;

ExpressionList :
	Expression
	| ExpressionList ',' /*42P*/ Expression
	;

MaxValueOrExpressionList :
	MaxValueOrExpression
	| MaxValueOrExpressionList ',' /*42P*/ MaxValueOrExpression
	;

ExpressionListOpt :
	/*empty*/
	| ExpressionList
	;

FuncDatetimePrecListOpt :
	/*empty*/
	| FuncDatetimePrecList
	;

FuncDatetimePrecList :
	intLit
	;

BoolPri :
	BoolPri IsOrNotOp null %prec is /*27L*/
	| BoolPri CompareOp PredicateExpr %prec eq /*27L*/
	| BoolPri CompareOp AnyOrAll SubSelect %prec eq /*27L*/
	| BoolPri CompareOp singleAtIdentifier assignmentEq /*21R*/ PredicateExpr %prec assignmentEq /*21R*/
	| PredicateExpr
	;

CompareOp :
	ge /*27L*/
	| '>' /*27L*/
	| le /*27L*/
	| '<' /*27L*/
	| neq /*27L*/
	| neqSynonym /*27L*/
	| eq /*27L*/
	| nulleq
	;

BetweenOrNotOp :
	between /*25L*/
	| not /*35R*/ between /*25L*/
	;

IsOrNotOp :
	is /*27L*/
	| is /*27L*/ not /*35R*/
	;

InOrNotOp :
	in /*27L*/
	| not /*35R*/ in /*27L*/
	;

LikeOrNotOp :
	like /*27L*/
	| not /*35R*/ like /*27L*/
	;

RegexpOrNotOp :
	RegexpSym
	| not /*35R*/ RegexpSym
	;

AnyOrAll :
	any
	| some
	| all
	;

PredicateExpr :
	BitExpr InOrNotOp '(' /*37P*/ ExpressionList ')' /*38P*/
	| BitExpr InOrNotOp SubSelect
	| BitExpr BetweenOrNotOp BitExpr and /*24L*/ PredicateExpr
	| BitExpr LikeOrNotOp SimpleExpr LikeEscapeOpt
	| BitExpr RegexpOrNotOp SimpleExpr
	| BitExpr
	;

RegexpSym :
	regexpKwd
	| rlike
	;

LikeEscapeOpt :
	%prec empty /*1P*/ /*empty*/
	| escape /*40P*/ stringLit /*8P*/
	;

Field :
	'*' /*32L*/
	| Identifier '.' '*' /*32L*/
	| Identifier '.' Identifier '.' '*' /*32L*/
	| Expression FieldAsNameOpt
	| '{' Identifier Expression '}' FieldAsNameOpt
	;

FieldAsNameOpt :
	/*empty*/
	| FieldAsName
	;

FieldAsName :
	Identifier
	| as Identifier
	| stringLit /*8P*/
	| as stringLit /*8P*/
	;

FieldList :
	Field
	| FieldList ',' /*42P*/ Field
	;

GroupByClause :
	group by ByList WithRollUpOpt
	;

HavingClause :
	/*empty*/
	| having Expression
	;

WithRollUpOpt :
	%prec lowerThanWith /*2P*/ /*empty*/
	| with /*3P*/ rollup
	;

IfExists :
	/*empty*/
	| ifKwd exists
	;

IfNotExists :
	/*empty*/
	| ifKwd not /*35R*/ exists
	;

IgnoreOptional :
	/*empty*/
	| ignore
	;

IndexName :
	/*empty*/
	| Identifier
	;

IndexOptionList :
	/*empty*/
	| IndexOptionList IndexOption
	;

IndexOption :
	keyBlockSize EqOpt LengthNum
	| IndexType
	| comment stringLit /*8P*/
	;

IndexType :
	using /*20P*/ btree
	| using /*20P*/ hash
	;

IndexTypeOpt :
	/*empty*/
	| IndexType
	;

Identifier :
	identifier
	| UnReservedKeyword
	| NotKeywordToken
	| TiDBKeyword
	;

UnReservedKeyword :
	action
	| ascii
	| autoIncrement
	| after
	| always
	| avg
	| begin
	| bitType
	| boolType
	| booleanType
	| btree
	| byteType
	| cleanup
	| charsetKwd
	| columns
	| commit
	| compact
	| compressed
	| consistent
	| current
	| data
	| dateType %prec lowerThanStringLitToken /*7P*/
	| datetimeType
	| day
	| deallocate
	| do
	| duplicate
	| dynamic
	| end
	| engine
	| engines
	| enum
	| identSQLErrors
	| escape /*40P*/
	| execute
	| fields
	| first
	| fixed
	| flush
	| following
	| format
	| full /*17L*/
	| global
	| hash
	| hour
	| less
	| local
	| last
	| names
	| offset
	| password %prec lowerThanEq /*26P*/
	| prepare
	| quick /*39P*/
	| redundant
	| role
	| rollback
	| savepoint
	| session
	| signed
	| snapshot
	| start
	| status
	| subpartitions
	| subpartition
	| tables
	| tablespace
	| textType
	| than
	| timeType %prec lowerThanStringLitToken /*7P*/
	| timestampType %prec lowerThanStringLitToken /*7P*/
	| trace
	| transaction
	| truncate
	| unbounded
	| unknown
	| value
	| warnings
	| yearType
	| mode
	| week
	| any
	| some
	| user
	| identified
	| collation
	| comment
	| avgRowLength
	| connection
	| checksum
	| compression
	| keyBlockSize
	| master
	| maxRows
	| minRows
	| national
	| rowFormat
	| quarter
	| grants
	| triggers
	| delayKeyWrite
	| isolation
	| jsonType
	| repeatable
	| respect
	| committed
	| uncommitted
	| only
	| serializable
	| level
	| variables
	| sqlCache /*4P*/
	| indexes
	| processlist
	| sqlNoCache /*4P*/
	| disable
	| enable
	| reverse
	| privileges
	| no
	| binlog
	| function
	| view
	| binding
	| bindings
	| modify
	| events
	| partitions
	| none
	| nulls
	| super
	| exclusive
	| statsPersistent
	| rowCount
	| coalesce
	| month
	| process
	| profiles
	| microsecond
	| minute
	| plugins
	| preceding
	| query
	| queries
	| second
	| separator
	| share
	| shared
	| slow
	| maxConnectionsPerHour
	| maxQueriesPerHour
	| maxUpdatesPerHour
	| maxUserConnections
	| replication
	| client
	| slave
	| reload
	| temporary
	| routine
	| event
	| algorithm
	| definer
	| invoker
	| merge
	| temptable
	| undefined
	| security
	| cascaded
	| recover
	| rollup
	| nowait
	| skip
	| locked
	;

TiDBKeyword :
	admin
	| buckets
	| cancel
	| ddl
	| drainer
	| jobs
	| job
	| pump
	| stats
	| statsMeta
	| statsHistograms
	| statsBuckets
	| statsHealthy
	| tidb
	| tidbHJ
	| tidbSMJ
	| tidbINLJ
	| restore
	;

NotKeywordToken :
	builtinAddDate //addDate
	| builtinBitAnd //bitAnd
	| builtinBitOr //bitOr
	| builtinBitXor //bitXor
	| builtinCast //cast
	| copyKwd
	| builtinCount //count
	| builtinCurTime //curTime
	| builtinDateAdd //dateAdd
	| builtinDateSub //dateSub
	| builtinExtract //extract
	| getFormat
	| builtinGroupConcat //groupConcat
	| inplace
	| instant
	| internal
	| builtinMin //min
	| builtinMax //max
	| maxExecutionTime
	| builtinNow //now
	| recent
	| builtinPosition //position
	| builtinSubDate //subDate
	| builtinSubstring //substring
	| builtinSum //sum
	| builtinStddevPop //stddevPop
	| builtinStddevSamp //stddevSamp
	| builtinVarPop //varPop
	| builtinVarSamp //varSamp
	| timestampAdd
	| timestampDiff
	| top
	| builtinTrim //trim
	| next_row_id
	;

InsertIntoStmt :
	insert PriorityOpt IgnoreOptional IntoOpt TableName InsertValues OnDuplicateKeyUpdate
	;

IntoOpt :
	/*empty*/
	| into
	;

InsertValues :
	'(' /*37P*/ ColumnNameListOpt ')' /*38P*/ ValueSym ValuesList
	| '(' /*37P*/ ColumnNameListOpt ')' /*38P*/ SelectStmt
	| '(' /*37P*/ ColumnNameListOpt ')' /*38P*/ '(' /*37P*/ SelectStmt ')' /*38P*/
	| '(' /*37P*/ ColumnNameListOpt ')' /*38P*/ UnionStmt
	| ValueSym ValuesList %prec insertValues /*12P*/
	| '(' /*37P*/ SelectStmt ')' /*38P*/
	| SelectStmt
	| UnionStmt
	| set /*10P*/ ColumnSetValueList
	;

ValueSym :
	value
	| values
	;

ValuesList :
	RowValue
	| ValuesList ',' /*42P*/ RowValue
	;

RowValue :
	'(' /*37P*/ ValuesOpt ')' /*38P*/
	;

ValuesOpt :
	/*empty*/
	| Values
	;

Values :
	Values ',' /*42P*/ ExprOrDefault
	| ExprOrDefault
	;

ExprOrDefault :
	Expression
	| defaultKwd
	;

ColumnSetValue :
	ColumnName eq /*27L*/ Expression
	;

ColumnSetValueList :
	/*empty*/
	| ColumnSetValue
	| ColumnSetValueList ',' /*42P*/ ColumnSetValue
	;

OnDuplicateKeyUpdate :
	/*empty*/
	| on /*20P*/ duplicate key /*16P*/ update AssignmentList
	;

ReplaceIntoStmt :
	replace PriorityOpt IntoOpt TableName InsertValues
	;

ODBCDateTimeType :
    /* need another way */
	//"d"
	//| "t"
	//| "ts"
	;

Literal :
	falseKwd
	| null
	| trueKwd
	| floatLit
	| decLit
	| intLit
	| StringLiteral %prec lowerThanStringLitToken /*7P*/
	| "UNDERSCORE_CHARSET" stringLit /*8P*/
	| hexLit
	| bitLit
	;

StringLiteral :
	stringLit /*8P*/
	| StringLiteral stringLit /*8P*/
	;

OrderBy :
	order by ByList
	;

ByList :
	ByItem
	| ByList ',' /*42P*/ ByItem
	;

ByItem :
	Expression Order
	;

Order :
	/*empty*/
	| asc
	| desc
	;

OrderByOptional :
	/*empty*/
	| OrderBy
	;

BitExpr :
	BitExpr '|' /*28L*/ BitExpr %prec '|' /*28L*/
	| BitExpr '&' /*29L*/ BitExpr %prec '&' /*29L*/
	| BitExpr lsh /*30L*/ BitExpr %prec lsh /*30L*/
	| BitExpr rsh /*30L*/ BitExpr %prec rsh /*30L*/
	| BitExpr '+' /*31L*/ BitExpr %prec '+' /*31L*/
	| BitExpr '-' /*31L*/ BitExpr %prec '-' /*31L*/
	| BitExpr '+' /*31L*/ interval /*6P*/ Expression TimeUnit %prec '+' /*31L*/
	| BitExpr '-' /*31L*/ interval /*6P*/ Expression TimeUnit %prec '+' /*31L*/
	| BitExpr '*' /*32L*/ BitExpr %prec '*' /*32L*/
	| BitExpr '/' /*32L*/ BitExpr %prec '/' /*32L*/
	| BitExpr '%' /*32L*/ BitExpr %prec '%' /*32L*/
	| BitExpr div /*32L*/ BitExpr %prec div /*32L*/
	| BitExpr mod /*32L*/ BitExpr %prec mod /*32L*/
	| BitExpr '^' /*33L*/ BitExpr
	| SimpleExpr
	;

SimpleIdent :
	Identifier
	| Identifier '.' Identifier
	| '.' Identifier '.' Identifier
	| Identifier '.' Identifier '.' Identifier
	;

SimpleExpr :
	SimpleIdent
	| FunctionCallKeyword
	| FunctionCallNonKeyword
	| FunctionCallGeneric
	| SimpleExpr collate /*36R*/ StringName %prec neg /*34L*/
	| WindowFuncCall
	| Literal
	| paramMarker
	| Variable
	| SumExpr
	| '!' SimpleExpr %prec neg /*34L*/
	| '~' /*34L*/ SimpleExpr %prec neg /*34L*/
	| '-' /*31L*/ SimpleExpr %prec neg /*34L*/
	| '+' /*31L*/ SimpleExpr %prec neg /*34L*/
	| SimpleExpr pipes /*22L*/ SimpleExpr
	| not2 /*35R*/ SimpleExpr %prec neg /*34L*/
	| SubSelect %prec neg /*34L*/
	| '(' /*37P*/ Expression ')' /*38P*/
	| '(' /*37P*/ ExpressionList ',' /*42P*/ Expression ')' /*38P*/
	| row '(' /*37P*/ ExpressionList ',' /*42P*/ Expression ')' /*38P*/
	| exists SubSelect
	| binaryType SimpleExpr %prec neg /*34L*/
	| builtinCast '(' /*37P*/ Expression as CastType ')' /*38P*/
	| caseKwd ExpressionOpt WhenClauseList ElseOpt end
	| convert '(' /*37P*/ Expression ',' /*42P*/ CastType ')' /*38P*/
	| convert '(' /*37P*/ Expression using /*20P*/ StringName ')' /*38P*/
	| defaultKwd '(' /*37P*/ SimpleIdent ')' /*38P*/
	| values '(' /*37P*/ SimpleIdent ')' /*38P*/ %prec lowerThanInsertValues /*11P*/
	| SimpleIdent jss stringLit /*8P*/
	| SimpleIdent juss stringLit /*8P*/
	;

DistinctKwd :
	distinct
	;

DistinctOpt :
	all
	| DistinctKwd
	;

DefaultFalseDistinctOpt :
	/*empty*/
	| DistinctOpt
	;

DefaultTrueDistinctOpt :
	/*empty*/
	| DistinctOpt
	;

BuggyDefaultFalseDistinctOpt :
	DefaultFalseDistinctOpt
	| DistinctKwd all
	;

FunctionNameConflict :
	ascii
	| charsetKwd
	| coalesce
	| collation
	| dateType
	| database
	| day
	| hour
	| ifKwd
	| interval /*6P*/ %prec lowerThanIntervalKeyword /*5P*/
	| format
	| left /*17L*/
	| microsecond
	| minute
	| month
	| builtinNow
	| quarter
	| repeat
	| replace
	| reverse
	| right /*17L*/
	| rowCount
	| second
	| timeType
	| timestampType
	| truncate
	| user
	| week
	| yearType
	;

OptionalBraces :
	/*empty*/
	| '(' /*37P*/ ')' /*38P*/
	;

FunctionNameOptionalBraces :
	currentUser
	| currentDate
	| utcDate
	;

FunctionNameDatetimePrecision :
	currentTime
	| currentTs
	| localTime
	| localTs
	| utcTime
	| utcTimestamp
	;

FunctionCallKeyword :
	FunctionNameConflict '(' /*37P*/ ExpressionListOpt ')' /*38P*/
	| builtinUser '(' /*37P*/ ExpressionListOpt ')' /*38P*/
	| FunctionNameOptionalBraces OptionalBraces
	| builtinCurDate '(' /*37P*/ ')' /*38P*/
	| FunctionNameDatetimePrecision FuncDatetimePrec
	| charType '(' /*37P*/ ExpressionList ')' /*38P*/
	| charType '(' /*37P*/ ExpressionList using /*20P*/ StringName ')' /*38P*/
	| dateType stringLit /*8P*/
	| timeType stringLit /*8P*/
	| timestampType stringLit /*8P*/
	| insert '(' /*37P*/ ExpressionListOpt ')' /*38P*/
	| mod /*32L*/ '(' /*37P*/ BitExpr ',' /*42P*/ BitExpr ')' /*38P*/
	| password '(' /*37P*/ ExpressionListOpt ')' /*38P*/
	| '{' ODBCDateTimeType stringLit /*8P*/ '}'
	;

FunctionCallNonKeyword :
	builtinCurTime '(' /*37P*/ FuncDatetimePrecListOpt ')' /*38P*/
	| builtinSysDate '(' /*37P*/ FuncDatetimePrecListOpt ')' /*38P*/
	| FunctionNameDateArithMultiForms '(' /*37P*/ Expression ',' /*42P*/ Expression ')' /*38P*/
	| FunctionNameDateArithMultiForms '(' /*37P*/ Expression ',' /*42P*/ interval /*6P*/ Expression TimeUnit ')' /*38P*/
	| FunctionNameDateArith '(' /*37P*/ Expression ',' /*42P*/ interval /*6P*/ Expression TimeUnit ')' /*38P*/
	| builtinExtract '(' /*37P*/ TimeUnit from Expression ')' /*38P*/
	| getFormat '(' /*37P*/ GetFormatSelector ',' /*42P*/ Expression ')' /*38P*/
	| builtinPosition '(' /*37P*/ BitExpr in /*27L*/ Expression ')' /*38P*/
	| builtinSubstring '(' /*37P*/ Expression ',' /*42P*/ Expression ')' /*38P*/
	| builtinSubstring '(' /*37P*/ Expression from Expression ')' /*38P*/
	| builtinSubstring '(' /*37P*/ Expression ',' /*42P*/ Expression ',' /*42P*/ Expression ')' /*38P*/
	| builtinSubstring '(' /*37P*/ Expression from Expression forKwd Expression ')' /*38P*/
	| timestampAdd '(' /*37P*/ TimestampUnit ',' /*42P*/ Expression ',' /*42P*/ Expression ')' /*38P*/
	| timestampDiff '(' /*37P*/ TimestampUnit ',' /*42P*/ Expression ',' /*42P*/ Expression ')' /*38P*/
	| builtinTrim '(' /*37P*/ Expression ')' /*38P*/
	| builtinTrim '(' /*37P*/ Expression from Expression ')' /*38P*/
	| builtinTrim '(' /*37P*/ TrimDirection from Expression ')' /*38P*/
	| builtinTrim '(' /*37P*/ TrimDirection Expression from Expression ')' /*38P*/
	;

GetFormatSelector :
	dateType
	| datetimeType
	| timeType
	| timestampType
	;

FunctionNameDateArith :
	builtinDateAdd
	| builtinDateSub
	;

FunctionNameDateArithMultiForms :
	builtinAddDate
	| builtinSubDate
	;

TrimDirection :
	both
	| leading
	| trailing
	;

SumExpr :
	avg '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinBitAnd '(' /*37P*/ Expression ')' /*38P*/ OptWindowingClause
	| builtinBitAnd '(' /*37P*/ all Expression ')' /*38P*/ OptWindowingClause
	| builtinBitOr '(' /*37P*/ Expression ')' /*38P*/ OptWindowingClause
	| builtinBitOr '(' /*37P*/ all Expression ')' /*38P*/ OptWindowingClause
	| builtinBitXor '(' /*37P*/ Expression ')' /*38P*/ OptWindowingClause
	| builtinBitXor '(' /*37P*/ all Expression ')' /*38P*/ OptWindowingClause
	| builtinCount '(' /*37P*/ DistinctKwd ExpressionList ')' /*38P*/
	| builtinCount '(' /*37P*/ all Expression ')' /*38P*/ OptWindowingClause
	| builtinCount '(' /*37P*/ Expression ')' /*38P*/ OptWindowingClause
	| builtinCount '(' /*37P*/ '*' /*32L*/ ')' /*38P*/ OptWindowingClause
	| builtinGroupConcat '(' /*37P*/ BuggyDefaultFalseDistinctOpt ExpressionList OrderByOptional OptGConcatSeparator ')' /*38P*/
	| builtinMax '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinMin '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinSum '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinStddevPop '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinStddevSamp '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinVarPop '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	| builtinVarSamp '(' /*37P*/ BuggyDefaultFalseDistinctOpt Expression ')' /*38P*/ OptWindowingClause
	;

OptGConcatSeparator :
	/*empty*/
	| separator stringLit /*8P*/
	;

FunctionCallGeneric :
	identifier '(' /*37P*/ ExpressionListOpt ')' /*38P*/
	;

FuncDatetimePrec :
	/*empty*/
	| '(' /*37P*/ ')' /*38P*/
	| '(' /*37P*/ intLit ')' /*38P*/
	;

TimeUnit :
	microsecond
	| second
	| minute
	| hour
	| day
	| week
	| month
	| quarter
	| yearType
	| secondMicrosecond
	| minuteMicrosecond
	| minuteSecond
	| hourMicrosecond
	| hourSecond
	| hourMinute
	| dayMicrosecond
	| daySecond
	| dayMinute
	| dayHour
	| yearMonth
	;

TimestampUnit :
	microsecond
	| second
	| minute
	| hour
	| day
	| week
	| month
	| quarter
	| yearType
	;

ExpressionOpt :
	/*empty*/
	| Expression
	;

WhenClauseList :
	WhenClause
	| WhenClauseList WhenClause
	;

WhenClause :
	when Expression then Expression
	;

ElseOpt :
	/*empty*/
	| elseKwd Expression
	;

CastType :
	binaryType OptFieldLen
	| charType OptFieldLen OptBinary
	| dateType
	| datetimeType OptFieldLen
	| decimalType FloatOpt
	| timeType OptFieldLen
	| signed OptInteger
	| unsigned OptInteger
	| jsonType
	;

PriorityOpt :
	/*empty*/
	| lowPriority
	| highPriority
	| delayed
	;

TableName :
	Identifier
	| Identifier '.' Identifier
	| Identifier '.' '*' /*32L*/
	;

TableNameList :
	TableName
	| TableNameList ',' /*42P*/ TableName
	;

QuickOptional :
	%prec empty /*1P*/ /*empty*/
	| quick /*39P*/
	;

PreparedStmt :
	prepare Identifier from PrepareSQL
	;

PrepareSQL :
	stringLit /*8P*/
	| UserVariable
	;

ExecuteStmt :
	execute Identifier
	| execute Identifier using /*20P*/ UserVariableList
	;

UserVariableList :
	UserVariable
	| UserVariableList ',' /*42P*/ UserVariable
	;

DeallocateStmt :
	DeallocateSym prepare Identifier
	;

DeallocateSym :
	deallocate
	| drop
	;

RollbackStmt :
	rollback
	| rollback CommitOpt
	| rollback work to savepoint StringName
	| rollback work to StringName
	| rollback to savepoint StringName
	| rollback to StringName
	;

SavepointStmt :
	savepoint StringName
	| release savepoint StringName
	;

SelectStmtBasic :
	selectKwd SelectStmtOpts SelectStmtFieldList
	;

SelectStmtFromDualTable :
	SelectStmtBasic FromDual WhereClauseOptional
	;

SelectStmtFromTable :
	SelectStmtBasic from TableRefsClause WhereClauseOptional SelectStmtGroup HavingClause WindowClauseOptional
	;

SelectStmt :
	SelectStmtBasic OrderByOptional SelectStmtLimit SelectLockOpt
	| SelectStmtFromDualTable OrderByOptional SelectStmtLimit SelectLockOpt
	| SelectStmtFromTable OrderByOptional SelectStmtLimit SelectLockOpt
	;

FromDual :
	from dual
	;

WindowClauseOptional :
	/*empty*/
	| window WindowDefinitionList
	;

WindowDefinitionList :
	WindowDefinition
	| WindowDefinitionList ',' /*42P*/ WindowDefinition
	;

WindowDefinition :
	WindowName as WindowSpec
	;

WindowName :
	Identifier
	;

WindowSpec :
	'(' /*37P*/ WindowSpecDetails ')' /*38P*/
	;

WindowSpecDetails :
	OptExistingWindowName OptPartitionClause OptWindowOrderByClause OptWindowFrameClause
	;

OptExistingWindowName :
	/*empty*/
	| WindowName
	;

OptPartitionClause :
	/*empty*/
	| partition by ByList
	;

OptWindowOrderByClause :
	/*empty*/
	| order by ByList
	;

OptWindowFrameClause :
	/*empty*/
	| WindowFrameUnits WindowFrameExtent
	;

WindowFrameUnits :
	rows
	| rangeKwd
	| groups
	;

WindowFrameExtent :
	WindowFrameStart
	| WindowFrameBetween
	;

WindowFrameStart :
	unbounded preceding
	| NumLiteral preceding
	| paramMarker preceding
	| interval /*6P*/ Expression TimeUnit preceding
	| current row
	;

WindowFrameBetween :
	between /*25L*/ WindowFrameBound and /*24L*/ WindowFrameBound
	;

WindowFrameBound :
	WindowFrameStart
	| unbounded following
	| NumLiteral following
	| paramMarker following
	| interval /*6P*/ Expression TimeUnit following
	;

OptWindowingClause :
	/*empty*/
	| WindowingClause
	;

WindowingClause :
	over WindowNameOrSpec
	;

WindowNameOrSpec :
	WindowName
	| WindowSpec
	;

WindowFuncCall :
	rowNumber '(' /*37P*/ ')' /*38P*/ WindowingClause
	| rank '(' /*37P*/ ')' /*38P*/ WindowingClause
	| denseRank '(' /*37P*/ ')' /*38P*/ WindowingClause
	| cumeDist '(' /*37P*/ ')' /*38P*/ WindowingClause
	| percentRank '(' /*37P*/ ')' /*38P*/ WindowingClause
	| ntile '(' /*37P*/ SimpleExpr ')' /*38P*/ WindowingClause
	| lead '(' /*37P*/ Expression OptLeadLagInfo ')' /*38P*/ OptNullTreatment WindowingClause
	| lag '(' /*37P*/ Expression OptLeadLagInfo ')' /*38P*/ OptNullTreatment WindowingClause
	| firstValue '(' /*37P*/ Expression ')' /*38P*/ OptNullTreatment WindowingClause
	| lastValue '(' /*37P*/ Expression ')' /*38P*/ OptNullTreatment WindowingClause
	| nthValue '(' /*37P*/ Expression ',' /*42P*/ SimpleExpr ')' /*38P*/ OptFromFirstLast OptNullTreatment WindowingClause
	;

OptLeadLagInfo :
	/*empty*/
	| ',' /*42P*/ NumLiteral OptLLDefault
	| ',' /*42P*/ paramMarker OptLLDefault
	;

OptLLDefault :
	/*empty*/
	| ',' /*42P*/ Expression
	;

OptNullTreatment :
	/*empty*/
	| respect nulls
	| ignore nulls
	;

OptFromFirstLast :
	/*empty*/
	| from first
	| from last
	;

TableRefsClause :
	TableRefs
	;

TableRefs :
	EscapedTableRef
	| TableRefs ',' /*42P*/ EscapedTableRef
	;

EscapedTableRef :
	TableRef %prec lowerThanSetKeyword /*9P*/
	| '{' Identifier TableRef '}'
	;

TableRef :
	TableFactor
	| JoinTable
	;

TableFactor :
	TableName PartitionNameListOpt TableAsNameOpt IndexHintListOpt
	| SubSelect TableAsName
	| '(' /*37P*/ TableRefs ')' /*38P*/
	;

PartitionNameListOpt :
	/*empty*/
	| partition '(' /*37P*/ PartitionNameList ')' /*38P*/
	;

TableAsNameOpt :
	/*empty*/
	| TableAsName
	;

TableAsName :
	Identifier
	| as Identifier
	;

IndexHintType :
	use KeyOrIndex
	| ignore KeyOrIndex
	| force KeyOrIndex
	;

IndexHintScope :
	/*empty*/
	| forKwd join /*17L*/
	| forKwd order by
	| forKwd group by
	;

IndexHint :
	IndexHintType IndexHintScope '(' /*37P*/ IndexNameList ')' /*38P*/
	;

IndexNameList :
	/*empty*/
	| Identifier
	| IndexNameList ',' /*42P*/ Identifier
	| primary
	;

IndexHintList :
	IndexHint
	| IndexHintList IndexHint
	;

IndexHintListOpt :
	/*empty*/
	| IndexHintList
	;

JoinTable :
	TableRef CrossOpt TableRef %prec tableRefPriority /*18L*/
	| TableRef CrossOpt TableRef on /*20P*/ Expression
	| TableRef CrossOpt TableRef using /*20P*/ '(' /*37P*/ ColumnNameList ')' /*38P*/
	| TableRef JoinType OuterOpt join /*17L*/ TableRef on /*20P*/ Expression
	| TableRef JoinType OuterOpt join /*17L*/ TableRef using /*20P*/ '(' /*37P*/ ColumnNameList ')' /*38P*/
	| TableRef natural /*17L*/ join /*17L*/ TableRef
	| TableRef natural /*17L*/ JoinType OuterOpt join /*17L*/ TableRef
	| TableRef straightJoin /*17L*/ TableRef
	| TableRef straightJoin /*17L*/ TableRef on /*20P*/ Expression
	;

JoinType :
	left /*17L*/
	| right /*17L*/
	;

OuterOpt :
	/*empty*/
	| outer
	;

CrossOpt :
	join /*17L*/
	| cross /*17L*/ join /*17L*/
	| inner /*17L*/ join /*17L*/
	;

LimitClause :
	/*empty*/
	| limit LimitOption
	;

LimitOption :
	LengthNum
	| paramMarker
	;

SelectStmtLimit :
	/*empty*/
	| limit LimitOption
	| limit LimitOption ',' /*42P*/ LimitOption
	| limit LimitOption offset LimitOption
	;

SelectStmtOpts :
	TableOptimizerHints DefaultFalseDistinctOpt PriorityOpt SelectStmtSQLCache SelectStmtCalcFoundRows SelectStmtStraightJoin
	;

TableOptimizerHints :
	/*empty*/
	| hintBegin TableOptimizerHintList hintEnd
	//| hintBegin error hintEnd
	;

HintTableList :
	Identifier
	| HintTableList ',' /*42P*/ Identifier
	;

TableOptimizerHintList :
	TableOptimizerHintOpt
	| TableOptimizerHintList TableOptimizerHintOpt
	;

TableOptimizerHintOpt :
	tidbSMJ '(' /*37P*/ HintTableList ')' /*38P*/
	| tidbINLJ '(' /*37P*/ HintTableList ')' /*38P*/
	| tidbHJ '(' /*37P*/ HintTableList ')' /*38P*/
	| maxExecutionTime '(' /*37P*/ NUM ')' /*38P*/
	| master
	;

SelectStmtCalcFoundRows :
	/*empty*/
	| sqlCalcFoundRows
	;

SelectStmtSQLCache :
	%prec empty /*1P*/ /*empty*/
	| sqlCache /*4P*/
	| sqlNoCache /*4P*/
	;

SelectStmtStraightJoin :
	%prec empty /*1P*/ /*empty*/
	| straightJoin /*17L*/
	;

SelectStmtFieldList :
	FieldList
	;

SelectStmtGroup :
	/*empty*/
	| GroupByClause
	;

SubSelect :
	'(' /*37P*/ SelectStmt ')' /*38P*/
	| '(' /*37P*/ UnionStmt ')' /*38P*/
	| '(' /*37P*/ SubSelect ')' /*38P*/
	;

SelectLockOpt :
	/*empty*/
	| forKwd update
	| forKwd share
	| forKwd update nowait
	| forKwd share nowait
	| forKwd update skip locked
	| forKwd share skip locked
	| lock in /*27L*/ share mode
	;

UnionStmt :
	UnionClauseList union UnionOpt SelectStmtBasic OrderByOptional SelectStmtLimit SelectLockOpt
	| UnionClauseList union UnionOpt SelectStmtFromDualTable OrderByOptional SelectStmtLimit SelectLockOpt
	| UnionClauseList union UnionOpt SelectStmtFromTable OrderByOptional SelectStmtLimit SelectLockOpt
	| UnionClauseList union UnionOpt '(' /*37P*/ SelectStmt ')' /*38P*/ OrderByOptional SelectStmtLimit
	;

UnionClauseList :
	UnionSelect
	| UnionClauseList union UnionOpt UnionSelect
	;

UnionSelect :
	SelectStmt
	| '(' /*37P*/ SelectStmt ')' /*38P*/
	;

UnionOpt :
	DefaultTrueDistinctOpt
	;

SetStmt :
	set /*10P*/ VariableAssignmentList
	| set /*10P*/ password eq /*27L*/ PasswordOpt
	| set /*10P*/ password forKwd Username eq /*27L*/ PasswordOpt
	| set /*10P*/ global transaction TransactionChars
	| set /*10P*/ session transaction TransactionChars
	| set /*10P*/ transaction TransactionChars
	;

SetRoleStmt :
	set /*10P*/ role SetRoleOpt
	;

SetDefaultRoleStmt :
	set /*10P*/ defaultKwd role SetDefaultRoleOpt to UsernameList
	;

SetDefaultRoleOpt :
	none
	| all
	| RolenameList
	;

SetRoleOpt :
	all except RolenameList
	| SetDefaultRoleOpt
	| defaultKwd
	;

TransactionChars :
	TransactionChar
	| TransactionChars ',' /*42P*/ TransactionChar
	;

TransactionChar :
	isolation level IsolationLevel
	| read write
	| read only
	;

IsolationLevel :
	repeatable read
	| read committed
	| read uncommitted
	| serializable
	;

SetExpr :
	on /*20P*/
	| binaryType
	| ExprOrDefault
	;

VariableAssignment :
	Identifier eq /*27L*/ SetExpr
	| global Identifier eq /*27L*/ SetExpr
	| session Identifier eq /*27L*/ SetExpr
	| local Identifier eq /*27L*/ Expression
	| doubleAtIdentifier eq /*27L*/ SetExpr
	| singleAtIdentifier eq /*27L*/ Expression
	| singleAtIdentifier assignmentEq /*21R*/ Expression
	| names CharsetName
	| names CharsetName collate /*36R*/ defaultKwd
	| names CharsetName collate /*36R*/ StringName
	| CharsetKw CharsetName
	;

CharsetName :
	StringName
	| binaryType
	;

VariableAssignmentList :
	/*empty*/
	| VariableAssignment
	| VariableAssignmentList ',' /*42P*/ VariableAssignment
	;

Variable :
	SystemVariable
	| UserVariable
	;

SystemVariable :
	doubleAtIdentifier
	;

UserVariable :
	singleAtIdentifier
	;

Username :
	StringName
	| StringName '@' StringName
	| StringName singleAtIdentifier
	| currentUser OptionalBraces
	;

UsernameList :
	Username
	| UsernameList ',' /*42P*/ Username
	;

PasswordOpt :
	stringLit /*8P*/
	| password '(' /*37P*/ AuthString ')' /*38P*/
	;

AuthString :
	stringLit /*8P*/
	;

RoleNameString :
	stringLit /*8P*/
	| identifier
	;

Rolename :
	RoleNameString
	| StringName '@' StringName
	| StringName singleAtIdentifier
	;

RolenameList :
	Rolename
	| RolenameList ',' /*42P*/ Rolename
	;

AdminStmt :
	admin show ddl
	| admin show ddl jobs
	| admin show ddl jobs NUM
	| admin show TableName next_row_id
	| admin check tableKwd TableNameList
	| admin check index TableName Identifier
	| admin recover index TableName Identifier
	| admin restore tableKwd by job NUM
	| admin restore tableKwd TableName
	| admin restore tableKwd TableName NUM
	| admin cleanup index TableName Identifier
	| admin check index TableName Identifier HandleRangeList
	| admin checksum tableKwd TableNameList
	| admin cancel ddl jobs NumList
	| admin show ddl job queries NumList
	| admin show slow AdminShowSlow
	;

AdminShowSlow :
	recent NUM
	| top NUM
	| top internal NUM
	| top all NUM
	;

HandleRangeList :
	HandleRange
	| HandleRangeList ',' /*42P*/ HandleRange
	;

HandleRange :
	'(' /*37P*/ NUM ',' /*42P*/ NUM ')' /*38P*/
	;

NumList :
	NUM
	| NumList ',' /*42P*/ NUM
	;

ShowStmt :
	show ShowTargetFilterable ShowLikeOrWhereOpt
	| show create tableKwd TableName
	| show create view TableName
	| show create database IfNotExists DBName
	| show create user Username
	| show grants
	| show grants forKwd Username
	| show master status
	| show OptFull processlist
	| show statsMeta ShowLikeOrWhereOpt
	| show statsHistograms ShowLikeOrWhereOpt
	| show statsBuckets ShowLikeOrWhereOpt
	| show statsHealthy ShowLikeOrWhereOpt
	| show profiles
	| show privileges
	;

ShowIndexKwd :
	index
	| indexes
	| keys
	;

FromOrIn :
	from
	| in /*27L*/
	;

ShowTargetFilterable :
	engines
	| databases
	| CharsetKw
	| OptFull tables ShowDatabaseNameOpt
	| tableKwd status ShowDatabaseNameOpt
	| ShowIndexKwd FromOrIn TableName
	| ShowIndexKwd FromOrIn Identifier FromOrIn Identifier
	| OptFull columns ShowTableAliasOpt ShowDatabaseNameOpt
	| OptFull fields ShowTableAliasOpt ShowDatabaseNameOpt
	| warnings
	| identSQLErrors
	| GlobalScope variables
	| GlobalScope status
	| GlobalScope bindings
	| collation
	| triggers ShowDatabaseNameOpt
	| procedure status
	| pump status
	| drainer status
	| function status
	| events ShowDatabaseNameOpt
	| plugins
	;

ShowLikeOrWhereOpt :
	/*empty*/
	| like /*27L*/ SimpleExpr
	| where Expression
	;

GlobalScope :
	/*empty*/
	| global
	| session
	;

OptFull :
	/*empty*/
	| full /*17L*/
	;

ShowDatabaseNameOpt :
	/*empty*/
	| FromOrIn DBName
	;

ShowTableAliasOpt :
	FromOrIn TableName
	;

FlushStmt :
	flush NoWriteToBinLogAliasOpt FlushOption
	;

PluginNameList :
	Identifier
	| PluginNameList ',' /*42P*/ Identifier
	;

FlushOption :
	privileges
	| status
	| tidb plugins PluginNameList
	| TableOrTables TableNameListOpt WithReadLockOpt
	;

NoWriteToBinLogAliasOpt :
	/*empty*/
	| noWriteToBinLog
	| local
	;

TableNameListOpt :
	%prec empty /*1P*/ /*empty*/
	| TableNameList
	;

WithReadLockOpt :
	/*empty*/
	| with /*3P*/ read lock
	;

Statement :
	EmptyStmt
	| AdminStmt
	| AlterTableStmt
	| AlterUserStmt
	| AnalyzeTableStmt
	| BeginTransactionStmt
	| BinlogStmt
	| CommitStmt
	| DeallocateStmt
	| DeleteFromStmt
	| ExecuteStmt
	| ExplainStmt
	| CreateDatabaseStmt
	| CreateIndexStmt
	| CreateTableStmt
	| CreateViewStmt
	| CreateUserStmt
	| CreateRoleStmt
	| CreateBindingStmt
	| DoStmt
	| DropDatabaseStmt
	| DropIndexStmt
	| DropTableStmt
	| DropViewStmt
	| DropUserStmt
	| DropRoleStmt
	| DropStatsStmt
	| DropBindingStmt
	| FlushStmt
	| GrantStmt
	| GrantRoleStmt
	| InsertIntoStmt
	| KillStmt
	| LoadDataStmt
	| LoadStatsStmt
	| PreparedStmt
	| RollbackStmt
	| RenameTableStmt
	| ReplaceIntoStmt
	| RevokeStmt
	| RevokeRoleStmt
	| SavepointStmt
	| SelectStmt
	| UnionStmt
	| SetStmt
	| SetRoleStmt
	| SetDefaultRoleStmt
	| ShowStmt
	| SubSelect
	| TraceStmt
	| TruncateTableStmt
	| UpdateStmt
	| UseStmt
	| UnlockTablesStmt
	| LockTablesStmt
	;

TraceableStmt :
	SelectStmt
	| DeleteFromStmt
	| UpdateStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	| UnionStmt
	;

ExplainableStmt :
	SelectStmt
	| DeleteFromStmt
	| UpdateStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	| UnionStmt
	;

StatementList :
	Statement
	| StatementList ';' Statement
	;

Constraint :
	ConstraintKeywordOpt ConstraintElem
	;

TableElement :
	ColumnDef
	| Constraint
	| check '(' /*37P*/ Expression ')' /*38P*/
	;

TableElementList :
	TableElement
	| TableElementList ',' /*42P*/ TableElement
	;

TableElementListOpt :
	%prec lowerThanCreateTableSelect /*13P*/ /*empty*/
	| '(' /*37P*/ TableElementList ')' /*38P*/
	;

TableOption :
	engine StringName
	| engine eq /*27L*/ StringName
	| DefaultKwdOpt CharsetKw EqOpt CharsetName
	| DefaultKwdOpt collate /*36R*/ EqOpt StringName
	| autoIncrement EqOpt LengthNum
	| comment EqOpt stringLit /*8P*/
	| avgRowLength EqOpt LengthNum
	| connection EqOpt stringLit /*8P*/
	| checksum EqOpt LengthNum
	| password EqOpt stringLit /*8P*/
	| compression EqOpt stringLit /*8P*/
	| keyBlockSize EqOpt LengthNum
	| maxRows EqOpt LengthNum
	| minRows EqOpt LengthNum
	| delayKeyWrite EqOpt LengthNum
	| RowFormat
	| statsPersistent EqOpt StatsPersistentVal
	| shardRowIDBits EqOpt LengthNum
	| packKeys EqOpt StatsPersistentVal
	;

StatsPersistentVal :
	defaultKwd
	| LengthNum
	;

AlterTableOptionListOpt :
	/*empty*/
	| TableOptionList %prec higherThanComma /*43P*/
	;

CreateTableOptionListOpt :
	%prec lowerThanCreateTableSelect /*13P*/ /*empty*/
	| TableOptionList %prec lowerThanComma /*41P*/
	;

TableOptionList :
	TableOption
	| TableOptionList TableOption
	| TableOptionList ',' /*42P*/ TableOption
	;

OptTable :
	/*empty*/
	| tableKwd
	;

TruncateTableStmt :
	truncate OptTable TableName
	;

RowFormat :
	rowFormat EqOpt defaultKwd
	| rowFormat EqOpt dynamic
	| rowFormat EqOpt fixed
	| rowFormat EqOpt compressed
	| rowFormat EqOpt redundant
	| rowFormat EqOpt compact
	;

Type :
	NumericType
	| StringType
	| DateAndTimeType
	;

NumericType :
	IntegerType OptFieldLen FieldOpts
	| BooleanType FieldOpts
	| FixedPointType FloatOpt FieldOpts
	| FloatingPointType FloatOpt FieldOpts
	| BitValueType OptFieldLen
	;

IntegerType :
	tinyIntType
	| smallIntType
	| mediumIntType
	| intType
	| int1Type
	| int2Type
	| int3Type
	| int4Type
	| int8Type
	| integerType
	| bigIntType
	;

BooleanType :
	boolType
	| booleanType
	;

OptInteger :
	/*empty*/
	| integerType
	| intType
	;

FixedPointType :
	decimalType
	| numericType
	;

FloatingPointType :
	floatType
	| realType
	| doubleType
	| doubleType precisionType
	;

BitValueType :
	bitType
	;

StringType :
	NationalOpt charType FieldLen OptBinary OptCollate
	| NationalOpt charType OptBinary OptCollate
	| national character FieldLen OptBinary OptCollate
	| Varchar FieldLen OptBinary OptCollate
	| binaryType OptFieldLen
	| varbinaryType FieldLen
	| BlobType
	| TextType OptBinary OptCollate
	| enum '(' /*37P*/ StringList ')' /*38P*/ OptCharset OptCollate
	| set /*10P*/ '(' /*37P*/ StringList ')' /*38P*/ OptCharset OptCollate
	| jsonType
	;

NationalOpt :
	/*empty*/
	| national
	;

Varchar :
	national varcharType
	| varcharType
	| nvarcharType
	;

BlobType :
	tinyblobType
	| blobType OptFieldLen
	| mediumblobType
	| longblobType
	;

TextType :
	tinytextType
	| textType OptFieldLen
	| mediumtextType
	| longtextType
	| long varcharType
	;

DateAndTimeType :
	dateType
	| datetimeType OptFieldLen
	| timestampType OptFieldLen
	| timeType OptFieldLen
	| yearType OptFieldLen FieldOpts
	;

FieldLen :
	'(' /*37P*/ LengthNum ')' /*38P*/
	;

OptFieldLen :
	/*empty*/
	| FieldLen
	;

FieldOpt :
	unsigned
	| signed
	| zerofill
	;

FieldOpts :
	/*empty*/
	| FieldOpts FieldOpt
	;

FloatOpt :
	/*empty*/
	| FieldLen
	| Precision
	;

Precision :
	'(' /*37P*/ LengthNum ',' /*42P*/ LengthNum ')' /*38P*/
	;

OptBinMod :
	/*empty*/
	| binaryType
	;

OptBinary :
	/*empty*/
	| binaryType OptCharset
	| CharsetKw CharsetName OptBinMod
	;

OptCharset :
	/*empty*/
	| CharsetKw CharsetName
	;

CharsetKw :
	character set /*10P*/
	| charsetKwd
	;

OptCollate :
	/*empty*/
	| collate /*36R*/ StringName
	;

StringList :
	stringLit /*8P*/
	| StringList ',' /*42P*/ stringLit /*8P*/
	;

StringName :
	stringLit /*8P*/
	| Identifier
	;

UpdateStmt :
	update TableOptimizerHints PriorityOpt IgnoreOptional TableRef set /*10P*/ AssignmentList WhereClauseOptional OrderByOptional LimitClause
	| update TableOptimizerHints PriorityOpt IgnoreOptional TableRefs set /*10P*/ AssignmentList WhereClauseOptional
	;

UseStmt :
	use DBName
	;

WhereClause :
	where Expression
	;

WhereClauseOptional :
	/*empty*/
	| WhereClause
	;

//CommaOpt :
//	/*empty*/
//	| ',' /*42P*/
//	;

CreateUserStmt :
	create user IfNotExists UserSpecList
	;

CreateRoleStmt :
	create role IfNotExists RoleSpecList
	;

AlterUserStmt :
	alter user IfExists UserSpecList
	| alter user IfExists user '(' /*37P*/ ')' /*38P*/ identified by AuthString
	;

UserSpec :
	Username AuthOption
	;

UserSpecList :
	UserSpec
	| UserSpecList ',' /*42P*/ UserSpec
	;

AuthOption :
	/*empty*/
	| identified by AuthString
	| identified with /*3P*/ StringName
	| identified with /*3P*/ StringName by AuthString
	| identified with /*3P*/ StringName as HashString
	| identified by password HashString
	;

HashString :
	stringLit /*8P*/
	;

RoleSpec :
	Rolename
	;

RoleSpecList :
	RoleSpec
	| RoleSpecList ',' /*42P*/ RoleSpec
	;

CreateBindingStmt :
	create GlobalScope binding forKwd SelectStmt using /*20P*/ SelectStmt
	;

DropBindingStmt :
	drop GlobalScope binding forKwd SelectStmt
	;

GrantStmt :
	grant PrivElemList on /*20P*/ ObjectType PrivLevel to UserSpecList WithGrantOptionOpt
	;

GrantRoleStmt :
	grant RolenameList to UsernameList
	;

WithGrantOptionOpt :
	/*empty*/
	| with /*3P*/ grant option
	| with /*3P*/ maxQueriesPerHour NUM
	| with /*3P*/ maxUpdatesPerHour NUM
	| with /*3P*/ maxConnectionsPerHour NUM
	| with /*3P*/ maxUserConnections NUM
	;

PrivElem :
	PrivType
	| PrivType '(' /*37P*/ ColumnNameList ')' /*38P*/
	;

PrivElemList :
	PrivElem
	| PrivElemList ',' /*42P*/ PrivElem
	;

PrivType :
	all
	| all privileges
	| alter
	| create
	| create user
	| trigger
	| deleteKwd
	| drop
	| process
	| execute
	| index
	| insert
	| selectKwd
	| super
	| show databases
	| update
	| grant option
	| references
	| replication slave
	| replication client
	| usage
	| reload
	| create temporary tables
	| lock tables
	| create view
	| show view
	| create role
	| drop role
	| create routine
	| alter routine
	| event
	;

ObjectType :
	/*empty*/
	| tableKwd
	;

PrivLevel :
	'*' /*32L*/
	| '*' /*32L*/ '.' '*' /*32L*/
	| Identifier '.' '*' /*32L*/
	| Identifier '.' Identifier
	| Identifier
	;

RevokeStmt :
	revoke PrivElemList on /*20P*/ ObjectType PrivLevel from UserSpecList
	;

RevokeRoleStmt :
	revoke RolenameList from UsernameList
	;

LoadDataStmt :
	load data LocalOpt infile stringLit /*8P*/ into tableKwd TableName CharsetOpt Fields Lines IgnoreLines ColumnNameListOptWithBrackets
	;

IgnoreLines :
	/*empty*/
	| ignore NUM lines
	;

CharsetOpt :
	/*empty*/
	| character set /*10P*/ CharsetName
	;

LocalOpt :
	/*empty*/
	| local
	;

Fields :
	/*empty*/
	| FieldsOrColumns FieldsTerminated Enclosed Escaped
	;

FieldsOrColumns :
	fields
	| columns
	;

FieldsTerminated :
	/*empty*/
	| terminated by stringLit /*8P*/
	;

Enclosed :
	/*empty*/
	| optionally enclosed by stringLit /*8P*/
	| enclosed by stringLit /*8P*/
	;

Escaped :
	/*empty*/
	| escaped by stringLit /*8P*/
	;

Lines :
	/*empty*/
	| lines Starting LinesTerminated
	;

Starting :
	/*empty*/
	| starting by stringLit /*8P*/
	;

LinesTerminated :
	/*empty*/
	| terminated by stringLit /*8P*/
	;

UnlockTablesStmt :
	unlock TablesTerminalSym
	;

LockTablesStmt :
	lock TablesTerminalSym TableLockList
	;

TablesTerminalSym :
	tables
	| tableKwd
	;

TableLock :
	TableName LockType
	;

LockType :
	read
	| read local
	| write
	| write local
	;

TableLockList :
	TableLock
	| TableLockList ',' /*42P*/ TableLock
	;

KillStmt :
	KillOrKillTiDB NUM
	| KillOrKillTiDB connection NUM
	| KillOrKillTiDB query NUM
	;

KillOrKillTiDB :
	kill
	| kill tidb
	;

LoadStatsStmt :
	load stats stringLit /*8P*/
	;

%%

%option caseless

%%

[ \t\r\n]+	skip()
"--".*	skip()
"/*"(?s:.)*?"*/"	skip()

"!"	'!'
"!="	neq
"%"	'%'
"&"	'&'
"&&"	andand
"("	'('
")"	')'
"*"	'*'
"+"	'+'
","	','
"-"	'-'
"."	'.'
"/"	'/'
";"	';'
"<"	'<'
"<<"	lsh
"<="	le
"<=>"	nulleq
"<>"	neqSynonym
"="	eq
">"	'>'
">="	ge
">>"	rsh
"@"	'@'
"UNDERSCORE_CHARSET"	"UNDERSCORE_CHARSET"
"^"	'^'
//"d"	"d"
//"t"	"t"
//"ts"	"ts"
"{"	'{'
"|"	'|'
"}"	'}'
"~"	'~'

"ACTION"                   action
"ADD"                      add
//"ADDDATE"                  addDate
"ADMIN"                    admin
"AFTER"                    after
"ALL"                      all
"ALGORITHM"                algorithm
"ALTER"                    alter
"ALWAYS"                   always
"ANALYZE"                  analyze
"AND"                      and
"ANY"                      any
"AS"                       as
"ASC"                      asc
"ASCII"                    ascii
"AUTO_INCREMENT"           autoIncrement
"AVG"                      avg
"AVG_ROW_LENGTH"           avgRowLength
"BEGIN"                    begin
"BETWEEN"                  between
"BIGINT"                   bigIntType
"BINARY"                   binaryType
"BINLOG"                   binlog
"BIT"                      bitType
//"BIT_AND"                  bitAnd
//"BIT_OR"                   bitOr
//"BIT_XOR"                  bitXor
"BLOB"                     blobType
"BOOL"                     boolType
"BOOLEAN"                  booleanType
"BOTH"                     both
"BTREE"                    btree
"BUCKETS"                  buckets
"BY"                       by
"BYTE"                     byteType
"CANCEL"                   cancel
"CASCADE"                  cascade
"CASCADED"                 cascaded
"CASE"                     caseKwd
//"CAST"                     cast
"CHANGE"                   change
"CHAR"                     charType
"CHARACTER"                character
"CHARSET"                  charsetKwd
"CHECK"                    check
"CHECKSUM"                 checksum
"CLEANUP"                  cleanup
"CLIENT"                   client
"COALESCE"                 coalesce
"COLLATE"                  collate
"COLLATION"                collation
"COLUMN"                   column
"COLUMNS"                  columns
"COMMENT"                  comment
"COMMIT"                   commit
"COMMITTED"                committed
"COMPACT"                  compact
"COMPRESSED"               compressed
"COMPRESSION"              compression
"CONNECTION"               connection
"CONSISTENT"               consistent
"CONSTRAINT"               constraint
"CONVERT"                  convert
"COPY"                     copyKwd
//"COUNT"                    count
"CREATE"                   create
"CROSS"                    cross
"CURRENT"                  current
"CURRENT_DATE"             currentDate
"CURRENT_TIME"             currentTime
"CURRENT_TIMESTAMP"        currentTs
"CURRENT_USER"             currentUser
//"CURTIME"                  curTime
"DATA"                     data
"DATABASE"                 database
"DATABASES"                databases
"DATE"                     dateType
//"DATE_ADD"                 dateAdd
//"DATE_SUB"                 dateSub
"DATETIME"                 datetimeType
"DAY"                      day
"DAY_HOUR"                 dayHour
"DAY_MICROSECOND"          dayMicrosecond
"DAY_MINUTE"               dayMinute
"DAY_SECOND"               daySecond
"DDL"                      ddl
"DEALLOCATE"               deallocate
"DEC"                      decimalType
"DECIMAL"                  decimalType
"DEFAULT"                  defaultKwd
"DEFINER"                  definer
"DELAY_KEY_WRITE"          delayKeyWrite
"DELAYED"                  delayed
"DELETE"                   deleteKwd
"DESC"                     desc
"DESCRIBE"                 describe
"DISABLE"                  disable
"DISTINCT"                 distinct
"DISTINCTROW"              distinct
"DIV"                      div
"DO"                       do
"DOUBLE"                   doubleType
"DRAINER"                  drainer
"DROP"                     drop
"DUAL"                     dual
"DUPLICATE"                duplicate
"DYNAMIC"                  dynamic
"ELSE"                     elseKwd
"ENABLE"                   enable
"ENCLOSED"                 enclosed
"END"                      end
"ENGINE"                   engine
"ENGINES"                  engines
"ENUM"                     enum
"ESCAPE"                   escape
"ESCAPED"                  escaped
"EVENT"                    event
"EVENTS"                   events
"EXCLUSIVE"                exclusive
"EXCEPT"                   except
"EXECUTE"                  execute
"EXISTS"                   exists
"EXPLAIN"                  explain
//"EXTRACT"                  extract
"FALSE"                    falseKwd
"FIELDS"                   fields
"FIRST"                    first
"FIXED"                    fixed
"FLOAT"                    floatType
"FLUSH"                    flush
"FOLLOWING"                following
"FOR"                      forKwd
"FORCE"                    force
"FOREIGN"                  foreign
"FORMAT"                   format
"FROM"                     from
"FULL"                     full
"FULLTEXT"                 fulltext
"FUNCTION"                 function
"GENERATED"                generated
"GET_FORMAT"               getFormat
"GLOBAL"                   global
"GRANT"                    grant
"GRANTS"                   grants
"GROUP"                    group
//"GROUP_CONCAT"             groupConcat
"HASH"                     hash
"HAVING"                   having
"HIGH_PRIORITY"            highPriority
"HOUR"                     hour
"HOUR_MICROSECOND"         hourMicrosecond
"HOUR_MINUTE"              hourMinute
"HOUR_SECOND"              hourSecond
"IDENTIFIED"               identified
"IF"                       ifKwd
"IGNORE"                   ignore
"IN"                       in
"INDEX"                    index
"INDEXES"                  indexes
"INFILE"                   infile
"INNER"                    inner
"INPLACE"                  inplace
"INSTANT"                  instant
"INSERT"                   insert
"INT"                      intType
"INT1"                     int1Type
"INT2"                     int2Type
"INT3"                     int3Type
"INT4"                     int4Type
"INT8"                     int8Type
"INTEGER"                  integerType
"INTERVAL"                 interval
"INTERNAL"                 internal
"INTO"                     into
"INVOKER"                  invoker
"IS"                       is
"ISOLATION"                isolation
"JOBS"                     jobs
"JOB"                      job
"JOIN"                     join
"JSON"                     jsonType
"KEY"                      key
"KEY_BLOCK_SIZE"           keyBlockSize
"KEYS"                     keys
"KILL"                     kill
"LAST"                     last
"LEADING"                  leading
"LEFT"                     left
"LESS"                     less
"LEVEL"                    level
"LIKE"                     like
"LIMIT"                    limit
"LINES"                    lines
"LOAD"                     load
"LOCAL"                    local
"LOCALTIME"                localTime
"LOCALTIMESTAMP"           localTs
"LOCK"                     lock
"LONG"                     long
"LONGBLOB"                 longblobType
"LONGTEXT"                 longtextType
"LOW_PRIORITY"             lowPriority
"MASTER"                   master
//"MAX"                      max
"MAX_CONNECTIONS_PER_HOUR" maxConnectionsPerHour
"MAX_EXECUTION_TIME"       maxExecutionTime
"MAX_QUERIES_PER_HOUR"     maxQueriesPerHour
"MAX_ROWS"                 maxRows
"MAX_UPDATES_PER_HOUR"     maxUpdatesPerHour
"MAX_USER_CONNECTIONS"     maxUserConnections
"MAXVALUE"                 maxValue
"MEDIUMBLOB"               mediumblobType
"MEDIUMINT"                mediumIntType
"MEDIUMTEXT"               mediumtextType
"MERGE"                    merge
"MICROSECOND"              microsecond
//"MIN"                      min
"MIN_ROWS"                 minRows
"MINUTE"                   minute
"MINUTE_MICROSECOND"       minuteMicrosecond
"MINUTE_SECOND"            minuteSecond
"MOD"                      mod
"MODE"                     mode
"MODIFY"                   modify
"MONTH"                    month
"NAMES"                    names
"NATIONAL"                 national
"NATURAL"                  natural
"NEXT_ROW_ID"              next_row_id
"NO"                       no
"NO_WRITE_TO_BINLOG"       noWriteToBinLog
"NONE"                     none
"NOT"                      not
//"NOW"                      now
"NULL"                     null
"NULLS"                    nulls
"NUMERIC"                  numericType
"NVARCHAR"                 nvarcharType
"OFFSET"                   offset
"ON"                       on
"ONLY"                     only
"OPTION"                   option
"OPTIONALLY"               optionally
"OR"                       or
"ORDER"                    order
"OUTER"                    outer
"PACK_KEYS"                packKeys
"PARTITION"                partition
"PARTITIONS"               partitions
"PASSWORD"                 password
"PLUGINS"                  plugins
//"POSITION"                 position
"PRECEDING"                preceding
"PRECISION"                precisionType
"PREPARE"                  prepare
"PRIMARY"                  primary
"PRIVILEGES"               privileges
"PROCEDURE"                procedure
"PROCESS"                  process
"PROCESSLIST"              processlist
"PROFILES"                 profiles
"PUMP"                     pump
"QUARTER"                  quarter
"QUERY"                    query
"QUERIES"                  queries
"QUICK"                    quick
"SHARD_ROW_ID_BITS"        shardRowIDBits
"RANGE"                    rangeKwd
"RECOVER"                  recover
"READ"                     read
"REAL"                     realType
"RECENT"                   recent
"REDUNDANT"                redundant
"REFERENCES"               references
"REGEXP"                   regexpKwd
"RELOAD"                   reload
"RENAME"                   rename
"REPEAT"                   repeat
"REPEATABLE"               repeatable
"REPLACE"                  replace
"RESPECT"                  respect
"REPLICATION"              replication
"RESTRICT"                 restrict
"RESTORE"                  restore
"REVERSE"                  reverse
"REVOKE"                   revoke
"RIGHT"                    right
"RLIKE"                    rlike
"ROLE"                     role
"ROLLBACK"                 rollback
"ROLLUP"                   rollup
"ROUTINE"                  routine
"ROW"                      row
"ROW_COUNT"                rowCount
"ROW_FORMAT"               rowFormat
"SAVEPOINT"                savepoint
"SCHEMA"                   database
"SCHEMAS"                  databases
"SECOND"                   second
"SECOND_MICROSECOND"       secondMicrosecond
"SECURITY"                 security
"SELECT"                   selectKwd
"SERIALIZABLE"             serializable
"SESSION"                  session
"SET"                      set
"SEPARATOR"                separator
"SHARE"                    share
"SHARED"                   shared
"SHOW"                     show
"SIGNED"                   signed
"SLAVE"                    slave
"SLOW"                     slow
"SMALLINT"                 smallIntType
"SNAPSHOT"                 snapshot
"SOME"                     some
"SQL"                      sql
"SQL_CACHE"                sqlCache
"SQL_CALC_FOUND_ROWS"      sqlCalcFoundRows
"SQL_NO_CACHE"             sqlNoCache
"START"                    start
"STARTING"                 starting
"STATS"                    stats
"STATS_BUCKETS"            statsBuckets
"STATS_HISTOGRAMS"         statsHistograms
"STATS_HEALTHY"            statsHealthy
"STATS_META"               statsMeta
"STATS_PERSISTENT"         statsPersistent
"STATUS"                   status
//"STD"                      stddevPop
//"STDDEV"                   stddevPop
//"STDDEV_POP"               stddevPop
//"STDDEV_SAMP"              stddevSamp
"STORED"                   stored
"STRAIGHT_JOIN"            straightJoin
//"SUBDATE"                  subDate
"SUBPARTITION"             subpartition
"SUBPARTITIONS"            subpartitions
//"SUBSTR"                   substring
//"SUBSTRING"                substring
//"SUM"                      sum
"SUPER"                    super
"TABLE"                    tableKwd
"TABLES"                   tables
"TABLESPACE"               tablespace
"TEMPORARY"                temporary
"TEMPTABLE"                temptable
"TERMINATED"               terminated
"TEXT"                     textType
"THAN"                     than
"THEN"                     then
"TIDB"                     tidb
"TIDB_HJ"                  tidbHJ
"TIDB_INLJ"                tidbINLJ
"TIDB_SMJ"                 tidbSMJ
"TIME"                     timeType
"TIMESTAMP"                timestampType
"TIMESTAMPADD"             timestampAdd
"TIMESTAMPDIFF"            timestampDiff
"TINYBLOB"                 tinyblobType
"TINYINT"                  tinyIntType
"TINYTEXT"                 tinytextType
"TO"                       to
"TOP"                      top
"TRACE"                    trace
"TRAILING"                 trailing
"TRANSACTION"              transaction
"TRIGGER"                  trigger
"TRIGGERS"                 triggers
//"TRIM"                     trim
"TRUE"                     trueKwd
"TRUNCATE"                 truncate
"UNBOUNDED"                unbounded
"UNCOMMITTED"              uncommitted
"UNDEFINED"                undefined
"UNION"                    union
"UNIQUE"                   unique
"UNKNOWN"                  unknown
"UNLOCK"                   unlock
"UNSIGNED"                 unsigned
"UPDATE"                   update
"USAGE"                    usage
"USE"                      use
"USER"                     user
"USING"                    using
"UTC_DATE"                 utcDate
"UTC_TIME"                 utcTime
"UTC_TIMESTAMP"            utcTimestamp
"VALUE"                    value
"VALUES"                   values
"VARBINARY"                varbinaryType
"VARCHAR"                  varcharType
"VARIABLES"                variables
//"VARIANCE"                 varPop
//"VAR_POP"                  varPop
//"VAR_SAMP"                 varSamp
"VIEW"                     view
"VIRTUAL"                  virtual
"WARNINGS"                 warnings
"ERRORS"                   identSQLErrors
"WEEK"                     week
"WHEN"                     when
"WHERE"                    where
"WITH"                     with
"WRITE"                    write
"XOR"                      xor
"YEAR"                     yearType
"YEAR_MONTH"               yearMonth
"ZEROFILL"                 zerofill
"BINDING"                  binding
"BINDINGS"                 bindings
"WORK"                     work
"CHAIN"                    chain
"RELEASE"                  release
"NOWAIT"                   nowait
"SKIP"                     skip
"LOCKED"                   locked

// See https://dev.mysql.com/doc/refman/5.7/en/function-resolution.html for details
"ADDDATE"      builtinAddDate
"BIT_AND"      builtinBitAnd
"BIT_OR"       builtinBitOr
"BIT_XOR"      builtinBitXor
"CAST"         builtinCast
"COUNT"        builtinCount
"CURDATE"      builtinCurDate
"CURTIME"      builtinCurTime
"DATE_ADD"     builtinDateAdd
"DATE_SUB"     builtinDateSub
"EXTRACT"      builtinExtract
"GROUP_CONCAT" builtinGroupConcat
"MAX"          builtinMax
"MID"          builtinSubstring
"MIN"          builtinMin
"NOW"          builtinNow
"POSITION"     builtinPosition
"SESSION_USER" builtinUser
"STD"          builtinStddevPop
"STDDEV"       builtinStddevPop
"STDDEV_POP"   builtinStddevPop
"STDDEV_SAMP"  builtinStddevSamp
"SUBDATE"      builtinSubDate
"SUBSTR"       builtinSubstring
"SUBSTRING"    builtinSubstring
"SUM"          builtinSum
"SYSDATE"      builtinSysDate
"SYSTEM_USER"  builtinUser
"TRIM"         builtinTrim
"VARIANCE"     builtinVarPop
"VAR_POP"      builtinVarPop
"VAR_SAMP"     builtinVarSamp

"CUME_DIST"    cumeDist
"DENSE_RANK"   denseRank
"FIRST_VALUE"  firstValue
"GROUPS"       groups
"LAG"          lag
"LAST_VALUE"   lastValue
"LEAD"         lead
"NTH_VALUE"    nthValue
"NTILE"        ntile
"OVER"         over
"PERCENT_RANK" percentRank
"RANK"         rank
"ROWS"         rows
"ROW_NUMBER"   rowNumber
"WINDOW"       window

":="	assignmentEq
createTableSelect	createTableSelect
doubleAtIdentifier	doubleAtIdentifier
hintBegin	hintBegin
hintEnd	hintEnd
insertValues	insertValues
jss	jss
juss	juss
not2	not2
"?"	paramMarker
"||"	pipes
pipesAsOr	pipesAsOr
singleAtIdentifier	singleAtIdentifier

'("''"|[^'])*'	stringLit

0B[01]+	bitLit
decLit	decLit
[0-9]+"."[0-9]+	floatLit
0X[0-9A-F]+	hexLit
[0-9]+	intLit

[A-Z_][A-Z0-9_]*	identifier

%%
