//From: https://github.com/pingcap/tidb/blob/3ccd09e63addddeb0d33b5b87594a2d61fffd1d8/parser/parser.y
// Copyright 2013 The ql Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSES/QL-LICENSE file.

// Copyright 2015 PingCAP, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// See the License for the specific language governing permissions and
// limitations under the License.

// Initial yacc source generated by ebnf2y[1]
// at 2013-10-04 23:10:47.861401015 +0200 CEST
//
//  $ ebnf2y -o ql.y -oe ql.ebnf -start StatementList -pkg ql -p _
//
//   [1]: http://github.com/cznic/ebnf2y

/*Tokens*/
%token identifier
%token asof
%token toTimestamp
%token memberof
%token optionallyEnclosedBy
%token underscoreCS
%token stringLit
%token singleAtIdentifier
%token doubleAtIdentifier
//%token invalid
%token hintComment
%token andand
%token pipes
//%token odbcDateType
//%token odbcTimeType
//%token odbcTimestampType
%token add
%token all
%token alter
%token analyze
%token and
%token array
%token as
%token asc
%token between
%token bigIntType
%token binaryType
%token blobType
%token both
%token by
%token call
%token cascade
%token caseKwd
%token change
%token character
%token charType
%token check
%token collate
%token column
%token constraint
%token continueKwd
%token convert
%token create
%token cross
%token cumeDist
%token currentDate
%token currentTime
%token currentTs
%token currentUser
%token currentRole
%token cursor
%token database
%token databases
%token dayHour
%token dayMicrosecond
%token dayMinute
%token daySecond
%token decimalType
%token defaultKwd
%token delayed
%token deleteKwd
%token denseRank
%token desc
%token describe
%token distinct
%token distinctRow
%token div
%token doubleType
%token drop
%token dual
%token elseIfKwd
%token elseKwd
%token enclosed
%token escaped
%token exists
%token exit
%token explain
%token except
%token falseKwd
%token fetch
%token firstValue
%token floatType
%token float4Type
%token float8Type
%token forKwd
%token force
%token foreign
%token from
%token fulltext
%token generated
%token grant
%token group
%token groups
%token having
%token highPriority
%token hourMicrosecond
%token hourMinute
%token hourSecond
%token ifKwd
%token ignore
%token in
%token index
%token infile
%token inner
%token inout
%token integerType
%token intersect
%token interval
%token into
%token outfile
%token is
%token insert
%token intType
%token int1Type
%token int2Type
%token int3Type
%token int4Type
%token int8Type
%token iterate
%token join
%token key
%token keys
%token kill
%token lag
%token lastValue
%token lead
%token leading
%token leave
%token left
%token like
%token ilike
%token limit
%token lines
%token linear
%token load
%token localTime
%token localTs
%token lock
%token longblobType
%token longtextType
%token lowPriority
%token match
%token maxValue
%token mediumblobType
%token mediumIntType
%token mediumtextType
%token middleIntType
%token minuteMicrosecond
%token minuteSecond
%token mod
%token not
%token noWriteToBinLog
%token nthValue
%token ntile
%token null
%token numericType
%token of
%token on
%token optimize
%token option
%token optionally
%token or
%token order
%token out
%token outer
%token over
%token partition
%token percentRank
%token precisionType
%token primary
%token procedure
%token rangeKwd
%token rank
%token read
%token realType
%token recursive
%token references
%token regexpKwd
%token release
%token rename
%token repeat
%token replace
%token require
%token restrict
%token revoke
%token right
%token rlike
%token row
%token rows
%token rowNumber
%token secondMicrosecond
%token selectKwd
%token set
%token show
%token smallIntType
%token spatial
%token sql
%token sqlBigResult
%token sqlCalcFoundRows
%token sqlSmallResult
%token sqlexception
%token sqlstate
%token sqlwarning
%token ssl
%token starting
%token statsExtended
%token straightJoin
%token tidbCurrentTSO
%token tableKwd
%token tableSample
%token stored
%token terminated
%token then
%token tinyblobType
%token tinyIntType
%token tinytextType
%token to
%token trailing
%token trigger
%token trueKwd
%token unique
%token union
%token unlock
%token unsigned
%token until
%token update
%token usage
%token use
%token using
%token utcDate
%token utcTimestamp
%token utcTime
%token values
%token long
%token varcharType
%token varcharacter
%token varbinaryType
%token varying
%token virtual
%token when
%token where
%token while
%token write
%token window
%token with
%token xor
%token yearMonth
%token zerofill
%token natural
%token account
%token action
%token advise
%token after
%token against
%token ago
%token algorithm
%token always
%token any
%token ascii
%token attribute
%token attributes
%token statsOptions
%token statsSampleRate
%token statsColChoice
%token statsColList
%token autoIdCache
%token autoIncrement
%token autoRandom
%token autoRandomBase
%token avg
%token avgRowLength
%token backend
%token backup
%token backups
%token begin
%token bernoulli
%token binding
%token bindingCache
%token bindings
%token binlog
%token bitType
%token block
%token booleanType
%token boolType
%token btree
%token byteType
%token cache
%token calibrate
%token capture
%token cascaded
%token causal
%token chain
%token charsetKwd
%token checkpoint
%token checksum
%token cipher
%token cleanup
%token client
%token clientErrorsSummary
%token coalesce
%token collation
%token columnFormat
%token columns
%token config
%token comment
%token commit
%token committed
%token compact
%token compressed
%token compression
%token concurrency
%token connection
%token consistency
%token consistent
%token context
%token cpu
%token csvBackslashEscape
%token csvDelimiter
%token csvHeader
%token csvNotNull
%token csvNull
%token csvSeparator
%token csvTrimLastSeparators
%token current
%token close
%token cluster
%token clustered
%token cycle
%token data
%token datetimeType
%token dateType
%token day
%token deallocate
%token declare
%token definer
%token delayKeyWrite
%token digest
%token directory
%token disable
%token disabled
%token discard
%token disk
%token do
%token duplicate
%token dynamic
%token enable
%token enabled
%token encryption
%token end
%token enforced
%token engine
%token engines
%token enum
%token errorKwd
%token escape
%token event
%token events
%token evolve
%token exchange
%token exclusive
%token execute
%token expansion
%token expire
%token extended
%token faultsSym
%token fields
%token file
%token first
%token fixed
%token flush
%token found
%token following
%token format
%token full
%token function
%token general
%token global
%token grants
%token handler
%token hash
%token help
%token histogram
%token history
%token hosts
%token hour
%token identified
%token identSQLErrors
%token importKwd
%token imports
%token increment
%token incremental
%token indexes
%token insertMethod
%token instance
%token invisible
%token invoker
%token io
%token ipc
%token isolation
%token issuer
%token jsonType
%token keyBlockSize
%token labels
%token language
%token last
%token lastBackup
%token lastval
%token less
%token level
%token list
%token local
%token locked
%token location
%token logs
%token master
%token max_idxnum
%token max_minutes
%token maxConnectionsPerHour
%token maxQueriesPerHour
%token maxRows
%token maxUpdatesPerHour
%token maxUserConnections
%token mb
%token member
%token memory
%token merge
%token microsecond
%token minRows
%token minute
%token minValue
%token mode
%token modify
%token month
%token names
%token national
%token ncharType
%token never
%token next
%token nextval
%token no
%token nocache
%token nocycle
%token nodegroup
%token nomaxvalue
%token nominvalue
%token nonclustered
%token none
%token nowait
%token nvarcharType
%token nulls
%token off
%token offset
%token oltpReadOnly
%token oltpReadWrite
%token oltpWriteOnly
%token onDuplicate
%token online
%token only
%token open
%token optional
%token packKeys
%token pageSym
%token parser
%token partial
%token partitioning
%token partitions
%token password
%token pause
%token percent
%token per_db
%token per_table
%token pipesAsOr
%token plugins
%token point
%token policy
%token preSplitRegions
%token preceding
%token prepare
%token preserve
%token privileges
%token process
%token processlist
%token profile
%token profiles
%token proxy
%token purge
%token quarter
%token queries
%token query
%token quick
%token rateLimit
%token rebuild
%token recover
%token redundant
%token reload
%token remove
%token reorganize
%token repair
%token repeatable
%token replica
%token replicas
%token replication
%token required
%token resource
%token respect
%token restart
%token restore
%token restores
%token resume
%token reuse
%token reverse
%token role
%token rollback
%token rollup
%token routine
%token rowCount
%token rowFormat
%token rtree
%token hypo
%token san
%token savepoint
%token second
%token secondaryEngine
%token secondaryLoad
%token secondaryUnload
%token security
%token sendCredentialsToTiKV
%token separator
%token sequence
%token serial
%token serializable
%token session
%token setval
%token shardRowIDBits
%token share
%token shared
%token shutdown
%token signed
%token simple
%token skip
%token skipSchemaFiles
%token slave
%token slow
%token snapshot
%token some
%token source
%token sqlBufferResult
%token sqlCache
%token sqlNoCache
%token sqlTsiDay
%token sqlTsiHour
%token sqlTsiMinute
%token sqlTsiMonth
%token sqlTsiQuarter
%token sqlTsiSecond
%token sqlTsiWeek
%token sqlTsiYear
%token start
%token statsAutoRecalc
%token statsPersistent
%token statsSamplePages
%token status
%token storage
%token strictFormat
%token subject
%token subpartition
%token subpartitions
%token super
%token swaps
%token switchesSym
%token system
%token systemTime
%token tableChecksum
%token tables
%token tablespace
%token temporary
%token temptable
%token textType
%token than
%token tikvImporter
%token timestampType
%token timeType
%token tokenIssuer
%token tp
%token tpcc
%token trace
%token traditional
%token transaction
%token triggers
%token truncate
%token ttl
%token ttlEnable
%token ttlJobInterval
%token unbounded
%token uncommitted
%token undefined
%token unicodeSym
%token unknown
%token user
%token validation
%token value
%token variables
%token view
%token visible
%token warnings
%token week
%token weightString
%token without
%token workload
%token x509
%token yearType
%token wait
%token failedLoginAttempts
%token passwordLockTime
%token addDate
%token approxCountDistinct
%token approxPercentile
%token bound
%token br
%token briefType
%token burstable
%token cast
%token copyKwd
%token constraints
%token curTime
%token curDate
%token dateAdd
%token dateSub
%token defined
%token dotType
%token dump
%token timeDuration
%token endTime
%token exact
%token exprPushdownBlacklist
%token extract
%token flashback
%token follower
%token followerConstraints
%token followers
%token fullBackupStorage
%token getFormat
%token gcTTL
%token groupConcat
%token next_row_id
%token inplace
%token instant
%token internal
%token jsonArrayagg
%token jsonObjectAgg
%token leader
%token leaderConstraints
%token learner
%token learnerConstraints
%token learners
%token metadata
%token optRuleBlacklist
%token placement
%token plan
%token planCache
%token position
%token predicate
%token primaryRegion
%token recent
%token replayer
%token restoredTS
%token running
%token s3
%token schedule
%token staleness
%token startTime
%token startTS
%token std
%token stddev
%token stddevPop
%token stddevSamp
%token stop
%token strict
%token strong
%token subDate
%token sum
%token substring
%token survivalPreferences
%token target
%token taskTypes
%token tidbJson
%token timestampAdd
%token timestampDiff
%token tls
%token tokudbDefault
%token tokudbFast
%token tokudbLzma
%token tokudbQuickLZ
%token tokudbSnappy
%token tokudbSmall
%token tokudbUncompressed
%token tokudbZlib
%token tokudbZstd
%token top
%token trim
%token untilTS
%token variance
%token varPop
%token varSamp
%token verboseType
%token trueCardCost
%token voter
%token voterConstraints
%token voters
%token ruRate
%token priority
%token high
%token medium
%token low
%token ioReadBandwidth
%token ioWriteBandwidth
%token execElapsed
%token dryRun
%token cooldown
%token watch
%token similar
%token queryLimit
%token background
%token unlimited
%token admin
%token batch
%token buckets
%token builtins
%token cancel
%token cardinality
%token cmSketch
%token columnStatsUsage
%token correlation
%token ddl
%token dependency
%token depth
%token drainer
%token dry
%token jobs
%token job
%token nodeID
%token nodeState
%token optimistic
%token pessimistic
%token pump
%token run
%token samples
%token sampleRate
%token sessionStates
%token statistics
%token stats
%token statsMeta
%token statsHistograms
%token statsBuckets
%token statsHealthy
%token statsTopN
%token statsLocked
%token histogramsInFlight
%token telemetry
%token telemetryID
%token tidb
%token tiFlash
%token topn
%token split
%token width
%token reset
%token regions
%token region
%token builtinBitAnd
%token builtinBitOr
%token builtinBitXor
%token builtinCast
%token builtinCount
%token builtinApproxCountDistinct
%token builtinApproxPercentile
%token builtinCurDate
%token builtinCurTime
%token builtinDateAdd
%token builtinDateSub
%token builtinExtract
%token builtinGroupConcat
%token builtinMax
%token builtinMin
%token builtinNow
%token builtinPosition
%token builtinSubstring
%token builtinSum
%token builtinSysDate
%token builtinStddevPop
%token builtinStddevSamp
%token builtinTranslate
%token builtinTrim
%token builtinUser
%token builtinVarPop
%token builtinVarSamp
%token floatLit
%token decLit
%token intLit
%token hexLit
%token bitLit
//%token andnot
%token assignmentEq
%token eq
%token ge
%token le
%token jss
%token juss
%token lsh
%token neq
%token neqSynonym
%token nulleq
%token paramMarker
%token rsh
%token not2
%token insertValues
//%token createTableSelect
%token tableRefPriority
%token '('
%token ')'
%token '>'
%token '<'
%token '|'
%token '&'
%token '-'
%token '+'
%token '*'
%token '/'
%token '%'
%token '^'
%token '~'
%token neg
%token ','
%token '.'
%token '!'
%token '{'
%token '}'
%token '@'
%token ';'
%token ':'

%precedence /*1*/ empty
%precedence /*2*/ as
%precedence /*3*/ placement
%precedence /*4*/ lowerThanSelectOpt
%precedence /*5*/ sqlBufferResult
%precedence /*6*/ sqlBigResult
%precedence /*7*/ sqlSmallResult
%precedence /*8*/ sqlCache sqlNoCache
%precedence /*9*/ next
%precedence /*10*/ lowerThanValueKeyword
%precedence /*11*/ value
%precedence /*12*/ lowerThanWith
%precedence /*13*/ with
%precedence /*14*/ lowerThanStringLitToken
%precedence /*15*/ stringLit
%precedence /*16*/ lowerThanSetKeyword
%precedence /*17*/ set
%precedence /*18*/ selectKwd
%precedence /*19*/ lowerThanSelectStmt
%precedence /*20*/ lowerThanInsertValues
%precedence /*21*/ insertValues
%precedence /*22*/ lowerThanCreateTableSelect
%precedence /*23*/ createTableSelect
%precedence /*24*/ lowerThanCharsetKwd
%precedence /*25*/ charsetKwd
%precedence /*26*/ lowerThanKey
%precedence /*27*/ key
%precedence /*28*/ lowerThanLocal
%precedence /*29*/ local
%precedence /*30*/ lowerThanRemove
%precedence /*31*/ remove
%precedence /*32*/ lowerThenOrder
%precedence /*33*/ order
%precedence /*34*/ lowerThanFunction
%precedence /*35*/ function
%left /*36*/ tableRefPriority
%precedence /*37*/ lowerThanParenthese
%right /*38*/ '('
%left /*39*/ ')'
%precedence /*40*/ higherThanParenthese
%left /*41*/ cross inner join left right straightJoin natural full
%precedence /*42*/ lowerThanOn
%precedence /*43*/ on using
%right /*44*/ assignmentEq
%left /*45*/ pipes or pipesAsOr
%left /*46*/ xor
%left /*47*/ andand and
%left /*48*/ between
%precedence /*49*/ lowerThanEq
%left /*50*/ in is like ilike eq ge le neq neqSynonym '>' '<'
%left /*51*/ '|'
%left /*52*/ '&'
%left /*53*/ lsh rsh
%left /*54*/ '-' '+'
%left /*55*/ div mod '*' '/' '%'
%left /*56*/ '^'
%left /*57*/ '~' neg
%precedence /*58*/ lowerThanNot
%right /*59*/ not not2
%right /*60*/ collate
%left /*61*/ interval
%right /*62*/ encryption
%left /*63*/ labels
%precedence /*64*/ quick
%precedence /*65*/ escape
%precedence /*66*/ lowerThanComma
%precedence /*67*/ ','
%precedence /*68*/ higherThanComma

%start Start

%%

Start :
	StatementList
	;

AlterTableStmt :
	alter IgnoreOptional tableKwd TableName AlterTableSpecListOpt AlterTableSpecSingleOpt
	| alter IgnoreOptional tableKwd TableName analyze partition PartitionNameList AnalyzeOptionListOpt
	| alter IgnoreOptional tableKwd TableName analyze partition PartitionNameList index IndexNameList AnalyzeOptionListOpt
	| alter IgnoreOptional tableKwd TableName compact
	| alter IgnoreOptional tableKwd TableName compact tiFlash replica
	| alter IgnoreOptional tableKwd TableName compact partition PartitionNameList
	| alter IgnoreOptional tableKwd TableName compact partition PartitionNameList tiFlash replica
	;

ResourceGroupOptionList :
	DirectResourceGroupOption
	| ResourceGroupOptionList DirectResourceGroupOption
	| ResourceGroupOptionList ',' /*67P*/ DirectResourceGroupOption
	;

ResourceGroupPriorityOption :
	low
	| medium
	| high
	;

ResourceGroupRunawayOptionList :
	DirectResourceGroupRunawayOption
	| ResourceGroupRunawayOptionList DirectResourceGroupRunawayOption
	| ResourceGroupRunawayOptionList ',' /*67P*/ DirectResourceGroupRunawayOption
	;

ResourceGroupRunawayWatchOption :
	exact
	| similar
	| plan
	;

ResourceGroupRunawayActionOption :
	dryRun
	| cooldown
	| kill
	;

DirectResourceGroupRunawayOption :
	execElapsed EqOpt stringLit /*15P*/
	| action EqOpt ResourceGroupRunawayActionOption
	| watch EqOpt ResourceGroupRunawayWatchOption WatchDurationOption
	;

WatchDurationOption :
	/*empty*/
	| timeDuration EqOpt stringLit /*15P*/
	| timeDuration EqOpt unlimited
	;

DirectResourceGroupOption :
	ruRate EqOpt LengthNum
	| priority EqOpt ResourceGroupPriorityOption
	| burstable
	| burstable EqOpt Boolean
	| queryLimit EqOpt '(' /*38R*/ ResourceGroupRunawayOptionList ')' /*39L*/
	| queryLimit EqOpt '(' /*38R*/ ')' /*39L*/
	| queryLimit EqOpt null
	| background EqOpt '(' /*38R*/ ResourceGroupBackgroundOptionList ')' /*39L*/
	| background EqOpt '(' /*38R*/ ')' /*39L*/
	| background EqOpt null
	;

ResourceGroupBackgroundOptionList :
	DirectResourceGroupBackgroundOption
	| ResourceGroupBackgroundOptionList DirectResourceGroupBackgroundOption
	| ResourceGroupBackgroundOptionList ',' /*67P*/ DirectResourceGroupBackgroundOption
	;

DirectResourceGroupBackgroundOption :
	taskTypes EqOpt stringLit /*15P*/
	;

PlacementOptionList :
	DirectPlacementOption
	| PlacementOptionList DirectPlacementOption
	| PlacementOptionList ',' /*67P*/ DirectPlacementOption
	;

DirectPlacementOption :
	primaryRegion EqOpt stringLit /*15P*/
	| regions EqOpt stringLit /*15P*/
	| followers EqOpt LengthNum
	| voters EqOpt LengthNum
	| learners EqOpt LengthNum
	| schedule EqOpt stringLit /*15P*/
	| constraints EqOpt stringLit /*15P*/
	| leaderConstraints EqOpt stringLit /*15P*/
	| followerConstraints EqOpt stringLit /*15P*/
	| voterConstraints EqOpt stringLit /*15P*/
	| learnerConstraints EqOpt stringLit /*15P*/
	| survivalPreferences EqOpt stringLit /*15P*/
	;

PlacementPolicyOption :
	placement /*3P*/ policy EqOpt stringLit /*15P*/
	| placement /*3P*/ policy EqOpt PolicyName
	| placement /*3P*/ policy EqOpt defaultKwd
	| placement /*3P*/ policy set /*17P*/ defaultKwd
	;

AttributesOpt :
	attributes EqOpt defaultKwd
	| attributes EqOpt stringLit /*15P*/
	;

StatsOptionsOpt :
	statsOptions EqOpt defaultKwd
	| statsOptions EqOpt stringLit /*15P*/
	;

AlterTableSpecSingleOpt :
	PartitionOpt
	| remove /*31P*/ partitioning
	| reorganize partition NoWriteToBinLogAliasOpt ReorganizePartitionRuleOpt
	| split maxValue partition less than '(' /*38R*/ BitExpr ')' /*39L*/
	| merge first partition less than '(' /*38R*/ BitExpr ')' /*39L*/
	| partition Identifier AttributesOpt
	| partition Identifier PartDefOptionList
	| remove /*31P*/ ttl
	;

LocationLabelList :
	/*empty*/
	| location labels /*63L*/ StringList
	;

AlterTableSpec :
	TableOptionList %prec higherThanComma /*68P*/
	| set /*17P*/ tiFlash replica LengthNum LocationLabelList
	| set /*17P*/ hypo tiFlash replica LengthNum LocationLabelList
	| convert to CharsetKw CharsetName OptCollate
	| convert to CharsetKw defaultKwd OptCollate
	| add ColumnKeywordOpt IfNotExists ColumnDef ColumnPosition
	| add ColumnKeywordOpt IfNotExists '(' /*38R*/ TableElementList ')' /*39L*/
	| add Constraint
	| add partition IfNotExists NoWriteToBinLogAliasOpt PartitionDefinitionListOpt
	| add partition IfNotExists NoWriteToBinLogAliasOpt partitions NUM
	| last partition less than '(' /*38R*/ BitExpr ')' /*39L*/ NoWriteToBinLogAliasOpt
	| add statsExtended IfNotExists Identifier StatsType '(' /*38R*/ ColumnNameList ')' /*39L*/
	| AttributesOpt
	| StatsOptionsOpt
	| check partition AllOrPartitionNameList
	| coalesce partition NoWriteToBinLogAliasOpt NUM
	| drop ColumnKeywordOpt IfExists ColumnName RestrictOrCascadeOpt
	| drop primary key /*27P*/
	| drop partition IfExists PartitionNameList %prec lowerThanComma /*66P*/
	| first partition less than '(' /*38R*/ BitExpr ')' /*39L*/ IfExists
	| drop statsExtended IfExists Identifier
	| exchange partition Identifier with /*13P*/ tableKwd TableName WithValidationOpt
	| truncate partition AllOrPartitionNameList
	| optimize partition NoWriteToBinLogAliasOpt AllOrPartitionNameList
	| repair partition NoWriteToBinLogAliasOpt AllOrPartitionNameList
	| importKwd partition AllOrPartitionNameList tablespace
	| discard partition AllOrPartitionNameList tablespace
	| importKwd tablespace
	| discard tablespace
	| rebuild partition NoWriteToBinLogAliasOpt AllOrPartitionNameList
	| drop KeyOrIndex IfExists Identifier
	| drop foreign key /*27P*/ IfExists Symbol
	| order /*33P*/ by AlterOrderList %prec lowerThenOrder /*32P*/
	| disable keys
	| enable keys
	| modify ColumnKeywordOpt IfExists ColumnDef ColumnPosition
	| change ColumnKeywordOpt IfExists ColumnName ColumnDef ColumnPosition
	| alter ColumnKeywordOpt ColumnName set /*17P*/ defaultKwd SignedLiteral
	| alter ColumnKeywordOpt ColumnName set /*17P*/ defaultKwd '(' /*38R*/ Expression ')' /*39L*/
	| alter ColumnKeywordOpt ColumnName drop defaultKwd
	| rename column Identifier to Identifier
	| rename to TableName
	| rename EqOpt TableName
	| rename as /*2P*/ TableName
	| rename KeyOrIndex Identifier to Identifier
	| LockClause
	| Writeable
	| AlgorithmClause
	| force
	| with /*13P*/ validation
	| without validation
	| secondaryLoad
	| secondaryUnload
	| alter CheckConstraintKeyword Identifier EnforcedOrNot
	| drop CheckConstraintKeyword Identifier
	| alter index Identifier IndexInvisible
	| cache
	| nocache
	;

ReorganizePartitionRuleOpt :
	%prec lowerThanRemove /*30P*/ /*empty*/
	| PartitionNameList into '(' /*38R*/ PartitionDefinitionList ')' /*39L*/
	;

AllOrPartitionNameList :
	all
	| PartitionNameList %prec lowerThanComma /*66P*/
	;

WithValidationOpt :
	/*empty*/
	| WithValidation
	;

WithValidation :
	with /*13P*/ validation
	| without validation
	;

WithClustered :
	clustered
	| nonclustered
	;

AlgorithmClause :
	algorithm EqOpt defaultKwd
	| algorithm EqOpt copyKwd
	| algorithm EqOpt inplace
	| algorithm EqOpt instant
	| algorithm EqOpt identifier
	;

LockClause :
	lock EqOpt defaultKwd
	| lock EqOpt Identifier
	;

Writeable :
	read write
	| read only
	;

KeyOrIndex :
	key /*27P*/
	| index
	;

KeyOrIndexOpt :
	/*empty*/
	| KeyOrIndex
	;

ColumnKeywordOpt :
	%prec empty /*1P*/ /*empty*/
	| column
	;

ColumnPosition :
	/*empty*/
	| first
	| after ColumnName
	;

AlterTableSpecListOpt :
	/*empty*/
	| AlterTableSpecList
	;

AlterTableSpecList :
	AlterTableSpec
	| AlterTableSpecList ',' /*67P*/ AlterTableSpec
	;

PartitionNameList :
	Identifier
	| PartitionNameList ',' /*67P*/ Identifier
	;

ConstraintKeywordOpt :
	%prec empty /*1P*/ /*empty*/
	| constraint
	| constraint Symbol
	;

Symbol :
	Identifier
	;

RenameTableStmt :
	rename tableKwd TableToTableList
	;

TableToTableList :
	TableToTable
	| TableToTableList ',' /*67P*/ TableToTable
	;

TableToTable :
	TableName to TableName
	;

RenameUserStmt :
	rename user UserToUserList
	;

UserToUserList :
	UserToUser
	| UserToUserList ',' /*67P*/ UserToUser
	;

UserToUser :
	Username to Username
	;

RecoverTableStmt :
	recover tableKwd by job Int64Num
	| recover tableKwd TableName
	| recover tableKwd TableName Int64Num
	;

FlashbackToTimestampStmt :
	flashback cluster toTimestamp stringLit /*15P*/
	| flashback tableKwd TableNameList toTimestamp stringLit /*15P*/
	| flashback DatabaseSym DBName toTimestamp stringLit /*15P*/
	;

FlashbackTableStmt :
	flashback tableKwd TableName FlashbackToNewName
	;

FlashbackToNewName :
	/*empty*/
	| to Identifier
	;

FlashbackDatabaseStmt :
	flashback DatabaseSym DBName FlashbackToNewName
	;

SplitRegionStmt :
	split SplitSyntaxOption tableKwd TableName PartitionNameListOpt SplitOption
	| split SplitSyntaxOption tableKwd TableName PartitionNameListOpt index Identifier SplitOption
	;

SplitOption :
	between /*48L*/ RowValue and /*47L*/ RowValue regions Int64Num
	| by ValuesList
	;

SplitSyntaxOption :
	/*empty*/
	| region forKwd
	| partition
	| region forKwd partition
	;

AnalyzeTableStmt :
	analyze tableKwd TableNameList AllColumnsOrPredicateColumnsOpt AnalyzeOptionListOpt
	| analyze tableKwd TableName index IndexNameList AnalyzeOptionListOpt
	| analyze incremental tableKwd TableName index IndexNameList AnalyzeOptionListOpt
	| analyze tableKwd TableName partition PartitionNameList AllColumnsOrPredicateColumnsOpt AnalyzeOptionListOpt
	| analyze tableKwd TableName partition PartitionNameList index IndexNameList AnalyzeOptionListOpt
	| analyze incremental tableKwd TableName partition PartitionNameList index IndexNameList AnalyzeOptionListOpt
	| analyze tableKwd TableName update histogram on /*43P*/ IdentList AnalyzeOptionListOpt
	| analyze tableKwd TableName drop histogram on /*43P*/ IdentList
	| analyze tableKwd TableName columns IdentList AnalyzeOptionListOpt
	| analyze tableKwd TableName partition PartitionNameList columns IdentList AnalyzeOptionListOpt
	;

AllColumnsOrPredicateColumnsOpt :
	/*empty*/
	| all columns
	| predicate columns
	;

AnalyzeOptionListOpt :
	/*empty*/
	| with /*13P*/ AnalyzeOptionList
	;

AnalyzeOptionList :
	AnalyzeOption
	| AnalyzeOptionList ',' /*67P*/ AnalyzeOption
	;

AnalyzeOption :
	NUM buckets
	| NUM topn
	| NUM cmSketch depth
	| NUM cmSketch width
	| NUM samples
	| NumLiteral sampleRate
	;

Assignment :
	ColumnName EqOrAssignmentEq ExprOrDefault
	;

AssignmentList :
	Assignment
	| AssignmentList ',' /*67P*/ Assignment
	;

//AssignmentListOpt :
//	/*empty*/
//	| AssignmentList
//	;

BeginTransactionStmt :
	begin
	| begin pessimistic
	| begin optimistic
	| start transaction
	| start transaction read write
	| start transaction with /*13P*/ consistent snapshot
	| start transaction with /*13P*/ causal consistency only
	| start transaction read only
	| start transaction read only AsOfClause
	;

BinlogStmt :
	binlog stringLit /*15P*/
	;

//ColumnDefList :
//	ColumnDef
//	| ColumnDefList ',' /*67P*/ ColumnDef
//	;

ColumnDef :
	ColumnName Type ColumnOptionListOpt
	| ColumnName serial ColumnOptionListOpt
	;

ColumnName :
	Identifier
	| Identifier '.' Identifier
	| Identifier '.' Identifier '.' Identifier
	;

ColumnNameList :
	ColumnName
	| ColumnNameList ',' /*67P*/ ColumnName
	;

ColumnNameListOpt :
	/*empty*/
	| ColumnNameList
	;

IdentListWithParenOpt :
	/*empty*/
	| '(' /*38R*/ IdentList ')' /*39L*/
	;

IdentList :
	Identifier
	| IdentList ',' /*67P*/ Identifier
	;

ColumnNameOrUserVarListOpt :
	/*empty*/
	| ColumnNameOrUserVariableList
	;

ColumnNameOrUserVariableList :
	ColumnNameOrUserVariable
	| ColumnNameOrUserVariableList ',' /*67P*/ ColumnNameOrUserVariable
	;

ColumnNameOrUserVariable :
	ColumnName
	| UserVariable
	;

ColumnNameOrUserVarListOptWithBrackets :
	/*empty*/
	| '(' /*38R*/ ColumnNameOrUserVarListOpt ')' /*39L*/
	;

CommitStmt :
	commit
	| commit CompletionTypeWithinTransaction
	;

PrimaryOpt :
	/*empty*/
	| primary
	;

NotSym :
	not /*59R*/
	| not2 /*59R*/
	;

EnforcedOrNot :
	enforced
	| NotSym enforced
	;

EnforcedOrNotOpt :
	%prec lowerThanNot /*58P*/ /*empty*/
	| EnforcedOrNot
	;

EnforcedOrNotOrNotNullOpt :
	NotSym null
	| EnforcedOrNotOpt
	;

ColumnOption :
	NotSym null
	| null
	| autoIncrement
	| PrimaryOpt key /*27P*/
	| PrimaryOpt key /*27P*/ WithClustered
	| unique %prec lowerThanKey /*26P*/
	| unique key /*27P*/
	| defaultKwd DefaultValueExpr
	| serial defaultKwd value /*11P*/
	| on /*43P*/ update NowSymOptionFraction
	| comment stringLit /*15P*/
	| ConstraintKeywordOpt check '(' /*38R*/ Expression ')' /*39L*/ EnforcedOrNotOrNotNullOpt
	| GeneratedAlways as /*2P*/ '(' /*38R*/ Expression ')' /*39L*/ VirtualOrStored
	| ReferDef
	| collate /*60R*/ CollationName
	| columnFormat ColumnFormat
	| storage StorageMedia
	| autoRandom AutoRandomOpt
	;

AutoRandomOpt :
	/*empty*/
	| '(' /*38R*/ LengthNum ')' /*39L*/
	| '(' /*38R*/ LengthNum ',' /*67P*/ LengthNum ')' /*39L*/
	;

StorageMedia :
	defaultKwd
	| disk
	| memory
	;

ColumnFormat :
	defaultKwd
	| fixed
	| dynamic
	;

GeneratedAlways :
	/*empty*/
	| generated always
	;

VirtualOrStored :
	/*empty*/
	| virtual
	| stored
	;

ColumnOptionList :
	ColumnOption
	| ColumnOptionList ColumnOption
	;

ColumnOptionListOpt :
	/*empty*/
	| ColumnOptionList
	;

ConstraintElem :
	primary key /*27P*/ IndexNameAndTypeOpt '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ IndexOptionList
	| fulltext KeyOrIndexOpt IndexName '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ IndexOptionList
	| KeyOrIndex IfNotExists IndexNameAndTypeOpt '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ IndexOptionList
	| unique KeyOrIndexOpt IndexNameAndTypeOpt '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ IndexOptionList
	| foreign key /*27P*/ IfNotExists IndexName '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ ReferDef
	| check '(' /*38R*/ Expression ')' /*39L*/ EnforcedOrNotOpt
	;

Match :
	match full /*41L*/
	| match partial
	| match simple
	;

MatchOpt :
	/*empty*/
	| Match
	;

ReferDef :
	references TableName IndexPartSpecificationListOpt MatchOpt OnDeleteUpdateOpt
	;

OnDelete :
	on /*43P*/ deleteKwd ReferOpt
	;

OnUpdate :
	on /*43P*/ update ReferOpt
	;

OnDeleteUpdateOpt :
	%prec lowerThanOn /*42P*/ /*empty*/
	| OnDelete %prec lowerThanOn /*42P*/
	| OnUpdate %prec lowerThanOn /*42P*/
	| OnDelete OnUpdate
	| OnUpdate OnDelete
	;

ReferOpt :
	restrict
	| cascade
	| set /*17P*/ null
	| no action
	| set /*17P*/ defaultKwd
	;

DefaultValueExpr :
	NowSymOptionFractionParentheses
	| SignedLiteral
	| NextValueForSequence
	| BuiltinFunction
	;

BuiltinFunction :
	'(' /*38R*/ BuiltinFunction ')' /*39L*/
	| identifier '(' /*38R*/ ')' /*39L*/
	| identifier '(' /*38R*/ ExpressionList ')' /*39L*/
	;

NowSymOptionFractionParentheses :
	'(' /*38R*/ NowSymOptionFractionParentheses ')' /*39L*/
	| NowSymOptionFraction
	;

NowSymOptionFraction :
	NowSym
	| NowSymFunc '(' /*38R*/ ')' /*39L*/
	| NowSymFunc '(' /*38R*/ NUM ')' /*39L*/
	| CurdateSym '(' /*38R*/ ')' /*39L*/
	| currentDate
	;

NextValueForSequence :
	next /*9P*/ value /*11P*/ forKwd TableName
	| nextval '(' /*38R*/ TableName ')' /*39L*/
	;

NowSymFunc :
	currentTs
	| localTime
	| localTs
	| builtinNow
	;

NowSym :
	currentTs
	| localTime
	| localTs
	;

CurdateSym :
	builtinCurDate
	| currentDate
	;

SignedLiteral :
	Literal
	| '+' /*54L*/ NumLiteral
	| '-' /*54L*/ NumLiteral
	;

NumLiteral :
	intLit
	| floatLit
	| decLit
	;

StatsType :
	cardinality
	| dependency
	| correlation
	;

BindingStatusType :
	enabled
	| disabled
	;

CreateStatisticsStmt :
	create statistics IfNotExists Identifier '(' /*38R*/ StatsType ')' /*39L*/ on /*43P*/ TableName '(' /*38R*/ ColumnNameList ')' /*39L*/
	;

DropStatisticsStmt :
	drop statistics Identifier
	;

CreateIndexStmt :
	create IndexKeyTypeOpt index IfNotExists Identifier IndexTypeOpt on /*43P*/ TableName '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/ IndexOptionList IndexLockAndAlgorithmOpt
	;

IndexPartSpecificationListOpt :
	/*empty*/
	| '(' /*38R*/ IndexPartSpecificationList ')' /*39L*/
	;

IndexPartSpecificationList :
	IndexPartSpecification
	| IndexPartSpecificationList ',' /*67P*/ IndexPartSpecification
	;

IndexPartSpecification :
	ColumnName OptFieldLen OptOrder
	| '(' /*38R*/ Expression ')' /*39L*/ OptOrder
	;

IndexLockAndAlgorithmOpt :
	/*empty*/
	| LockClause
	| AlgorithmClause
	| LockClause AlgorithmClause
	| AlgorithmClause LockClause
	;

IndexKeyTypeOpt :
	/*empty*/
	| unique
	| spatial
	| fulltext
	;

AlterDatabaseStmt :
	alter DatabaseSym DBName DatabaseOptionList
	| alter DatabaseSym DatabaseOptionList
	;

CreateDatabaseStmt :
	create DatabaseSym IfNotExists DBName DatabaseOptionListOpt
	;

DBName :
	Identifier
	;

PolicyName :
	Identifier
	;

ResourceGroupName :
	Identifier
	| defaultKwd
	;

DatabaseOption :
	DefaultKwdOpt CharsetKw EqOpt CharsetName
	| DefaultKwdOpt collate /*60R*/ EqOpt CollationName
	| DefaultKwdOpt encryption /*62R*/ EqOpt EncryptionOpt
	| DefaultKwdOpt PlacementPolicyOption
	| PlacementPolicyOption
	| set /*17P*/ tiFlash replica LengthNum LocationLabelList
	;

DatabaseOptionListOpt :
	/*empty*/
	| DatabaseOptionList
	;

DatabaseOptionList :
	DatabaseOption
	| DatabaseOptionList DatabaseOption
	;

CreateTableStmt :
	create OptTemporary tableKwd IfNotExists TableName TableElementListOpt CreateTableOptionListOpt PartitionOpt DuplicateOpt AsOpt CreateTableSelectOpt OnCommitOpt
	| create OptTemporary tableKwd IfNotExists TableName LikeTableWithOrWithoutParen OnCommitOpt
	;

OnCommitOpt :
	/*empty*/
	| on /*43P*/ commit deleteKwd rows
	| on /*43P*/ commit preserve rows
	;

DefaultKwdOpt :
	%prec lowerThanCharsetKwd /*24P*/ /*empty*/
	| defaultKwd
	;

PartitionOpt :
	/*empty*/
	| partition by PartitionMethod PartitionNumOpt SubPartitionOpt PartitionDefinitionListOpt
	;

SubPartitionMethod :
	LinearOpt key /*27P*/ PartitionKeyAlgorithmOpt '(' /*38R*/ ColumnNameListOpt ')' /*39L*/
	| LinearOpt hash '(' /*38R*/ BitExpr ')' /*39L*/
	;

PartitionKeyAlgorithmOpt :
	/*empty*/
	| algorithm eq /*50L*/ NUM
	;

PartitionMethod :
	SubPartitionMethod
	| rangeKwd '(' /*38R*/ BitExpr ')' /*39L*/ PartitionIntervalOpt
	| rangeKwd FieldsOrColumns '(' /*38R*/ ColumnNameList ')' /*39L*/ PartitionIntervalOpt
	| list '(' /*38R*/ BitExpr ')' /*39L*/
	| list FieldsOrColumns '(' /*38R*/ ColumnNameList ')' /*39L*/
	| systemTime interval /*61L*/ Expression TimeUnit
	| systemTime limit LengthNum
	| systemTime
	;

PartitionIntervalOpt :
	/*empty*/
	| interval /*61L*/ '(' /*38R*/ IntervalExpr ')' /*39L*/ FirstAndLastPartOpt NullPartOpt MaxValPartOpt
	;

IntervalExpr :
	BitExpr
	| BitExpr TimeUnit
	;

NullPartOpt :
	/*empty*/
	| null partition
	;

MaxValPartOpt :
	/*empty*/
	| maxValue partition
	;

FirstAndLastPartOpt :
	/*empty*/
	| first partition less than '(' /*38R*/ BitExpr ')' /*39L*/ last partition less than '(' /*38R*/ BitExpr ')' /*39L*/
	;

LinearOpt :
	/*empty*/
	| linear
	;

SubPartitionOpt :
	/*empty*/
	| subpartition by SubPartitionMethod SubPartitionNumOpt
	;

SubPartitionNumOpt :
	/*empty*/
	| subpartitions LengthNum
	;

PartitionNumOpt :
	/*empty*/
	| partitions LengthNum
	;

PartitionDefinitionListOpt :
	%prec lowerThanCreateTableSelect /*22P*/ /*empty*/
	| '(' /*38R*/ PartitionDefinitionList ')' /*39L*/
	;

PartitionDefinitionList :
	PartitionDefinition
	| PartitionDefinitionList ',' /*67P*/ PartitionDefinition
	;

PartitionDefinition :
	partition Identifier PartDefValuesOpt PartDefOptionList SubPartDefinitionListOpt
	;

SubPartDefinitionListOpt :
	/*empty*/
	| '(' /*38R*/ SubPartDefinitionList ')' /*39L*/
	;

SubPartDefinitionList :
	SubPartDefinition
	| SubPartDefinitionList ',' /*67P*/ SubPartDefinition
	;

SubPartDefinition :
	subpartition Identifier PartDefOptionList
	;

PartDefOptionList :
	/*empty*/
	| PartDefOptionList PartDefOption
	;

PartDefOption :
	comment EqOpt stringLit /*15P*/
	| engine EqOpt StringName
	| storage engine EqOpt StringName
	| insertMethod EqOpt StringName
	| data directory EqOpt stringLit /*15P*/
	| index directory EqOpt stringLit /*15P*/
	| maxRows EqOpt LengthNum
	| minRows EqOpt LengthNum
	| tablespace EqOpt Identifier
	| nodegroup EqOpt LengthNum
	| PlacementPolicyOption
	;

PartDefValuesOpt :
	/*empty*/
	| values less than maxValue
	| values less than '(' /*38R*/ MaxValueOrExpressionList ')' /*39L*/
	| defaultKwd
	| values in /*50L*/ '(' /*38R*/ DefaultOrExpressionList ')' /*39L*/
	| history
	| current
	;

DuplicateOpt :
	/*empty*/
	| ignore
	| replace
	;

AsOpt :
	/*empty*/
	| as /*2P*/
	;

CreateTableSelectOpt :
	/*empty*/
	| SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	;

CreateViewSelectOpt :
	SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	;

LikeTableWithOrWithoutParen :
	like /*50L*/ TableName
	| '(' /*38R*/ like /*50L*/ TableName ')' /*39L*/
	;

CreateViewStmt :
	create OrReplace ViewAlgorithm ViewDefiner ViewSQLSecurity view ViewName ViewFieldList as /*2P*/ CreateViewSelectOpt ViewCheckOption
	;

OrReplace :
	/*empty*/
	| or /*45L*/ replace
	;

ViewAlgorithm :
	/*empty*/
	| algorithm eq /*50L*/ undefined
	| algorithm eq /*50L*/ merge
	| algorithm eq /*50L*/ temptable
	;

ViewDefiner :
	/*empty*/
	| definer eq /*50L*/ Username
	;

ViewSQLSecurity :
	/*empty*/
	| sql security definer
	| sql security invoker
	;

ViewName :
	TableName
	;

ViewFieldList :
	/*empty*/
	| '(' /*38R*/ ColumnList ')' /*39L*/
	;

ColumnList :
	Identifier
	| ColumnList ',' /*67P*/ Identifier
	;

ViewCheckOption :
	/*empty*/
	| with /*13P*/ cascaded check option
	| with /*13P*/ local /*29P*/ check option
	;

DoStmt :
	do ExpressionList
	;

DeleteWithoutUsingStmt :
	deleteKwd TableOptimizerHintsOpt PriorityOpt QuickOptional IgnoreOptional from TableName PartitionNameListOpt TableAsNameOpt IndexHintListOpt WhereClauseOptional OrderByOptional LimitClause
	| deleteKwd TableOptimizerHintsOpt PriorityOpt QuickOptional IgnoreOptional TableAliasRefList from TableRefs WhereClauseOptional
	;

DeleteWithUsingStmt :
	deleteKwd TableOptimizerHintsOpt PriorityOpt QuickOptional IgnoreOptional from TableAliasRefList using /*43P*/ TableRefs WhereClauseOptional
	;

DeleteFromStmt :
	DeleteWithoutUsingStmt
	| DeleteWithUsingStmt
	| WithClause DeleteWithoutUsingStmt
	| WithClause DeleteWithUsingStmt
	;

DatabaseSym :
	database
	;

DropDatabaseStmt :
	drop DatabaseSym IfExists DBName
	;

DropIndexStmt :
	drop index IfExists Identifier on /*43P*/ TableName IndexLockAndAlgorithmOpt
	| drop hypo index IfExists Identifier on /*43P*/ TableName
	;

DropTableStmt :
	drop OptTemporary TableOrTables IfExists TableNameList RestrictOrCascadeOpt
	;

OptTemporary :
	/*empty*/
	| temporary
	| global temporary
	;

DropViewStmt :
	drop view TableNameList RestrictOrCascadeOpt
	| drop view ifKwd exists TableNameList RestrictOrCascadeOpt
	;

DropUserStmt :
	drop user UsernameList
	| drop user ifKwd exists UsernameList
	;

DropRoleStmt :
	drop role RolenameList
	| drop role ifKwd exists RolenameList
	;

DropStatsStmt :
	drop stats TableNameList
	| drop stats TableName partition PartitionNameList
	| drop stats TableName global
	;

RestrictOrCascadeOpt :
	/*empty*/
	| restrict
	| cascade
	;

TableOrTables :
	tableKwd
	| tables
	;

EqOpt :
	/*empty*/
	| eq /*50L*/
	;

EmptyStmt :
	/*empty*/
	;

TraceStmt :
	trace TraceableStmt
	| trace format eq /*50L*/ stringLit /*15P*/ TraceableStmt
	| trace plan TraceableStmt
	| trace plan target eq /*50L*/ stringLit /*15P*/ TraceableStmt
	;

ExplainSym :
	explain
	| describe
	| desc
	;

ExplainStmt :
	ExplainSym TableName
	| ExplainSym TableName ColumnName
	| ExplainSym ExplainableStmt
	| ExplainSym forKwd connection NUM
	| ExplainSym format eq /*50L*/ stringLit /*15P*/ forKwd connection NUM
	| ExplainSym format eq /*50L*/ stringLit /*15P*/ ExplainableStmt
	| ExplainSym format eq /*50L*/ ExplainFormatType forKwd connection NUM
	| ExplainSym format eq /*50L*/ ExplainFormatType ExplainableStmt
	| ExplainSym analyze ExplainableStmt
	| ExplainSym analyze format eq /*50L*/ ExplainFormatType ExplainableStmt
	| ExplainSym analyze format eq /*50L*/ stringLit /*15P*/ ExplainableStmt
	;

ExplainFormatType :
	traditional
	| jsonType
	| row
	| dotType
	| briefType
	| verboseType
	| trueCardCost
	| tidbJson
	;

SavepointStmt :
	savepoint Identifier
	;

ReleaseSavepointStmt :
	release savepoint Identifier
	;

BRIEStmt :
	backup BRIETables to stringLit /*15P*/ BRIEOptions
	| backup logs to stringLit /*15P*/ BRIEOptions
	| stop backup logs
	| pause backup logs BRIEOptions
	| resume backup logs
	| purge backup logs from stringLit /*15P*/ BRIEOptions
	| show backup logs status
	| show backup logs metadata from stringLit /*15P*/
	| show br job Int64Num
	| show br job query Int64Num
	| cancel br job Int64Num
	| show backup metadata from stringLit /*15P*/
	| restore BRIETables from stringLit /*15P*/ BRIEOptions
	| restore point from stringLit /*15P*/ BRIEOptions
	;

BRIETables :
	DatabaseSym '*' /*55L*/
	| DatabaseSym DBNameList
	| tableKwd TableNameList
	;

DBNameList :
	DBName
	| DBNameList ',' /*67P*/ DBName
	;

BRIEOptions :
	%prec empty /*1P*/ /*empty*/
	| BRIEOptions BRIEOption
	;

BRIEIntegerOptionName :
	concurrency
	| resume
	;

BRIEBooleanOptionName :
	sendCredentialsToTiKV
	| online
	| checkpoint
	| skipSchemaFiles
	| strictFormat
	| csvNotNull
	| csvBackslashEscape
	| csvTrimLastSeparators
	;

BRIEStringOptionName :
	tikvImporter
	| csvSeparator
	| csvDelimiter
	| csvNull
	;

BRIEKeywordOptionName :
	backend
	| onDuplicate
	| on /*43P*/ duplicate
	;

BRIEOption :
	BRIEIntegerOptionName EqOpt LengthNum
	| BRIEBooleanOptionName EqOpt Boolean
	| BRIEStringOptionName EqOpt stringLit /*15P*/
	| BRIEKeywordOptionName EqOpt StringNameOrBRIEOptionKeyword
	| snapshot EqOpt LengthNum TimestampUnit ago
	| snapshot EqOpt stringLit /*15P*/
	| snapshot EqOpt LengthNum
	| lastBackup EqOpt stringLit /*15P*/
	| lastBackup EqOpt LengthNum
	| rateLimit EqOpt LengthNum mb '/' /*55L*/ second
	| csvHeader EqOpt FieldsOrColumns
	| csvHeader EqOpt LengthNum
	| checksum EqOpt Boolean
	| checksum EqOpt OptionLevel
	| analyze EqOpt Boolean
	| analyze EqOpt OptionLevel
	| fullBackupStorage EqOpt stringLit /*15P*/
	| restoredTS EqOpt stringLit /*15P*/
	| startTS EqOpt stringLit /*15P*/
	| untilTS EqOpt stringLit /*15P*/
	| gcTTL EqOpt stringLit /*15P*/
	;

LengthNum :
	NUM
	;

Int64Num :
	NUM
	;

NUM :
	intLit
	;

Boolean :
	NUM
	| falseKwd
	| trueKwd
	;

OptionLevel :
	off
	| optional
	| required
	;

PauseLoadDataStmt :
	pause load data job Int64Num
	;

ResumeLoadDataStmt :
	resume load data job Int64Num
	;

CancelImportStmt :
	cancel importKwd job Int64Num
	;

DropLoadDataStmt :
	drop load data job Int64Num
	;

Expression :
	singleAtIdentifier assignmentEq /*44R*/ Expression %prec assignmentEq /*44R*/
	| Expression logOr Expression %prec pipes /*45L*/
	| Expression xor /*46L*/ Expression %prec xor /*46L*/
	| Expression logAnd Expression %prec andand /*47L*/
	| not /*59R*/ Expression %prec not /*59R*/
	| match '(' /*38R*/ ColumnNameList ')' /*39L*/ against '(' /*38R*/ BitExpr FulltextSearchModifierOpt ')' /*39L*/
	| BoolPri IsOrNotOp trueKwd %prec is /*50L*/
	| BoolPri IsOrNotOp falseKwd %prec is /*50L*/
	| BoolPri IsOrNotOp unknown %prec is /*50L*/
	| BoolPri
	;

DefaultOrExpression :
	defaultKwd
	| BitExpr
	;

MaxValueOrExpression :
	maxValue
	| BitExpr
	;

FulltextSearchModifierOpt :
	/*empty*/
	| in /*50L*/ natural /*41L*/ language mode
	| in /*50L*/ natural /*41L*/ language mode with /*13P*/ query expansion
	| in /*50L*/ booleanType mode
	| with /*13P*/ query expansion
	;

logOr :
	pipesAsOr /*45L*/
	| or /*45L*/
	;

logAnd :
	andand /*47L*/
	| and /*47L*/
	;

ExpressionList :
	Expression
	| ExpressionList ',' /*67P*/ Expression
	;

MaxValueOrExpressionList :
	MaxValueOrExpression
	| MaxValueOrExpressionList ',' /*67P*/ MaxValueOrExpression
	;

DefaultOrExpressionList :
	DefaultOrExpression
	| DefaultOrExpressionList ',' /*67P*/ DefaultOrExpression
	;

ExpressionListOpt :
	/*empty*/
	| ExpressionList
	;

FuncDatetimePrecListOpt :
	/*empty*/
	| FuncDatetimePrecList
	;

FuncDatetimePrecList :
	intLit
	;

BoolPri :
	BoolPri IsOrNotOp null %prec is /*50L*/
	| BoolPri CompareOp PredicateExpr %prec eq /*50L*/
	| BoolPri CompareOp AnyOrAll SubSelect %prec eq /*50L*/
	| BoolPri CompareOp singleAtIdentifier assignmentEq /*44R*/ PredicateExpr %prec assignmentEq /*44R*/
	| PredicateExpr
	;

CompareOp :
	ge /*50L*/
	| '>' /*50L*/
	| le /*50L*/
	| '<' /*50L*/
	| neq /*50L*/
	| neqSynonym /*50L*/
	| eq /*50L*/
	| nulleq
	;

BetweenOrNotOp :
	between /*48L*/
	| NotSym between /*48L*/
	;

IsOrNotOp :
	is /*50L*/
	| is /*50L*/ NotSym
	;

InOrNotOp :
	in /*50L*/
	| NotSym in /*50L*/
	;

LikeOrNotOp :
	like /*50L*/
	| NotSym like /*50L*/
	;

IlikeOrNotOp :
	ilike /*50L*/
	| NotSym ilike /*50L*/
	;

RegexpOrNotOp :
	RegexpSym
	| NotSym RegexpSym
	;

AnyOrAll :
	any
	| some
	| all
	;

PredicateExpr :
	BitExpr InOrNotOp '(' /*38R*/ ExpressionList ')' /*39L*/
	| BitExpr InOrNotOp SubSelect
	| BitExpr BetweenOrNotOp BitExpr and /*47L*/ PredicateExpr
	| BitExpr LikeOrNotOp SimpleExpr LikeOrIlikeEscapeOpt
	| BitExpr IlikeOrNotOp SimpleExpr LikeOrIlikeEscapeOpt
	| BitExpr RegexpOrNotOp SimpleExpr
	| BitExpr memberof '(' /*38R*/ SimpleExpr ')' /*39L*/
	| BitExpr
	;

RegexpSym :
	regexpKwd
	| rlike
	;

LikeOrIlikeEscapeOpt :
	%prec empty /*1P*/ /*empty*/
	| escape /*65P*/ stringLit /*15P*/
	;

Field :
	'*' /*55L*/ %prec '*' /*55L*/
	| Identifier '.' '*' /*55L*/ %prec '*' /*55L*/
	| Identifier '.' Identifier '.' '*' /*55L*/ %prec '*' /*55L*/
	| Expression FieldAsNameOpt
	;

FieldAsNameOpt :
	/*empty*/
	| FieldAsName
	;

FieldAsName :
	Identifier
	| as /*2P*/ Identifier
	| stringLit /*15P*/
	| as /*2P*/ stringLit /*15P*/
	;

FieldList :
	Field
	| FieldList ',' /*67P*/ Field
	;

WithRollupClause :
	%prec lowerThanWith /*12P*/ /*empty*/
	| with /*13P*/ rollup
	;

GroupByClause :
	group by ByList WithRollupClause
	;

HavingClause :
	/*empty*/
	| having Expression
	;

AsOfClauseOpt :
	%prec empty /*1P*/ /*empty*/
	| AsOfClause
	;

AsOfClause :
	asof timestampType Expression
	;

IfExists :
	/*empty*/
	| ifKwd exists
	;

IfNotExists :
	/*empty*/
	| ifKwd NotSym exists
	;

IgnoreOptional :
	/*empty*/
	| ignore
	;

IndexName :
	/*empty*/
	| Identifier
	;

IndexOptionList :
	/*empty*/
	| IndexOptionList IndexOption
	;

IndexOption :
	keyBlockSize EqOpt LengthNum
	| IndexType
	| with /*13P*/ parser Identifier
	| comment stringLit /*15P*/
	| IndexInvisible
	| WithClustered
	;

IndexNameAndTypeOpt :
	IndexName
	| IndexName using /*43P*/ IndexTypeName
	| Identifier tp IndexTypeName
	;

IndexTypeOpt :
	/*empty*/
	| IndexType
	;

IndexType :
	using /*43P*/ IndexTypeName
	| tp IndexTypeName
	;

IndexTypeName :
	btree
	| hash
	| rtree
	| hypo
	;

IndexInvisible :
	visible
	| invisible
	;

Identifier :
	identifier
	| UnReservedKeyword
	| NotKeywordToken
	| TiDBKeyword
	;

UnReservedKeyword :
	action
	| advise
	| ascii
	| attribute
	| attributes
	| bindingCache
	| statsOptions
	| statsSampleRate
	| statsColChoice
	| statsColList
	| autoIdCache
	| autoIncrement
	| after
	| always
	| avg
	| begin
	| bitType
	| boolType
	| booleanType
	| btree
	| byteType
	| capture
	| causal
	| cleanup
	| close
	| chain
	| charsetKwd /*25P*/
	| columns
	| config
	| san
	| commit
	| compact
	| compressed
	| consistency
	| consistent
	| current
	| data
	| dateType %prec lowerThanStringLitToken /*14P*/
	| datetimeType
	| day
	| deallocate
	| do
	| duplicate
	| dynamic
	| encryption /*62R*/
	| end
	| enforced
	| engine
	| engines
	| enum
	| errorKwd
	| identSQLErrors
	| escape /*65P*/
	| evolve
	| execute
	| extended
	| fields
	| file
	| first
	| fixed
	| flush
	| following
	| format
	| full /*41L*/
	| general
	| global
	| hash
	| help
	| hour
	| insertMethod
	| less
	| local /*29P*/
	| last
	| names
	| nvarcharType
	| offset
	| packKeys
	| parser
	| password %prec lowerThanEq /*49P*/
	| prepare
	| preSplitRegions
	| proxy
	| quick /*64P*/
	| rebuild
	| redundant
	| reorganize
	| resource
	| restart
	| role
	| rollback
	| rollup
	| session
	| signed
	| shardRowIDBits
	| shutdown
	| snapshot
	| start
	| status
	| open
	| point
	| subpartitions
	| subpartition
	| tables
	| tablespace
	| textType
	| than
	| timeType %prec lowerThanStringLitToken /*14P*/
	| timestampType %prec lowerThanStringLitToken /*14P*/
	| trace
	| transaction
	| truncate
	| unbounded
	| unknown
	| value /*11P*/ %prec lowerThanValueKeyword /*10P*/
	| warnings
	| yearType
	| mode
	| week
	| weightString
	| any
	| some
	| user
	| identified
	| collation
	| comment
	| avgRowLength
	| connection
	| checksum
	| compression
	| keyBlockSize
	| master
	| maxRows
	| minRows
	| national
	| ncharType
	| rowFormat
	| quarter
	| grants
	| triggers
	| delayKeyWrite
	| isolation
	| jsonType
	| repeatable
	| respect
	| committed
	| uncommitted
	| only
	| serial
	| serializable
	| level
	| variables
	| sqlCache /*8P*/
	| indexes
	| processlist
	| sqlNoCache /*8P*/
	| disable
	| disabled
	| enable
	| enabled
	| reverse
	| privileges
	| no
	| binlog
	| function /*35P*/
	| view
	| binding
	| bindings
	| modify
	| events
	| partitions
	| none
	| nulls
	| super
	| exclusive
	| statsPersistent
	| statsAutoRecalc
	| rowCount
	| coalesce
	| month
	| process
	| profile
	| profiles
	| microsecond
	| minute
	| plugins
	| preceding
	| query
	| queries
	| savepoint
	| second
	| separator
	| share
	| shared
	| slow
	| maxConnectionsPerHour
	| maxQueriesPerHour
	| maxUpdatesPerHour
	| maxUserConnections
	| replication
	| client
	| slave
	| reload
	| temporary
	| routine
	| event
	| algorithm
	| definer
	| invoker
	| merge
	| temptable
	| undefined
	| security
	| cascaded
	| recover
	| cipher
	| subject
	| issuer
	| x509
	| never
	| expire
	| account
	| incremental
	| cpu
	| member
	| memory
	| block
	| io
	| context
	| switchesSym
	| pageSym
	| faultsSym
	| ipc
	| swaps
	| source
	| traditional
	| sqlBufferResult /*5P*/
	| directory
	| histogram
	| history
	| list
	| nodegroup
	| systemTime
	| partial
	| simple
	| remove /*31P*/
	| partitioning
	| storage
	| disk
	| statsSamplePages
	| secondaryEngine
	| secondaryLoad
	| secondaryUnload
	| validation
	| without
	| rtree
	| hypo
	| exchange
	| columnFormat
	| repair
	| importKwd
	| imports
	| discard
	| tableChecksum
	| unicodeSym
	| autoRandom
	| autoRandomBase
	| sqlTsiDay
	| sqlTsiHour
	| sqlTsiMinute
	| sqlTsiMonth
	| sqlTsiQuarter
	| sqlTsiSecond
	| language
	| sqlTsiWeek
	| sqlTsiYear
	| invisible
	| visible
	| tp
	| nowait
	| instance
	| replica
	| location
	| labels /*63L*/
	| logs
	| hosts
	| against
	| expansion
	| increment
	| minValue
	| nomaxvalue
	| nominvalue
	| nocache
	| cache
	| cycle
	| nocycle
	| sequence
	| max_minutes
	| max_idxnum
	| per_table
	| per_db
	| next /*9P*/
	| nextval
	| lastval
	| setval
	| ago
	| backup
	| backups
	| concurrency
	| mb
	| online
	| rateLimit
	| restore
	| restores
	| sendCredentialsToTiKV
	| lastBackup
	| checkpoint
	| skipSchemaFiles
	| strictFormat
	| backend
	| csvBackslashEscape
	| csvNotNull
	| csvTrimLastSeparators
	| csvDelimiter
	| csvHeader
	| csvNull
	| csvSeparator
	| onDuplicate
	| tikvImporter
	| replicas
	| policy
	| wait
	| clientErrorsSummary
	| bernoulli
	| system
	| percent
	| pause
	| resume
	| off
	| optional
	| required
	| purge
	| skip
	| locked
	| cluster
	| clustered
	| nonclustered
	| preserve
	| tokenIssuer
	| ttl
	| ttlEnable
	| ttlJobInterval
	| failedLoginAttempts
	| passwordLockTime
	| digest
	| reuse %prec lowerThanEq /*49P*/
	| declare
	| handler
	| found
	| calibrate
	| workload
	| tpcc
	| oltpReadWrite
	| oltpReadOnly
	| oltpWriteOnly
	;

TiDBKeyword :
	admin
	| batch
	| buckets
	| builtins
	| cancel
	| cardinality
	| cmSketch
	| columnStatsUsage
	| correlation
	| ddl
	| dependency
	| depth
	| drainer
	| jobs
	| job
	| nodeID
	| nodeState
	| pump
	| samples
	| sampleRate
	| sessionStates
	| statistics
	| stats
	| statsMeta
	| statsHistograms
	| statsTopN
	| statsBuckets
	| statsHealthy
	| statsLocked
	| histogramsInFlight
	| telemetry
	| telemetryID
	| tidb
	| tiFlash
	| topn
	| split
	| optimistic
	| pessimistic
	| width
	| regions
	| region
	| reset
	| dry
	| run
	;

NotKeywordToken :
	addDate
	| approxCountDistinct
	| approxPercentile
	| builtinBitAnd
	| builtinBitOr
	| builtinBitXor
	| briefType
	| cast
	| copyKwd
	| curTime
	| curDate
	| dateAdd
	| dateSub
	| defined
	| dotType
	| dump
	| timeDuration
	| extract
	| endTime
	| getFormat
	| groupConcat
	| inplace
	| instant
	| internal
	| builtinMin
	| builtinMax
	| builtinNow
	| recent
	| replayer
	| running
	| placement /*3P*/
	| plan
	| planCache
	| position
	| predicate
	| s3
	| strict
	| subDate
	| substring
	| sum
	| startTime
	| std
	| stddev
	| stddevPop
	| stddevSamp
	| stop
	| variance
	| varPop
	| varSamp
	| target
	| timestampAdd
	| timestampDiff
	| tokudbDefault
	| tokudbFast
	| tokudbLzma
	| tokudbQuickLZ
	| tokudbSnappy
	| tokudbSmall
	| tokudbUncompressed
	| tokudbZlib
	| tokudbZstd
	| top
	| trim
	| next_row_id
	| exprPushdownBlacklist
	| optRuleBlacklist
	| bound
	| exact %prec lowerThanStringLitToken /*14P*/
	| staleness
	| strong
	| flashback
	| jsonObjectAgg
	| jsonArrayagg
	| tls
	| follower
	| followers
	| leader
	| learner
	| learners
	| verboseType
	| trueCardCost
	| voter
	| voters
	| constraints
	| primaryRegion
	| schedule
	| survivalPreferences
	| leaderConstraints
	| followerConstraints
	| learnerConstraints
	| voterConstraints
	| tidbJson
	| ioReadBandwidth
	| ioWriteBandwidth
	| ruRate
	| priority
	| high
	| medium
	| low
	| burstable
	| br
	| gcTTL
	| metadata
	| startTS
	| untilTS
	| restoredTS
	| fullBackupStorage
	| execElapsed
	| dryRun
	| cooldown
	| watch
	| similar
	| queryLimit
	| background
	| taskTypes
	| unlimited
	;

CallStmt :
	call ProcedureCall
	;

ProcedureCall :
	identifier
	| Identifier '.' Identifier
	| identifier '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	| Identifier '.' Identifier '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	;

InsertIntoStmt :
	insert TableOptimizerHintsOpt PriorityOpt IgnoreOptional IntoOpt TableName PartitionNameListOpt InsertValues OnDuplicateKeyUpdate
	;

IntoOpt :
	/*empty*/
	| into
	;

InsertValues :
	'(' /*38R*/ ColumnNameListOpt ')' /*39L*/ ValueSym ValuesList
	| '(' /*38R*/ ColumnNameListOpt ')' /*39L*/ SetOprStmt
	| '(' /*38R*/ ColumnNameListOpt ')' /*39L*/ SelectStmt
	| '(' /*38R*/ ColumnNameListOpt ')' /*39L*/ SelectStmtWithClause
	| '(' /*38R*/ ColumnNameListOpt ')' /*39L*/ SubSelect
	| ValueSym ValuesList %prec insertValues /*21P*/
	| SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| set /*17P*/ ColumnSetValueList
	;

ValueSym :
	value /*11P*/
	| values
	;

ValuesList :
	RowValue
	| ValuesList ',' /*67P*/ RowValue
	;

RowValue :
	'(' /*38R*/ ValuesOpt ')' /*39L*/
	;

ValuesOpt :
	/*empty*/
	| Values
	;

Values :
	Values ',' /*67P*/ ExprOrDefault
	| ExprOrDefault
	;

ExprOrDefault :
	Expression
	| defaultKwd
	;

ColumnSetValueList :
	ColumnName EqOrAssignmentEq ExprOrDefault
	| ColumnSetValueList ',' /*67P*/ ColumnName EqOrAssignmentEq ExprOrDefault
	;

OnDuplicateKeyUpdate :
	/*empty*/
	| on /*43P*/ duplicate key /*27P*/ update AssignmentList
	;

ReplaceIntoStmt :
	replace PriorityOpt IntoOpt TableName PartitionNameListOpt InsertValues
	;

Literal :
	falseKwd
	| null
	| trueKwd
	| floatLit
	| decLit
	| intLit
	| StringLiteral %prec lowerThanStringLitToken /*14P*/
	| underscoreCS stringLit /*15P*/
	| hexLit
	| bitLit
	| underscoreCS hexLit
	| underscoreCS bitLit
	;

StringLiteral :
	stringLit /*15P*/
	| StringLiteral stringLit /*15P*/
	;

AlterOrderList :
	AlterOrderItem
	| AlterOrderList ',' /*67P*/ AlterOrderItem
	;

AlterOrderItem :
	ColumnName OptOrder
	;

OrderBy :
	order /*33P*/ by ByList
	;

ByList :
	ByItem
	| ByList ',' /*67P*/ ByItem
	;

ByItem :
	Expression
	| Expression Order
	;

Order :
	asc
	| desc
	;

OptOrder :
	/*empty*/
	| asc
	| desc
	;

OrderByOptional :
	/*empty*/
	| OrderBy
	;

BitExpr :
	BitExpr '|' /*51L*/ BitExpr %prec '|' /*51L*/
	| BitExpr '&' /*52L*/ BitExpr %prec '&' /*52L*/
	| BitExpr lsh /*53L*/ BitExpr %prec lsh /*53L*/
	| BitExpr rsh /*53L*/ BitExpr %prec rsh /*53L*/
	| BitExpr '+' /*54L*/ BitExpr %prec '+' /*54L*/
	| BitExpr '-' /*54L*/ BitExpr %prec '-' /*54L*/
	| BitExpr '+' /*54L*/ interval /*61L*/ Expression TimeUnit %prec '+' /*54L*/
	| BitExpr '-' /*54L*/ interval /*61L*/ Expression TimeUnit %prec '+' /*54L*/
	| interval /*61L*/ Expression TimeUnit '+' /*54L*/ BitExpr %prec '+' /*54L*/
	| BitExpr '*' /*55L*/ BitExpr %prec '*' /*55L*/
	| BitExpr '/' /*55L*/ BitExpr %prec '/' /*55L*/
	| BitExpr '%' /*55L*/ BitExpr %prec '%' /*55L*/
	| BitExpr div /*55L*/ BitExpr %prec div /*55L*/
	| BitExpr mod /*55L*/ BitExpr %prec mod /*55L*/
	| BitExpr '^' /*56L*/ BitExpr
	| SimpleExpr
	;

SimpleIdent :
	Identifier
	| Identifier '.' Identifier
	| Identifier '.' Identifier '.' Identifier
	;

SimpleExpr :
	SimpleIdent
	| FunctionCallKeyword
	| FunctionCallNonKeyword
	| FunctionCallGeneric
	| SimpleExpr collate /*60R*/ CollationName
	| WindowFuncCall
	| Literal
	| paramMarker
	| Variable
	| SumExpr
	| '!' SimpleExpr %prec neg /*57L*/
	| '~' /*57L*/ SimpleExpr %prec neg /*57L*/
	| '-' /*54L*/ SimpleExpr %prec neg /*57L*/
	| '+' /*54L*/ SimpleExpr %prec neg /*57L*/
	| SimpleExpr pipes /*45L*/ SimpleExpr
	| not2 /*59R*/ SimpleExpr %prec neg /*57L*/
	| SubSelect %prec neg /*57L*/
	| '(' /*38R*/ Expression ')' /*39L*/
	| '(' /*38R*/ ExpressionList ',' /*67P*/ Expression ')' /*39L*/
	| row '(' /*38R*/ ExpressionList ',' /*67P*/ Expression ')' /*39L*/
	| exists SubSelect
	| '{' Identifier Expression '}'
	| binaryType SimpleExpr %prec neg /*57L*/
	| builtinCast '(' /*38R*/ Expression as /*2P*/ CastType ArrayKwdOpt ')' /*39L*/
	| caseKwd ExpressionOpt WhenClauseList ElseOpt end
	| convert '(' /*38R*/ Expression ',' /*67P*/ CastType ')' /*39L*/
	| convert '(' /*38R*/ Expression using /*43P*/ CharsetName ')' /*39L*/
	| defaultKwd '(' /*38R*/ SimpleIdent ')' /*39L*/
	| values '(' /*38R*/ SimpleIdent ')' /*39L*/ %prec lowerThanInsertValues /*20P*/
	| SimpleIdent jss stringLit /*15P*/
	| SimpleIdent juss stringLit /*15P*/
	;

ArrayKwdOpt :
	/*empty*/
	| array
	;

DistinctKwd :
	distinct
	| distinctRow
	;

DistinctOpt :
	all
	| DistinctKwd
	;

DefaultFalseDistinctOpt :
	/*empty*/
	| DistinctOpt
	;

DefaultTrueDistinctOpt :
	/*empty*/
	| DistinctOpt
	;

BuggyDefaultFalseDistinctOpt :
	DefaultFalseDistinctOpt
	| DistinctKwd all
	;

FunctionNameConflict :
	ascii
	| charsetKwd /*25P*/
	| coalesce
	| collation
	| dateType
	| database
	| day
	| hour
	| ifKwd
	| interval /*61L*/
	| format
	| left /*41L*/
	| microsecond
	| minute
	| month
	| builtinNow
	| point
	| quarter
	| repeat
	| replace
	| reverse
	| right /*41L*/
	| rowCount
	| second
	| timeType
	| timestampType
	| truncate
	| user
	| week
	| yearType
	;

OptionalBraces :
	/*empty*/
	| '(' /*38R*/ ')' /*39L*/
	;

FunctionNameOptionalBraces :
	currentUser
	| currentDate
	| currentRole
	| utcDate
	| tidbCurrentTSO
	;

FunctionNameDatetimePrecision :
	currentTime
	| currentTs
	| localTime
	| localTs
	| utcTime
	| utcTimestamp
	;

FunctionCallKeyword :
	FunctionNameConflict '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	| builtinUser '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	| FunctionNameOptionalBraces OptionalBraces
	| builtinCurDate '(' /*38R*/ ')' /*39L*/
	| FunctionNameDatetimePrecision FuncDatetimePrec
	| charType '(' /*38R*/ ExpressionList ')' /*39L*/
	| charType '(' /*38R*/ ExpressionList using /*43P*/ CharsetName ')' /*39L*/
	| dateType stringLit /*15P*/
	| timeType stringLit /*15P*/
	| timestampType stringLit /*15P*/
	| insert '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	| mod /*55L*/ '(' /*38R*/ BitExpr ',' /*67P*/ BitExpr ')' /*39L*/
	| password '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	;

FunctionCallNonKeyword :
	builtinCurTime '(' /*38R*/ FuncDatetimePrecListOpt ')' /*39L*/
	| builtinSysDate '(' /*38R*/ FuncDatetimePrecListOpt ')' /*39L*/
	| FunctionNameDateArithMultiForms '(' /*38R*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	| FunctionNameDateArithMultiForms '(' /*38R*/ Expression ',' /*67P*/ interval /*61L*/ Expression TimeUnit ')' /*39L*/
	| FunctionNameDateArith '(' /*38R*/ Expression ',' /*67P*/ interval /*61L*/ Expression TimeUnit ')' /*39L*/
	| builtinExtract '(' /*38R*/ TimeUnit from Expression ')' /*39L*/
	| getFormat '(' /*38R*/ GetFormatSelector ',' /*67P*/ Expression ')' /*39L*/
	| builtinPosition '(' /*38R*/ BitExpr in /*50L*/ Expression ')' /*39L*/
	| builtinSubstring '(' /*38R*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	| builtinSubstring '(' /*38R*/ Expression from Expression ')' /*39L*/
	| builtinSubstring '(' /*38R*/ Expression ',' /*67P*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	| builtinSubstring '(' /*38R*/ Expression from Expression forKwd Expression ')' /*39L*/
	| timestampAdd '(' /*38R*/ TimestampUnit ',' /*67P*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	| timestampDiff '(' /*38R*/ TimestampUnit ',' /*67P*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	| builtinTrim '(' /*38R*/ Expression ')' /*39L*/
	| builtinTrim '(' /*38R*/ Expression from Expression ')' /*39L*/
	| builtinTrim '(' /*38R*/ TrimDirection from Expression ')' /*39L*/
	| builtinTrim '(' /*38R*/ TrimDirection Expression from Expression ')' /*39L*/
	| weightString '(' /*38R*/ Expression ')' /*39L*/
	| weightString '(' /*38R*/ Expression as /*2P*/ Char FieldLen ')' /*39L*/
	| weightString '(' /*38R*/ Expression as /*2P*/ binaryType FieldLen ')' /*39L*/
	| FunctionNameSequence
	| builtinTranslate '(' /*38R*/ Expression ',' /*67P*/ Expression ',' /*67P*/ Expression ')' /*39L*/
	;

GetFormatSelector :
	dateType
	| datetimeType
	| timeType
	| timestampType
	;

FunctionNameDateArith :
	builtinDateAdd
	| builtinDateSub
	;

FunctionNameDateArithMultiForms :
	addDate
	| subDate
	;

TrimDirection :
	both
	| leading
	| trailing
	;

FunctionNameSequence :
	lastval '(' /*38R*/ TableName ')' /*39L*/
	| setval '(' /*38R*/ TableName ',' /*67P*/ SignedNum ')' /*39L*/
	| NextValueForSequence
	;

SumExpr :
	avg '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinApproxCountDistinct '(' /*38R*/ ExpressionList ')' /*39L*/
	| builtinApproxPercentile '(' /*38R*/ ExpressionList ')' /*39L*/
	| builtinBitAnd '(' /*38R*/ Expression ')' /*39L*/ OptWindowingClause
	| builtinBitAnd '(' /*38R*/ all Expression ')' /*39L*/ OptWindowingClause
	| builtinBitOr '(' /*38R*/ Expression ')' /*39L*/ OptWindowingClause
	| builtinBitOr '(' /*38R*/ all Expression ')' /*39L*/ OptWindowingClause
	| builtinBitXor '(' /*38R*/ Expression ')' /*39L*/ OptWindowingClause
	| builtinBitXor '(' /*38R*/ all Expression ')' /*39L*/ OptWindowingClause
	| builtinCount '(' /*38R*/ DistinctKwd ExpressionList ')' /*39L*/
	| builtinCount '(' /*38R*/ all Expression ')' /*39L*/ OptWindowingClause
	| builtinCount '(' /*38R*/ Expression ')' /*39L*/ OptWindowingClause
	| builtinCount '(' /*38R*/ '*' /*55L*/ ')' /*39L*/ OptWindowingClause
	| builtinGroupConcat '(' /*38R*/ BuggyDefaultFalseDistinctOpt ExpressionList OrderByOptional OptGConcatSeparator ')' /*39L*/ OptWindowingClause
	| builtinMax '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinMin '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinSum '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinStddevPop '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinStddevSamp '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinVarPop '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| builtinVarSamp '(' /*38R*/ BuggyDefaultFalseDistinctOpt Expression ')' /*39L*/ OptWindowingClause
	| jsonArrayagg '(' /*38R*/ Expression ')' /*39L*/ OptWindowingClause
	| jsonArrayagg '(' /*38R*/ all Expression ')' /*39L*/ OptWindowingClause
	| jsonObjectAgg '(' /*38R*/ Expression ',' /*67P*/ Expression ')' /*39L*/ OptWindowingClause
	| jsonObjectAgg '(' /*38R*/ all Expression ',' /*67P*/ Expression ')' /*39L*/ OptWindowingClause
	| jsonObjectAgg '(' /*38R*/ Expression ',' /*67P*/ all Expression ')' /*39L*/ OptWindowingClause
	| jsonObjectAgg '(' /*38R*/ all Expression ',' /*67P*/ all Expression ')' /*39L*/ OptWindowingClause
	;

OptGConcatSeparator :
	/*empty*/
	| separator stringLit /*15P*/
	;

FunctionCallGeneric :
	identifier '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	| Identifier '.' Identifier '(' /*38R*/ ExpressionListOpt ')' /*39L*/
	;

FuncDatetimePrec :
	/*empty*/
	| '(' /*38R*/ ')' /*39L*/
	| '(' /*38R*/ intLit ')' /*39L*/
	;

TimeUnit :
	TimestampUnit
	| secondMicrosecond
	| minuteMicrosecond
	| minuteSecond
	| hourMicrosecond
	| hourSecond
	| hourMinute
	| dayMicrosecond
	| daySecond
	| dayMinute
	| dayHour
	| yearMonth
	;

TimestampUnit :
	microsecond
	| second
	| minute
	| hour
	| day
	| week
	| month
	| quarter
	| yearType
	| sqlTsiSecond
	| sqlTsiMinute
	| sqlTsiHour
	| sqlTsiDay
	| sqlTsiWeek
	| sqlTsiMonth
	| sqlTsiQuarter
	| sqlTsiYear
	;

ExpressionOpt :
	/*empty*/
	| Expression
	;

WhenClauseList :
	WhenClause
	| WhenClauseList WhenClause
	;

WhenClause :
	when Expression then Expression
	;

ElseOpt :
	/*empty*/
	| elseKwd Expression
	;

CastType :
	binaryType OptFieldLen
	| Char OptFieldLen OptBinary
	| dateType
	| yearType
	| datetimeType OptFieldLen
	| decimalType FloatOpt
	| timeType OptFieldLen
	| signed OptInteger
	| unsigned OptInteger
	| jsonType
	| doubleType
	| floatType FloatOpt
	| realType
	;

Priority :
	lowPriority
	| highPriority
	| delayed
	;

PriorityOpt :
	/*empty*/
	| Priority
	;

TableName :
	Identifier
	| Identifier '.' Identifier
	;

TableNameList :
	TableName
	| TableNameList ',' /*67P*/ TableName
	;

TableNameOptWild :
	Identifier OptWild
	| Identifier '.' Identifier OptWild
	;

TableAliasRefList :
	TableNameOptWild
	| TableAliasRefList ',' /*67P*/ TableNameOptWild
	;

OptWild :
	%prec empty /*1P*/ /*empty*/
	| '.' '*' /*55L*/
	;

QuickOptional :
	%prec empty /*1P*/ /*empty*/
	| quick /*64P*/
	;

PreparedStmt :
	prepare Identifier from PrepareSQL
	;

PrepareSQL :
	stringLit /*15P*/
	| UserVariable
	;

ExecuteStmt :
	execute Identifier
	| execute Identifier using /*43P*/ UserVariableList
	;

UserVariableList :
	UserVariable
	| UserVariableList ',' /*67P*/ UserVariable
	;

DeallocateStmt :
	DeallocateSym prepare Identifier
	;

DeallocateSym :
	deallocate
	| drop
	;

RollbackStmt :
	rollback
	| rollback CompletionTypeWithinTransaction
	| rollback to Identifier
	| rollback to savepoint Identifier
	;

CompletionTypeWithinTransaction :
	and /*47L*/ chain no release
	| and /*47L*/ no chain release
	| and /*47L*/ no chain no release
	| and /*47L*/ chain
	| and /*47L*/ no chain
	| release
	| no release
	;

ShutdownStmt :
	shutdown
	;

RestartStmt :
	restart
	;

HelpStmt :
	help stringLit /*15P*/
	;

SelectStmtBasic :
	selectKwd /*18P*/ SelectStmtOpts SelectStmtFieldList HavingClause
	;

SelectStmtFromDualTable :
	SelectStmtBasic FromDual WhereClauseOptional
	;

SelectStmtFromTable :
	SelectStmtBasic from TableRefsClause WhereClauseOptional SelectStmtGroup HavingClause WindowClauseOptional
	;

TableSampleOpt :
	%prec empty /*1P*/ /*empty*/
	| tableSample TableSampleMethodOpt '(' /*38R*/ Expression TableSampleUnitOpt ')' /*39L*/ RepeatableOpt
	| tableSample TableSampleMethodOpt '(' /*38R*/ ')' /*39L*/ RepeatableOpt
	;

TableSampleMethodOpt :
	%prec empty /*1P*/ /*empty*/
	| system
	| bernoulli
	| regions
	;

TableSampleUnitOpt :
	%prec empty /*1P*/ /*empty*/
	| rows
	| percent
	;

RepeatableOpt :
	%prec empty /*1P*/ /*empty*/
	| repeatable '(' /*38R*/ Expression ')' /*39L*/
	;

SelectStmt :
	SelectStmtBasic WhereClauseOptional SelectStmtGroup OrderByOptional SelectStmtLimitOpt SelectLockOpt SelectStmtIntoOption
	| SelectStmtFromDualTable SelectStmtGroup OrderByOptional SelectStmtLimitOpt SelectLockOpt SelectStmtIntoOption
	| SelectStmtFromTable OrderByOptional SelectStmtLimitOpt SelectLockOpt SelectStmtIntoOption
	| tableKwd TableName OrderByOptional SelectStmtLimitOpt SelectLockOpt SelectStmtIntoOption
	| values ValuesStmtList OrderByOptional SelectStmtLimitOpt SelectLockOpt SelectStmtIntoOption
	;

SelectStmtWithClause :
	WithClause SelectStmt
	| WithClause SubSelect
	;

WithClause :
	with /*13P*/ WithList
	| with /*13P*/ recursive WithList
	;

WithList :
	WithList ',' /*67P*/ CommonTableExpr
	| CommonTableExpr
	;

CommonTableExpr :
	Identifier IdentListWithParenOpt as /*2P*/ SubSelect
	;

FromDual :
	from dual
	;

WindowClauseOptional :
	/*empty*/
	| window WindowDefinitionList
	;

WindowDefinitionList :
	WindowDefinition
	| WindowDefinitionList ',' /*67P*/ WindowDefinition
	;

WindowDefinition :
	WindowName as /*2P*/ WindowSpec
	;

WindowName :
	Identifier
	;

WindowSpec :
	'(' /*38R*/ WindowSpecDetails ')' /*39L*/
	;

WindowSpecDetails :
	OptExistingWindowName OptPartitionClause OptWindowOrderByClause OptWindowFrameClause
	;

OptExistingWindowName :
	/*empty*/
	| WindowName
	;

OptPartitionClause :
	/*empty*/
	| partition by ByList
	;

OptWindowOrderByClause :
	/*empty*/
	| order /*33P*/ by ByList
	;

OptWindowFrameClause :
	/*empty*/
	| WindowFrameUnits WindowFrameExtent
	;

WindowFrameUnits :
	rows
	| rangeKwd
	| groups
	;

WindowFrameExtent :
	WindowFrameStart
	| WindowFrameBetween
	;

WindowFrameStart :
	unbounded preceding
	| NumLiteral preceding
	| paramMarker preceding
	| interval /*61L*/ Expression TimeUnit preceding
	| current row
	;

WindowFrameBetween :
	between /*48L*/ WindowFrameBound and /*47L*/ WindowFrameBound
	;

WindowFrameBound :
	WindowFrameStart
	| unbounded following
	| NumLiteral following
	| paramMarker following
	| interval /*61L*/ Expression TimeUnit following
	;

OptWindowingClause :
	/*empty*/
	| WindowingClause
	;

WindowingClause :
	over WindowNameOrSpec
	;

WindowNameOrSpec :
	WindowName
	| WindowSpec
	;

WindowFuncCall :
	rowNumber '(' /*38R*/ ')' /*39L*/ WindowingClause
	| rank '(' /*38R*/ ')' /*39L*/ WindowingClause
	| denseRank '(' /*38R*/ ')' /*39L*/ WindowingClause
	| cumeDist '(' /*38R*/ ')' /*39L*/ WindowingClause
	| percentRank '(' /*38R*/ ')' /*39L*/ WindowingClause
	| ntile '(' /*38R*/ SimpleExpr ')' /*39L*/ WindowingClause
	| lead '(' /*38R*/ Expression OptLeadLagInfo ')' /*39L*/ OptNullTreatment WindowingClause
	| lag '(' /*38R*/ Expression OptLeadLagInfo ')' /*39L*/ OptNullTreatment WindowingClause
	| firstValue '(' /*38R*/ Expression ')' /*39L*/ OptNullTreatment WindowingClause
	| lastValue '(' /*38R*/ Expression ')' /*39L*/ OptNullTreatment WindowingClause
	| nthValue '(' /*38R*/ Expression ',' /*67P*/ SimpleExpr ')' /*39L*/ OptFromFirstLast OptNullTreatment WindowingClause
	;

OptLeadLagInfo :
	/*empty*/
	| ',' /*67P*/ NumLiteral OptLLDefault
	| ',' /*67P*/ paramMarker OptLLDefault
	;

OptLLDefault :
	/*empty*/
	| ',' /*67P*/ Expression
	;

OptNullTreatment :
	/*empty*/
	| respect nulls
	| ignore nulls
	;

OptFromFirstLast :
	/*empty*/
	| from first
	| from last
	;

TableRefsClause :
	TableRefs
	;

TableRefs :
	EscapedTableRef
	| TableRefs ',' /*67P*/ EscapedTableRef
	;

EscapedTableRef :
	TableRef %prec lowerThanSetKeyword /*16P*/
	| '{' Identifier TableRef '}'
	;

TableRef :
	TableFactor
	| JoinTable
	;

TableFactor :
	TableName PartitionNameListOpt TableAsNameOpt AsOfClauseOpt IndexHintListOpt TableSampleOpt
	| SubSelect TableAsNameOpt
	| '(' /*38R*/ TableRefs ')' /*39L*/
	;

PartitionNameListOpt :
	/*empty*/
	| partition '(' /*38R*/ PartitionNameList ')' /*39L*/
	;

TableAsNameOpt :
	%prec empty /*1P*/ /*empty*/
	| TableAsName
	;

TableAsName :
	Identifier
	| as /*2P*/ Identifier
	;

IndexHintType :
	use KeyOrIndex
	| ignore KeyOrIndex
	| force KeyOrIndex
	;

IndexHintScope :
	/*empty*/
	| forKwd join /*41L*/
	| forKwd order /*33P*/ by
	| forKwd group by
	;

IndexHint :
	IndexHintType IndexHintScope '(' /*38R*/ IndexNameList ')' /*39L*/
	;

IndexNameList :
	/*empty*/
	| Identifier
	| IndexNameList ',' /*67P*/ Identifier
	| primary
	| IndexNameList ',' /*67P*/ primary
	;

IndexHintList :
	IndexHint
	| IndexHintList IndexHint
	;

IndexHintListOpt :
	/*empty*/
	| IndexHintList
	;

JoinTable :
	TableRef CrossOpt TableRef %prec tableRefPriority /*36L*/
	| TableRef CrossOpt TableRef on /*43P*/ Expression
	| TableRef CrossOpt TableRef using /*43P*/ '(' /*38R*/ ColumnNameList ')' /*39L*/
	| TableRef JoinType OuterOpt join /*41L*/ TableRef on /*43P*/ Expression
	| TableRef JoinType OuterOpt join /*41L*/ TableRef using /*43P*/ '(' /*38R*/ ColumnNameList ')' /*39L*/
	| TableRef natural /*41L*/ join /*41L*/ TableRef
	| TableRef natural /*41L*/ JoinType OuterOpt join /*41L*/ TableRef
	| TableRef straightJoin /*41L*/ TableRef
	| TableRef straightJoin /*41L*/ TableRef on /*43P*/ Expression
	;

JoinType :
	left /*41L*/
	| right /*41L*/
	;

OuterOpt :
	/*empty*/
	| outer
	;

CrossOpt :
	join /*41L*/
	| cross /*41L*/ join /*41L*/
	| inner /*41L*/ join /*41L*/
	;

LimitClause :
	/*empty*/
	| limit LimitOption
	;

LimitOption :
	LengthNum
	| paramMarker
	;

RowOrRows :
	row
	| rows
	;

FirstOrNext :
	first
	| next /*9P*/
	;

FetchFirstOpt :
	/*empty*/
	| LimitOption
	;

SelectStmtLimit :
	limit LimitOption
	| limit LimitOption ',' /*67P*/ LimitOption
	| limit LimitOption offset LimitOption
	| fetch FirstOrNext FetchFirstOpt RowOrRows only
	;

SelectStmtLimitOpt :
	/*empty*/
	| SelectStmtLimit
	;

SelectStmtOpt :
	TableOptimizerHints
	| DistinctOpt
	| Priority
	| sqlSmallResult /*7P*/
	| sqlBigResult /*6P*/
	| sqlBufferResult /*5P*/
	| SelectStmtSQLCache
	| sqlCalcFoundRows
	| straightJoin /*41L*/
	;

SelectStmtOpts :
	%prec empty /*1P*/ /*empty*/
	| SelectStmtOptsList %prec lowerThanSelectOpt /*4P*/
	;

SelectStmtOptsList :
	SelectStmtOptsList SelectStmtOpt
	| SelectStmtOpt
	;

TableOptimizerHints :
	hintComment
	;

TableOptimizerHintsOpt :
	/*empty*/
	| TableOptimizerHints
	;

SelectStmtSQLCache :
	sqlCache /*8P*/
	| sqlNoCache /*8P*/
	;

SelectStmtFieldList :
	FieldList
	;

SelectStmtGroup :
	/*empty*/
	| GroupByClause
	;

SelectStmtIntoOption :
	/*empty*/
	| into outfile stringLit /*15P*/ Fields Lines
	;

SubSelect :
	'(' /*38R*/ SelectStmt ')' /*39L*/
	| '(' /*38R*/ SetOprStmt ')' /*39L*/
	| '(' /*38R*/ SelectStmtWithClause ')' /*39L*/
	| '(' /*38R*/ SubSelect ')' /*39L*/
	;

SelectLockOpt :
	/*empty*/
	| forKwd update OfTablesOpt
	| forKwd share OfTablesOpt
	| forKwd update OfTablesOpt nowait
	| forKwd update OfTablesOpt wait NUM
	| forKwd share OfTablesOpt nowait
	| forKwd update OfTablesOpt skip locked
	| forKwd share OfTablesOpt skip locked
	| lock in /*50L*/ share mode
	;

OfTablesOpt :
	/*empty*/
	| of TableNameList
	;

SetOprStmt :
	SetOprStmtWoutLimitOrderBy
	| SetOprStmtWithLimitOrderBy
	| WithClause SetOprStmtWithLimitOrderBy
	| WithClause SetOprStmtWoutLimitOrderBy
	;

SetOprStmtWoutLimitOrderBy :
	SetOprClauseList SetOpr SelectStmt
	| SetOprClauseList SetOpr SubSelect
	;

SetOprStmtWithLimitOrderBy :
	SetOprClauseList SetOpr SubSelect OrderBy
	| SetOprClauseList SetOpr SubSelect SelectStmtLimit
	| SetOprClauseList SetOpr SubSelect OrderBy SelectStmtLimit
	| SubSelect OrderBy
	| SubSelect SelectStmtLimit
	| SubSelect OrderBy SelectStmtLimit
	;

SetOprClauseList :
	SetOprClause
	| SetOprClauseList SetOpr SetOprClause
	;

SetOprClause :
	SelectStmt
	| SubSelect
	;

SetOpr :
	union SetOprOpt
	| except SetOprOpt
	| intersect SetOprOpt
	;

SetOprOpt :
	DefaultTrueDistinctOpt
	;

ChangeStmt :
	change pump to nodeState eq /*50L*/ stringLit /*15P*/ forKwd nodeID stringLit /*15P*/
	| change drainer to nodeState eq /*50L*/ stringLit /*15P*/ forKwd nodeID stringLit /*15P*/
	;

SetStmt :
	set /*17P*/ VariableAssignmentList
	| set /*17P*/ password EqOrAssignmentEq PasswordOpt
	| set /*17P*/ password forKwd Username EqOrAssignmentEq PasswordOpt
	| set /*17P*/ global transaction TransactionChars
	| set /*17P*/ session transaction TransactionChars
	| set /*17P*/ transaction TransactionChars
	| set /*17P*/ config Identifier ConfigItemName EqOrAssignmentEq SetExpr
	| set /*17P*/ config stringLit /*15P*/ ConfigItemName EqOrAssignmentEq SetExpr
	| set /*17P*/ sessionStates stringLit /*15P*/
	| set /*17P*/ resource group ResourceGroupName
	;

SetRoleStmt :
	set /*17P*/ role SetRoleOpt
	;

SetDefaultRoleStmt :
	set /*17P*/ defaultKwd role SetDefaultRoleOpt to UsernameList
	;

SetDefaultRoleOpt :
	none
	| all
	| RolenameList
	;

SetRoleOpt :
	all except RolenameList
	| SetDefaultRoleOpt
	| defaultKwd
	;

TransactionChars :
	TransactionChar
	| TransactionChars ',' /*67P*/ TransactionChar
	;

TransactionChar :
	isolation level IsolationLevel
	| read write
	| read only
	| read only AsOfClause
	;

IsolationLevel :
	repeatable read
	| read committed
	| read uncommitted
	| serializable
	;

SetExpr :
	on /*43P*/
	| binaryType
	| ExprOrDefault
	;

EqOrAssignmentEq :
	eq /*50L*/
	| assignmentEq /*44R*/
	;

VariableName :
	Identifier
	| Identifier '.' Identifier
	;

ConfigItemName :
	Identifier
	| Identifier '.' ConfigItemName
	| Identifier '-' /*54L*/ ConfigItemName
	;

VariableAssignment :
	VariableName EqOrAssignmentEq SetExpr
	| global VariableName EqOrAssignmentEq SetExpr
	| session VariableName EqOrAssignmentEq SetExpr
	| local /*29P*/ VariableName EqOrAssignmentEq SetExpr
	| doubleAtIdentifier EqOrAssignmentEq SetExpr
	| singleAtIdentifier EqOrAssignmentEq Expression
	| names CharsetName
	| names CharsetName collate /*60R*/ defaultKwd
	| names CharsetName collate /*60R*/ StringName
	| names defaultKwd
	| CharsetKw CharsetNameOrDefault
	;

CharsetNameOrDefault :
	CharsetName
	| defaultKwd
	;

CharsetName :
	StringName
	| binaryType
	;

CollationName :
	StringName
	| binaryType
	;

VariableAssignmentList :
	VariableAssignment
	| VariableAssignmentList ',' /*67P*/ VariableAssignment
	;

Variable :
	SystemVariable
	| UserVariable
	;

SystemVariable :
	doubleAtIdentifier
	;

UserVariable :
	singleAtIdentifier
	;

Username :
	StringName
	| StringName '@' StringName
	| StringName singleAtIdentifier
	| currentUser OptionalBraces
	;

UsernameList :
	Username
	| UsernameList ',' /*67P*/ Username
	;

PasswordOpt :
	stringLit /*15P*/
	| password '(' /*38R*/ AuthString ')' /*39L*/
	;

AuthString :
	stringLit /*15P*/
	;

RoleNameString :
	stringLit /*15P*/
	| identifier
	;

RolenameComposed :
	StringName '@' StringName
	| StringName singleAtIdentifier
	;

RolenameWithoutIdent :
	stringLit /*15P*/
	| RolenameComposed
	;

Rolename :
	RoleNameString
	| RolenameComposed
	;

RolenameList :
	Rolename
	| RolenameList ',' /*67P*/ Rolename
	;

AdminStmtLimitOpt :
	limit LengthNum
	| limit LengthNum ',' /*67P*/ LengthNum
	| limit LengthNum offset LengthNum
	;

AdminStmt :
	admin show ddl
	| admin show ddl jobs WhereClauseOptional
	| admin show ddl jobs Int64Num WhereClauseOptional
	| admin show TableName next_row_id
	| admin check tableKwd TableNameList
	| admin check index TableName Identifier
	| admin recover index TableName Identifier
	| admin cleanup index TableName Identifier
	| admin check index TableName Identifier HandleRangeList
	| admin checksum tableKwd TableNameList
	| admin cancel ddl jobs NumList
	| admin pause ddl jobs NumList
	| admin resume ddl jobs NumList
	| admin show ddl job queries NumList
	| admin show ddl job queries AdminStmtLimitOpt
	| admin show slow AdminShowSlow
	| admin reload exprPushdownBlacklist
	| admin reload optRuleBlacklist
	| admin plugins enable PluginNameList
	| admin plugins disable PluginNameList
	| admin cleanup tableKwd lock TableNameList
	| admin repair tableKwd TableName CreateTableStmt
	| admin flush bindings
	| admin capture bindings
	| admin evolve bindings
	| admin reload bindings
	| admin reload statsExtended
	| admin reload statistics
	| admin show telemetry
	| admin reset telemetryID
	| admin flush StatementScope planCache
	;

AdminShowSlow :
	recent NUM
	| top NUM
	| top internal NUM
	| top all NUM
	;

HandleRangeList :
	HandleRange
	| HandleRangeList ',' /*67P*/ HandleRange
	;

HandleRange :
	'(' /*38R*/ Int64Num ',' /*67P*/ Int64Num ')' /*39L*/
	;

NumList :
	Int64Num
	| NumList ',' /*67P*/ Int64Num
	;

ShowStmt :
	show ShowTargetFilterable ShowLikeOrWhereOpt
	| show create tableKwd TableName
	| show create view TableName
	| show create database IfNotExists DBName
	| show create sequence TableName
	| show create placement /*3P*/ policy PolicyName
	| show create resource group ResourceGroupName
	| show create user Username
	| show tableKwd TableName PartitionNameListOpt regions WhereClauseOptional
	| show tableKwd TableName next_row_id
	| show tableKwd TableName PartitionNameListOpt index Identifier regions WhereClauseOptional
	| show grants
	| show grants forKwd Username UsingRoles
	| show master status
	| show OptFull processlist
	| show profiles
	| show profile ShowProfileTypesOpt ShowProfileArgsOpt SelectStmtLimitOpt
	| show privileges
	| show builtins
	| show placement /*3P*/ forKwd ShowPlacementTarget
	| show importKwd job Int64Num
	| show create procedure TableName
	;

ShowPlacementTarget :
	DatabaseSym DBName
	| tableKwd TableName
	| tableKwd TableName partition Identifier
	;

ShowProfileTypesOpt :
	/*empty*/
	| ShowProfileTypes
	;

ShowProfileTypes :
	ShowProfileType
	| ShowProfileTypes ',' /*67P*/ ShowProfileType
	;

ShowProfileType :
	cpu
	| memory
	| block io
	| context switchesSym
	| pageSym faultsSym
	| ipc
	| swaps
	| source
	| all
	;

ShowProfileArgsOpt :
	/*empty*/
	| forKwd query Int64Num
	;

UsingRoles :
	/*empty*/
	| using /*43P*/ RolenameList
	;

ShowIndexKwd :
	index
	| indexes
	| keys
	;

FromOrIn :
	from
	| in /*50L*/
	;

ShowTargetFilterable :
	engines
	| databases
	| config
	| CharsetKw
	| OptFull tables ShowDatabaseNameOpt
	| open tables ShowDatabaseNameOpt
	| tableKwd status ShowDatabaseNameOpt
	| ShowIndexKwd FromOrIn TableName
	| ShowIndexKwd FromOrIn Identifier FromOrIn Identifier
	| OptFull FieldsOrColumns ShowTableAliasOpt ShowDatabaseNameOpt
	| extended OptFull FieldsOrColumns ShowTableAliasOpt ShowDatabaseNameOpt
	| builtinCount '(' /*38R*/ '*' /*55L*/ ')' /*39L*/ warnings
	| warnings
	| builtinCount '(' /*38R*/ '*' /*55L*/ ')' /*39L*/ identSQLErrors
	| identSQLErrors
	| GlobalScope variables
	| GlobalScope status
	| GlobalScope bindings
	| collation
	| triggers ShowDatabaseNameOpt
	| bindingCache status
	| procedure status
	| pump status
	| drainer status
	| function /*35P*/ status
	| events ShowDatabaseNameOpt
	| plugins
	| sessionStates
	| statsExtended
	| statsMeta
	| statsHistograms
	| statsTopN
	| statsBuckets
	| statsHealthy
	| statsLocked
	| histogramsInFlight
	| columnStatsUsage
	| analyze status
	| backups
	| restores
	| placement /*3P*/
	| placement /*3P*/ labels /*63L*/
	| importKwd jobs
	;

ShowLikeOrWhereOpt :
	/*empty*/
	| like /*50L*/ SimpleExpr
	| where Expression
	;

GlobalScope :
	/*empty*/
	| global
	| session
	;

StatementScope :
	/*empty*/
	| global
	| instance
	| session
	;

OptFull :
	/*empty*/
	| full /*41L*/
	;

ShowDatabaseNameOpt :
	/*empty*/
	| FromOrIn DBName
	;

ShowTableAliasOpt :
	FromOrIn TableName
	;

FlushStmt :
	flush NoWriteToBinLogAliasOpt FlushOption
	;

PluginNameList :
	Identifier
	| PluginNameList ',' /*67P*/ Identifier
	;

FlushOption :
	privileges
	| status
	| tidb plugins PluginNameList
	| hosts
	| LogTypeOpt logs
	| TableOrTables TableNameListOpt WithReadLockOpt
	| clientErrorsSummary
	;

LogTypeOpt :
	/*empty*/
	| binaryType
	| engine
	| errorKwd
	| general
	| slow
	;

NoWriteToBinLogAliasOpt :
	%prec lowerThanLocal /*28P*/ /*empty*/
	| noWriteToBinLog
	| local /*29P*/
	;

TableNameListOpt :
	%prec empty /*1P*/ /*empty*/
	| TableNameList
	;

//TableNameListOpt2 :
//	%prec empty /*1P*/ /*empty*/
//	| tableKwd TableNameList
//	;

WithReadLockOpt :
	/*empty*/
	| with /*13P*/ read lock
	;

Statement :
	EmptyStmt
	| AdminStmt
	| AlterDatabaseStmt
	| AlterTableStmt
	| AlterUserStmt
	| AlterInstanceStmt
	| AlterSequenceStmt
	| AlterPolicyStmt
	| AlterResourceGroupStmt
	| AnalyzeTableStmt
	| BeginTransactionStmt
	| BinlogStmt
	| BRIEStmt
	| CommitStmt
	| DeallocateStmt
	| DeleteFromStmt
	| ExecuteStmt
	| ExplainStmt
	| CalibrateResourceStmt
	| ChangeStmt
	| CreateDatabaseStmt
	| CreateIndexStmt
	| CreateTableStmt
	| CreateViewStmt
	| CreateUserStmt
	| CreateRoleStmt
	| CreateBindingStmt
	| CreatePolicyStmt
	| CreateProcedureStmt
	| CreateResourceGroupStmt
	| AddQueryWatchStmt
	| CreateSequenceStmt
	| CreateStatisticsStmt
	| DoStmt
	| DropDatabaseStmt
	| DropIndexStmt
	| DropTableStmt
	| DropProcedureStmt
	| DropPolicyStmt
	| DropSequenceStmt
	| DropViewStmt
	| DropUserStmt
	| DropResourceGroupStmt
	| DropQueryWatchStmt
	| DropRoleStmt
	| DropStatisticsStmt
	| DropStatsStmt
	| DropBindingStmt
	| FlushStmt
	| FlashbackTableStmt
	| FlashbackToTimestampStmt
	| FlashbackDatabaseStmt
	| GrantStmt
	| GrantProxyStmt
	| GrantRoleStmt
	| CallStmt
	| ImportIntoStmt
	| InsertIntoStmt
	| IndexAdviseStmt
	| KillStmt
	| LoadDataStmt
	| LoadStatsStmt
	| LockStatsStmt
	| UnlockStatsStmt
	| PlanReplayerStmt
	| PreparedStmt
	| RollbackStmt
	| RenameTableStmt
	| RenameUserStmt
	| ReplaceIntoStmt
	| RecoverTableStmt
	| ReleaseSavepointStmt
	| RevokeStmt
	| RevokeRoleStmt
	| SavepointStmt
	| SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| SetStmt
	| SetBindingStmt
	| SetRoleStmt
	| SetDefaultRoleStmt
	| SplitRegionStmt
	| ShowStmt
	| TraceStmt
	| TruncateTableStmt
	| UpdateStmt
	| UseStmt
	| UnlockTablesStmt
	| LockTablesStmt
	| ShutdownStmt
	| RestartStmt
	| HelpStmt
	| NonTransactionalDMLStmt
	| PauseLoadDataStmt
	| ResumeLoadDataStmt
	| CancelImportStmt
	| DropLoadDataStmt
	;

TraceableStmt :
	DeleteFromStmt
	| UpdateStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	| SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| LoadDataStmt
	| BeginTransactionStmt
	| CommitStmt
	| SavepointStmt
	| ReleaseSavepointStmt
	| RollbackStmt
	| SetStmt
	| AnalyzeTableStmt
	;

ExplainableStmt :
	DeleteFromStmt
	| UpdateStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	| SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| AlterTableStmt
	;

StatementList :
	Statement
	| StatementList ';' Statement
	;

Constraint :
	ConstraintKeywordOpt ConstraintElem
	;

CheckConstraintKeyword :
	check
	| constraint
	;

TableElement :
	ColumnDef
	| Constraint
	;

TableElementList :
	TableElement
	| TableElementList ',' /*67P*/ TableElement
	;

TableElementListOpt :
	%prec lowerThanCreateTableSelect /*22P*/ /*empty*/
	| '(' /*38R*/ TableElementList ')' /*39L*/
	;

TableOption :
	PartDefOption
	| DefaultKwdOpt CharsetKw EqOpt CharsetName
	| DefaultKwdOpt collate /*60R*/ EqOpt CollationName
	| ForceOpt autoIncrement EqOpt LengthNum
	| autoIdCache EqOpt LengthNum
	| ForceOpt autoRandomBase EqOpt LengthNum
	| avgRowLength EqOpt LengthNum
	| connection EqOpt stringLit /*15P*/
	| checksum EqOpt LengthNum
	| tableChecksum EqOpt LengthNum
	| password EqOpt stringLit /*15P*/
	| compression EqOpt stringLit /*15P*/
	| keyBlockSize EqOpt LengthNum
	| delayKeyWrite EqOpt LengthNum
	| RowFormat
	| statsPersistent EqOpt StatsPersistentVal
	| statsAutoRecalc EqOpt LengthNum
	| statsAutoRecalc EqOpt defaultKwd
	| statsSamplePages EqOpt LengthNum
	| statsSamplePages EqOpt defaultKwd
	| statsBuckets EqOpt LengthNum
	| statsTopN EqOpt LengthNum
	| statsSampleRate EqOpt NumLiteral
	| statsColChoice EqOpt stringLit /*15P*/
	| statsColList EqOpt stringLit /*15P*/
	| shardRowIDBits EqOpt LengthNum
	| preSplitRegions EqOpt LengthNum
	| packKeys EqOpt StatsPersistentVal
	| storage memory
	| storage disk
	| secondaryEngine EqOpt null
	| secondaryEngine EqOpt StringName
	| union EqOpt '(' /*38R*/ TableNameListOpt ')' /*39L*/
	| encryption /*62R*/ EqOpt EncryptionOpt
	| ttl EqOpt Identifier '+' /*54L*/ interval /*61L*/ Literal TimeUnit
	| ttlEnable EqOpt stringLit /*15P*/
	| ttlJobInterval EqOpt stringLit /*15P*/
	;

ForceOpt :
	/*empty*/
	| force
	;

StatsPersistentVal :
	defaultKwd
	| LengthNum
	;

CreateTableOptionListOpt :
	%prec lowerThanCreateTableSelect /*22P*/ /*empty*/
	| TableOptionList %prec lowerThanComma /*66P*/
	;

TableOptionList :
	TableOption
	| TableOptionList TableOption
	| TableOptionList ',' /*67P*/ TableOption
	;

OptTable :
	/*empty*/
	| tableKwd
	;

TruncateTableStmt :
	truncate OptTable TableName
	;

RowFormat :
	rowFormat EqOpt defaultKwd
	| rowFormat EqOpt dynamic
	| rowFormat EqOpt fixed
	| rowFormat EqOpt compressed
	| rowFormat EqOpt redundant
	| rowFormat EqOpt compact
	| rowFormat EqOpt tokudbDefault
	| rowFormat EqOpt tokudbFast
	| rowFormat EqOpt tokudbSmall
	| rowFormat EqOpt tokudbZlib
	| rowFormat EqOpt tokudbZstd
	| rowFormat EqOpt tokudbQuickLZ
	| rowFormat EqOpt tokudbLzma
	| rowFormat EqOpt tokudbSnappy
	| rowFormat EqOpt tokudbUncompressed
	;

Type :
	NumericType
	| StringType
	| DateAndTimeType
	;

NumericType :
	IntegerType OptFieldLen FieldOpts
	| BooleanType FieldOpts
	| FixedPointType FloatOpt FieldOpts
	| FloatingPointType FloatOpt FieldOpts
	| BitValueType OptFieldLen
	;

IntegerType :
	tinyIntType
	| smallIntType
	| mediumIntType
	| middleIntType
	| intType
	| int1Type
	| int2Type
	| int3Type
	| int4Type
	| int8Type
	| integerType
	| bigIntType
	;

BooleanType :
	boolType
	| booleanType
	;

OptInteger :
	/*empty*/
	| integerType
	| intType
	;

FixedPointType :
	decimalType
	| numericType
	| fixed
	;

FloatingPointType :
	floatType
	| realType
	| doubleType
	| doubleType precisionType
	| float4Type
	| float8Type
	;

BitValueType :
	bitType
	;

StringType :
	Char FieldLen OptBinary
	| Char OptBinary
	| NChar FieldLen OptBinary
	| NChar OptBinary
	| Varchar FieldLen OptBinary
	| NVarchar FieldLen OptBinary
	| binaryType OptFieldLen
	| varbinaryType FieldLen
	| BlobType
	| TextType OptCharsetWithOptBinary
	| enum '(' /*38R*/ TextStringList ')' /*39L*/ OptCharsetWithOptBinary
	| set /*17P*/ '(' /*38R*/ TextStringList ')' /*39L*/ OptCharsetWithOptBinary
	| jsonType
	| long Varchar OptCharsetWithOptBinary
	| long OptCharsetWithOptBinary
	;

Char :
	character
	| charType
	;

NChar :
	ncharType
	| national character
	| national charType
	;

Varchar :
	character varying
	| charType varying
	| varcharType
	| varcharacter
	;

NVarchar :
	national varcharType
	| national varcharacter
	| nvarcharType
	| ncharType varcharType
	| ncharType varcharacter
	| national character varying
	| national charType varying
	| ncharType varying
	;

Year :
	yearType
	| sqlTsiYear
	;

BlobType :
	tinyblobType
	| blobType OptFieldLen
	| mediumblobType
	| longblobType
	| long varbinaryType
	;

TextType :
	tinytextType
	| textType OptFieldLen
	| mediumtextType
	| longtextType
	;

OptCharsetWithOptBinary :
	OptBinary
	| ascii
	| unicodeSym
	| byteType
	;

DateAndTimeType :
	dateType
	| datetimeType OptFieldLen
	| timestampType OptFieldLen
	| timeType OptFieldLen
	| Year OptFieldLen FieldOpts
	;

FieldLen :
	'(' /*38R*/ LengthNum ')' /*39L*/
	;

OptFieldLen :
	/*empty*/
	| FieldLen
	;

FieldOpt :
	unsigned
	| signed
	| zerofill
	;

FieldOpts :
	/*empty*/
	| FieldOpts FieldOpt
	;

FloatOpt :
	/*empty*/
	| FieldLen
	| Precision
	;

Precision :
	'(' /*38R*/ LengthNum ',' /*67P*/ LengthNum ')' /*39L*/
	;

OptBinMod :
	/*empty*/
	| binaryType
	;

OptBinary :
	/*empty*/
	| binaryType OptCharset
	| CharsetKw CharsetName OptBinMod
	;

OptCharset :
	/*empty*/
	| CharsetKw CharsetName
	;

CharsetKw :
	character set /*17P*/
	| charsetKwd /*25P*/
	| charType set /*17P*/
	;

OptCollate :
	/*empty*/
	| collate /*60R*/ CollationName
	;

StringList :
	stringLit /*15P*/
	| StringList ',' /*67P*/ stringLit /*15P*/
	;

TextString :
	stringLit /*15P*/
	| hexLit
	| bitLit
	;

TextStringList :
	TextString
	| TextStringList ',' /*67P*/ TextString
	;

StringName :
	stringLit /*15P*/
	| Identifier
	;

StringNameOrBRIEOptionKeyword :
	StringName
	| ignore
	| replace
	;

UpdateStmt :
	UpdateStmtNoWith
	| WithClause UpdateStmtNoWith
	;

UpdateStmtNoWith :
	update TableOptimizerHintsOpt PriorityOpt IgnoreOptional TableRef set /*17P*/ AssignmentList WhereClauseOptional OrderByOptional LimitClause
	| update TableOptimizerHintsOpt PriorityOpt IgnoreOptional TableRefs set /*17P*/ AssignmentList WhereClauseOptional
	;

UseStmt :
	use DBName
	;

WhereClause :
	where Expression
	;

WhereClauseOptional :
	/*empty*/
	| WhereClause
	;

//CommaOpt :
//	/*empty*/
//	| ',' /*67P*/
//	;

CreateUserStmt :
	create user IfNotExists UserSpecList RequireClauseOpt ConnectionOptions PasswordOrLockOptions CommentOrAttributeOption ResourceGroupNameOption
	;

CreateRoleStmt :
	create role IfNotExists RoleSpecList
	;

AlterUserStmt :
	alter user IfExists UserSpecList RequireClauseOpt ConnectionOptions PasswordOrLockOptions CommentOrAttributeOption ResourceGroupNameOption
	| alter user IfExists user '(' /*38R*/ ')' /*39L*/ identified by AuthString
	;

AlterInstanceStmt :
	alter instance InstanceOption
	;

InstanceOption :
	reload tls
	| reload tls no rollback on /*43P*/ errorKwd
	;

UserSpec :
	Username AuthOption
	;

UserSpecList :
	UserSpec
	| UserSpecList ',' /*67P*/ UserSpec
	;

ConnectionOptions :
	/*empty*/
	| with /*13P*/ ConnectionOptionList
	;

ConnectionOptionList :
	ConnectionOption
	| ConnectionOptionList ConnectionOption
	;

ConnectionOption :
	maxQueriesPerHour Int64Num
	| maxUpdatesPerHour Int64Num
	| maxConnectionsPerHour Int64Num
	| maxUserConnections Int64Num
	;

RequireClauseOpt :
	/*empty*/
	| RequireClause
	;

RequireClause :
	require none
	| require ssl
	| require x509
	| require RequireList
	;

RequireList :
	RequireListElement
	| RequireList and /*47L*/ RequireListElement
	| RequireList RequireListElement
	;

RequireListElement :
	issuer stringLit /*15P*/
	| subject stringLit /*15P*/
	| cipher stringLit /*15P*/
	| san stringLit /*15P*/
	| tokenIssuer stringLit /*15P*/
	;

CommentOrAttributeOption :
	/*empty*/
	| comment stringLit /*15P*/
	| attribute stringLit /*15P*/
	;

ResourceGroupNameOption :
	/*empty*/
	| resource group ResourceGroupName
	;

PasswordOrLockOptions :
	/*empty*/
	| PasswordOrLockOptionList
	;

PasswordOrLockOptionList :
	PasswordOrLockOption
	| PasswordOrLockOptionList PasswordOrLockOption
	;

PasswordOrLockOption :
	account unlock
	| account lock
	| password history defaultKwd
	| password history NUM
	| password reuse interval /*61L*/ defaultKwd
	| password reuse interval /*61L*/ NUM day
	| password expire
	| password expire interval /*61L*/ Int64Num day
	| password expire never
	| password expire defaultKwd
	| failedLoginAttempts Int64Num
	| passwordLockTime Int64Num
	| passwordLockTime unbounded
	;

AuthOption :
	/*empty*/
	| identified by AuthString
	| identified with /*13P*/ AuthPlugin
	| identified with /*13P*/ AuthPlugin by AuthString
	| identified with /*13P*/ AuthPlugin as /*2P*/ HashString
	| identified by password HashString
	;

AuthPlugin :
	StringName
	;

HashString :
	stringLit /*15P*/
	| hexLit
	;

RoleSpec :
	Rolename
	;

RoleSpecList :
	RoleSpec
	| RoleSpecList ',' /*67P*/ RoleSpec
	;

BindableStmt :
	SetOprStmt
	| SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| UpdateStmt
	| DeleteWithoutUsingStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	;

CreateBindingStmt :
	create GlobalScope binding forKwd BindableStmt using /*43P*/ BindableStmt
	| create GlobalScope binding from history using /*43P*/ plan digest stringLit /*15P*/
	;

DropBindingStmt :
	drop GlobalScope binding forKwd BindableStmt
	| drop GlobalScope binding forKwd BindableStmt using /*43P*/ BindableStmt
	| drop GlobalScope binding forKwd sql digest stringLit /*15P*/
	;

SetBindingStmt :
	set /*17P*/ binding BindingStatusType forKwd BindableStmt
	| set /*17P*/ binding BindingStatusType forKwd BindableStmt using /*43P*/ BindableStmt
	| set /*17P*/ binding BindingStatusType forKwd sql digest stringLit /*15P*/
	;

GrantStmt :
	grant RoleOrPrivElemList on /*43P*/ ObjectType PrivLevel to UserSpecList RequireClauseOpt WithGrantOptionOpt
	;

GrantProxyStmt :
	grant proxy on /*43P*/ Username to UsernameList WithGrantOptionOpt
	;

GrantRoleStmt :
	grant RoleOrPrivElemList to UsernameList
	;

WithGrantOptionOpt :
	/*empty*/
	| with /*13P*/ grant option
	| with /*13P*/ maxQueriesPerHour NUM
	| with /*13P*/ maxUpdatesPerHour NUM
	| with /*13P*/ maxConnectionsPerHour NUM
	| with /*13P*/ maxUserConnections NUM
	;

ExtendedPriv :
	identifier
	| ExtendedPriv identifier
	;

RoleOrPrivElem :
	PrivElem
	| RolenameWithoutIdent
	| ExtendedPriv
	| load from s3
	| selectKwd /*18P*/ into s3
	;

RoleOrPrivElemList :
	RoleOrPrivElem
	| RoleOrPrivElemList ',' /*67P*/ RoleOrPrivElem
	;

PrivElem :
	PrivType
	| PrivType '(' /*38R*/ ColumnNameList ')' /*39L*/
	;

PrivType :
	all
	| all privileges
	| alter
	| create
	| create user
	| create tablespace
	| trigger
	| deleteKwd
	| drop
	| process
	| execute
	| index
	| insert
	| selectKwd /*18P*/
	| super
	| show databases
	| update
	| grant option
	| references
	| replication slave
	| replication client
	| usage
	| reload
	| file
	| config
	| create temporary tables
	| lock tables
	| create view
	| show view
	| create role
	| drop role
	| create routine
	| alter routine
	| event
	| shutdown
	;

ObjectType :
	%prec lowerThanFunction /*34P*/ /*empty*/
	| tableKwd
	| function /*35P*/
	| procedure
	;

PrivLevel :
	'*' /*55L*/
	| '*' /*55L*/ '.' '*' /*55L*/
	| Identifier '.' '*' /*55L*/
	| Identifier '.' Identifier
	| Identifier
	;

RevokeStmt :
	revoke RoleOrPrivElemList on /*43P*/ ObjectType PrivLevel from UserSpecList
	;

RevokeRoleStmt :
	revoke RoleOrPrivElemList from UsernameList
	;

LoadDataStmt :
	load data LocalOpt infile stringLit /*15P*/ FormatOpt DuplicateOpt into tableKwd TableName CharsetOpt Fields Lines IgnoreLines ColumnNameOrUserVarListOptWithBrackets LoadDataSetSpecOpt LoadDataOptionListOpt
	;

FormatOpt :
	/*empty*/
	| format stringLit /*15P*/
	;

IgnoreLines :
	/*empty*/
	| ignore NUM lines
	;

CharsetOpt :
	/*empty*/
	| character set /*17P*/ CharsetName
	;

LocalOpt :
	/*empty*/
	| local /*29P*/
	;

Fields :
	/*empty*/
	| FieldsOrColumns FieldItemList
	;

FieldsOrColumns :
	fields
	| columns
	;

FieldItemList :
	FieldItemList FieldItem
	| FieldItem
	;

FieldItem :
	terminated by FieldTerminator
	| optionallyEnclosedBy FieldTerminator
	| enclosed by FieldTerminator
	| escaped by FieldTerminator
	| defined null by TextString
	| defined null by TextString optionally enclosed
	;

FieldTerminator :
	stringLit /*15P*/
	| hexLit
	| bitLit
	;

Lines :
	/*empty*/
	| lines Starting LinesTerminated
	;

Starting :
	/*empty*/
	| starting by FieldTerminator
	;

LinesTerminated :
	/*empty*/
	| terminated by FieldTerminator
	;

LoadDataSetSpecOpt :
	/*empty*/
	| set /*17P*/ LoadDataSetList
	;

LoadDataSetList :
	LoadDataSetList ',' /*67P*/ LoadDataSetItem
	| LoadDataSetItem
	;

LoadDataSetItem :
	SimpleIdent eq /*50L*/ ExprOrDefault
	;

LoadDataOptionListOpt :
	/*empty*/
	| with /*13P*/ LoadDataOptionList
	;

LoadDataOptionList :
	LoadDataOption
	| LoadDataOptionList ',' /*67P*/ LoadDataOption
	;

LoadDataOption :
	identifier
	| identifier eq /*50L*/ SignedLiteral
	;

ImportIntoStmt :
	importKwd into TableName ColumnNameOrUserVarListOptWithBrackets LoadDataSetSpecOpt from stringLit /*15P*/ FormatOpt LoadDataOptionListOpt
	;

UnlockTablesStmt :
	unlock TablesTerminalSym
	;

LockTablesStmt :
	lock TablesTerminalSym TableLockList
	;

TablesTerminalSym :
	tables
	| tableKwd
	;

TableLock :
	TableName LockType
	;

LockType :
	read
	| read local /*29P*/
	| write
	| write local /*29P*/
	;

TableLockList :
	TableLock
	| TableLockList ',' /*67P*/ TableLock
	;

NonTransactionalDMLStmt :
	batch OptionalShardColumn limit NUM DryRunOptions ShardableStmt
	;

ShardableStmt :
	DeleteFromStmt
	| UpdateStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	;

DryRunOptions :
	/*empty*/
	| dry run
	| dry run query
	;

OptionalShardColumn :
	/*empty*/
	| on /*43P*/ ColumnName
	;

KillStmt :
	KillOrKillTiDB NUM
	| KillOrKillTiDB connection NUM
	| KillOrKillTiDB query NUM
	| KillOrKillTiDB BuiltinFunction
	;

KillOrKillTiDB :
	kill
	| kill tidb
	;

LoadStatsStmt :
	load stats stringLit /*15P*/
	;

LockStatsStmt :
	lock stats TableNameList
	| lock stats TableName partition PartitionNameList
	| lock stats TableName partition '(' /*38R*/ PartitionNameList ')' /*39L*/
	;

UnlockStatsStmt :
	unlock stats TableNameList
	| unlock stats TableName partition PartitionNameList
	| unlock stats TableName partition '(' /*38R*/ PartitionNameList ')' /*39L*/
	;

DropPolicyStmt :
	drop placement /*3P*/ policy IfExists PolicyName
	;

CreateResourceGroupStmt :
	create resource group IfNotExists ResourceGroupName ResourceGroupOptionList
	;

AlterResourceGroupStmt :
	alter resource group IfExists ResourceGroupName ResourceGroupOptionList
	;

DropResourceGroupStmt :
	drop resource group IfExists ResourceGroupName
	;

CreatePolicyStmt :
	create OrReplace placement /*3P*/ policy IfNotExists PolicyName PlacementOptionList
	;

AlterPolicyStmt :
	alter placement /*3P*/ policy IfExists PolicyName PlacementOptionList
	;

CreateSequenceStmt :
	create sequence IfNotExists TableName CreateSequenceOptionListOpt CreateTableOptionListOpt
	;

CreateSequenceOptionListOpt :
	/*empty*/
	| SequenceOptionList
	;

SequenceOptionList :
	SequenceOption
	| SequenceOptionList SequenceOption
	;

SequenceOption :
	increment EqOpt SignedNum
	| increment by SignedNum
	| start EqOpt SignedNum
	| start with /*13P*/ SignedNum
	| minValue EqOpt SignedNum
	| nominvalue
	| no minValue
	| maxValue EqOpt SignedNum
	| nomaxvalue
	| no maxValue
	| cache EqOpt SignedNum
	| nocache
	| no cache
	| cycle
	| nocycle
	| no cycle
	;

SignedNum :
	Int64Num
	| '+' /*54L*/ Int64Num
	| '-' /*54L*/ NUM
	;

DropSequenceStmt :
	drop sequence IfExists TableNameList
	;

AlterSequenceStmt :
	alter sequence IfExists TableName AlterSequenceOptionList
	;

AlterSequenceOptionList :
	AlterSequenceOption
	| AlterSequenceOptionList AlterSequenceOption
	;

AlterSequenceOption :
	SequenceOption
	| restart
	| restart EqOpt SignedNum
	| restart with /*13P*/ SignedNum
	;

IndexAdviseStmt :
	index advise LocalOpt infile stringLit /*15P*/ MaxMinutesOpt MaxIndexNumOpt Lines
	;

MaxMinutesOpt :
	/*empty*/
	| max_minutes NUM
	;

MaxIndexNumOpt :
	/*empty*/
	| max_idxnum PerTable PerDB
	;

PerTable :
	/*empty*/
	| per_table NUM
	;

PerDB :
	/*empty*/
	| per_db NUM
	;

EncryptionOpt :
	stringLit /*15P*/
	;

ValuesStmtList :
	RowStmt
	| ValuesStmtList ',' /*67P*/ RowStmt
	;

RowStmt :
	row RowValue
	;

PlanReplayerStmt :
	plan replayer dump PlanReplayerDumpOpt explain ExplainableStmt
	| plan replayer dump PlanReplayerDumpOpt explain analyze ExplainableStmt
	| plan replayer dump PlanReplayerDumpOpt explain slow query WhereClauseOptional OrderByOptional SelectStmtLimitOpt
	| plan replayer dump PlanReplayerDumpOpt explain analyze slow query WhereClauseOptional OrderByOptional SelectStmtLimitOpt
	| plan replayer dump PlanReplayerDumpOpt explain stringLit /*15P*/
	| plan replayer dump PlanReplayerDumpOpt explain analyze stringLit /*15P*/
	| plan replayer load stringLit /*15P*/
	| plan replayer capture stringLit /*15P*/ stringLit /*15P*/
	| plan replayer capture remove /*31P*/ stringLit /*15P*/ stringLit /*15P*/
	;

PlanReplayerDumpOpt :
	/*empty*/
	| with /*13P*/ stats AsOfClause
	;

OptSpPdparams :
	/*empty*/
	| SpPdparams
	;

SpPdparams :
	SpPdparams ',' /*67P*/ SpPdparam
	| SpPdparam
	;

SpPdparam :
	SpOptInout Identifier Type
	;

SpOptInout :
	/*empty*/
	| in /*50L*/
	| out
	| inout
	;

ProcedureStatementStmt :
	SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| SetStmt
	| UpdateStmt
	| UseStmt
	| InsertIntoStmt
	| ReplaceIntoStmt
	| CommitStmt
	| RollbackStmt
	| ExplainStmt
	| SetOprStmt
	| DeleteFromStmt
	| AnalyzeTableStmt
	| TruncateTableStmt
	;

ProcedureCursorSelectStmt :
	SelectStmt
	| SelectStmtWithClause
	| SubSelect
	| SetOprStmt
	;

ProcedureUnlabeledBlock :
	ProcedureBlockContent
	;

ProcedureDeclIdents :
	Identifier
	| ProcedureDeclIdents ',' /*67P*/ Identifier
	;

ProcedureOptDefault :
	/*empty*/
	| defaultKwd Expression
	;

ProcedureDecl :
	declare ProcedureDeclIdents Type ProcedureOptDefault
	| declare identifier cursor forKwd ProcedureCursorSelectStmt
	| declare ProcedureHandlerType handler forKwd ProcedureHcondList ProcedureProcStmt
	;

ProcedureHandlerType :
	continueKwd
	| exit
	;

ProcedureHcondList :
	ProcedureHcond
	| ProcedureHcondList ',' /*67P*/ ProcedureHcond
	;

ProcedureHcond :
	ProcedurceCond
	| sqlwarning
	| not /*59R*/ found
	| sqlexception
	;

ProcedurceCond :
	NUM
	| sqlstate optValue stringLit /*15P*/
	;

optValue :
	/*empty*/
	| value /*11P*/
	;

ProcedureOpenCur :
	open identifier
	;

ProcedureFetchInto :
	fetch ProcedureOptFetchNo identifier into ProcedureFetchList
	;

ProcedureCloseCur :
	close identifier
	;

ProcedureOptFetchNo :
	/*empty*/
	| next /*9P*/ from
	| from
	;

ProcedureFetchList :
	identifier
	| ProcedureFetchList ',' /*67P*/ identifier
	;

ProcedureDeclsOpt :
	/*empty*/
	| ProcedureDecls
	;

ProcedureDecls :
	ProcedureDecl ';'
	| ProcedureDecls ProcedureDecl ';'
	;

ProcedureProcStmts :
	/*empty*/
	| ProcedureProcStmts ProcedureProcStmt ';'
	;

ProcedureProcStmt1s :
	ProcedureProcStmt ';'
	| ProcedureProcStmt1s ProcedureProcStmt ';'
	;

ProcedureBlockContent :
	begin ProcedureDeclsOpt ProcedureProcStmts end
	;

ProcedureIfstmt :
	ifKwd ProcedureIf end ifKwd
	;

ProcedureIf :
	Expression then ProcedureProcStmt1s procedurceElseIfs
	;

procedurceElseIfs :
	/*empty*/
	| elseIfKwd ProcedureIf
	| elseKwd ProcedureProcStmt1s
	;

ProcedureCaseStmt :
	ProcedureSimpleCase
	| ProcedureSearchedCase
	;

SimpleWhenThenList :
	SimpleWhenThen
	| SimpleWhenThenList SimpleWhenThen
	;

SearchedWhenThenList :
	SearchWhenThen
	| SearchedWhenThenList SearchWhenThen
	;

SimpleWhenThen :
	when Expression then ProcedureProcStmt1s
	;

SearchWhenThen :
	when Expression then ProcedureProcStmt1s
	;

ElseCaseOpt :
	/*empty*/
	| elseKwd ProcedureProcStmt1s
	;

ProcedureSimpleCase :
	caseKwd Expression SimpleWhenThenList ElseCaseOpt end caseKwd
	;

ProcedureSearchedCase :
	caseKwd SearchedWhenThenList ElseCaseOpt end caseKwd
	;

ProcedureUnlabelLoopBlock :
	ProcedureUnlabelLoopStmt
	;

ProcedureUnlabelLoopStmt :
	while Expression do ProcedureProcStmt1s end while
	| repeat ProcedureProcStmt1s until Expression end repeat
	;

ProcedureLabeledBlock :
	identifier ':' ProcedureBlockContent ProcedurceLabelOpt
	;

ProcedurceLabelOpt :
	/*empty*/
	| identifier
	;

ProcedurelabeledLoopStmt :
	identifier ':' ProcedureUnlabelLoopStmt ProcedurceLabelOpt
	;

ProcedureIterate :
	iterate identifier
	;

ProcedureLeave :
	leave identifier
	;

ProcedureProcStmt :
	ProcedureStatementStmt
	| ProcedureUnlabeledBlock
	| ProcedureIfstmt
	| ProcedureCaseStmt
	| ProcedureUnlabelLoopBlock
	| ProcedureOpenCur
	| ProcedureCloseCur
	| ProcedureFetchInto
	| ProcedureLabeledBlock
	| ProcedurelabeledLoopStmt
	| ProcedureIterate
	| ProcedureLeave
	;

CreateProcedureStmt :
	create procedure IfNotExists TableName '(' /*38R*/ OptSpPdparams ')' /*39L*/ ProcedureProcStmt
	;

DropProcedureStmt :
	drop procedure IfExists TableName
	;

CalibrateResourceStmt :
	calibrate resource CalibrateOption
	;

CalibrateOption :
	/*empty*/
	| DynamicCalibrateOptionList
	| CalibrateResourceWorkloadOption
	;

DynamicCalibrateOptionList :
	DynamicCalibrateResourceOption
	| DynamicCalibrateOptionList DynamicCalibrateResourceOption
	| DynamicCalibrateOptionList ',' /*67P*/ DynamicCalibrateResourceOption
	;

DynamicCalibrateResourceOption :
	startTime EqOpt Expression
	| endTime EqOpt Expression
	| timeDuration EqOpt stringLit /*15P*/
	| timeDuration EqOpt interval /*61L*/ Expression TimeUnit
	;

CalibrateResourceWorkloadOption :
	workload tpcc
	| workload oltpReadWrite
	| workload oltpReadOnly
	| workload oltpWriteOnly
	;

AddQueryWatchStmt :
	query watch add QueryWatchOptionList
	;

QueryWatchOptionList :
	QueryWatchOption
	| QueryWatchOptionList QueryWatchOption
	| QueryWatchOptionList ',' /*67P*/ QueryWatchOption
	;

QueryWatchOption :
	resource group ResourceGroupName
	| resource group UserVariable
	| action EqOpt ResourceGroupRunawayActionOption
	| QueryWatchTextOption
	;

QueryWatchTextOption :
	sql digest SimpleExpr
	| plan digest SimpleExpr
	| sql textType ResourceGroupRunawayWatchOption to SimpleExpr
	;

DropQueryWatchStmt :
	query watch remove /*31P*/ NUM
	;

%%

%option caseless

spaces	[ \t\r\n]+
line_comment	--[^\r\n]*
block_comment	\/\*(?s:.)*?\*\/

base_id	[_a-zA-Z][a-zA-Z0-9_]*

%%

{spaces}	skip()
{line_comment}	skip()
{block_comment}	skip()

"AS OF"	asof
"TO TIMESTAMP"	toTimestamp
"MEMBER OF"	memberof
"OPTIONALLY ENCLOSED BY"	optionallyEnclosedBy

"UNDERSCORE_CHARSET"	underscoreCS

"&&"	andand
"||"	pipes

	/* The following tokens belong to ODBCDateTimeType. */
//"d"	odbcDateType
//"t"	odbcTimeType
//"ts"	odbcTimestampType

	/* The following tokens belong to ReservedKeyword. Notice: make sure these tokens are contained in ReservedKeyword. */
"ADD"	add
"ALL"	all
"ALTER"	alter
"ANALYZE"	analyze
"AND"	and
"ARRAY"	array
"AS"	as
"ASC"	asc
"BETWEEN"	between
"BIGINT"	bigIntType
"BINARY"	binaryType
"BLOB"	blobType
"BOTH"	both
"BY"	by
"CALL"	call
"CASCADE"	cascade
"CASE"	caseKwd
"CHANGE"	change
"CHARACTER"	character
"CHAR"	charType
"CHECK"	check
"COLLATE"	collate
"COLUMN"	column
"CONSTRAINT"	constraint
"CONTINUE"	continueKwd
"CONVERT"	convert
"CREATE"	create
"CROSS"	cross
"CUME_DIST"	cumeDist
"CURRENT_DATE"	currentDate
"CURRENT_TIME"	currentTime
"CURRENT_TIMESTAMP"	currentTs
"CURRENT_USER"	currentUser
"CURRENT_ROLE"	currentRole
"CURSOR"	cursor
"DATABASE"	database
"DATABASES"	databases
"DAY_HOUR"	dayHour
"DAY_MICROSECOND"	dayMicrosecond
"DAY_MINUTE"	dayMinute
"DAY_SECOND"	daySecond
"DECIMAL"	decimalType
"DEFAULT"	defaultKwd
"DELAYED"	delayed
"DELETE"	deleteKwd
"DENSE_RANK"	denseRank
"DESC"	desc
"DESCRIBE"	describe
"DISTINCT"	distinct
"DISTINCTROW"	distinctRow
"DIV"	div
"DOUBLE"	doubleType
"DROP"	drop
"DUAL"	dual
"ELSEIF"	elseIfKwd
"ELSE"	elseKwd
"ENCLOSED"	enclosed
"ESCAPED"	escaped
"EXISTS"	exists
"EXIT"	exit
"EXPLAIN"	explain
"EXCEPT"	except
"FALSE"	falseKwd
"FETCH"	fetch
"FIRST_VALUE"	firstValue
"FLOAT"	floatType
"FLOAT4"	float4Type
"FLOAT8"	float8Type
"FOR"	forKwd
"FORCE"	force
"FOREIGN"	foreign
"FROM"	from
"FULLTEXT"	fulltext
"GENERATED"	generated
"GRANT"	grant
"GROUP"	group
"GROUPS"	groups
"HAVING"	having
"HIGH_PRIORITY"	highPriority
"HOUR_MICROSECOND"	hourMicrosecond
"HOUR_MINUTE"	hourMinute
"HOUR_SECOND"	hourSecond
"IF"	ifKwd
"IGNORE"	ignore
"IN"	in
"INDEX"	index
"INFILE"	infile
"INNER"	inner
"INOUT"	inout
"INTEGER"	integerType
"INTERSECT"	intersect
"INTERVAL"	interval
"INTO"	into
"OUTFILE"	outfile
"IS"	is
"INSERT"	insert
"INT"	intType
"INT1"	int1Type
"INT2"	int2Type
"INT3"	int3Type
"INT4"	int4Type
"INT8"	int8Type
"ITERATE"	iterate
"JOIN"	join
"KEY"	key
"KEYS"	keys
"KILL"	kill
"LAG"	lag
"LAST_VALUE"	lastValue
"LEAD"	lead
"LEADING"	leading
"LEAVE"	leave
"LEFT"	left
"LIKE"	like
"ILIKE"	ilike
"LIMIT"	limit
"LINES"	lines
"LINEAR"	linear
"LOAD"	load
"LOCALTIME"	localTime
"LOCALTIMESTAMP"	localTs
"LOCK"	lock
"LONGBLOB"	longblobType
"LONGTEXT"	longtextType
"LOW_PRIORITY"	lowPriority
"MATCH"	match
"MAXVALUE"	maxValue
"MEDIUMBLOB"	mediumblobType
"MEDIUMINT"	mediumIntType
"MEDIUMTEXT"	mediumtextType
"MIDDLEINT"	middleIntType
"MINUTE_MICROSECOND"	minuteMicrosecond
"MINUTE_SECOND"	minuteSecond
"MOD"	mod
"NOT"	not
"NO_WRITE_TO_BINLOG"	noWriteToBinLog
"NTH_VALUE"	nthValue
"NTILE"	ntile
"NULL"	null
"NUMERIC"	numericType
"OF"	of
"ON"	on
"OPTIMIZE"	optimize
"OPTION"	option
"OPTIONALLY"	optionally
"OR"	or
"ORDER"	order
"OUT"	out
"OUTER"	outer
"OVER"	over
"PARTITION"	partition
"PERCENT_RANK"	percentRank
"PRECISION"	precisionType
"PRIMARY"	primary
"PROCEDURE"	procedure
"RANGE"	rangeKwd
"RANK"	rank
"READ"	read
"REAL"	realType
"RECURSIVE"	recursive
"REFERENCES"	references
"REGEXP"	regexpKwd
"RELEASE"	release
"RENAME"	rename
"REPEAT"	repeat
"REPLACE"	replace
"REQUIRE"	require
"RESTRICT"	restrict
"REVOKE"	revoke
"RIGHT"	right
"RLIKE"	rlike
"ROW"	row
"ROWS"	rows
"ROW_NUMBER"	rowNumber
"SECOND_MICROSECOND"	secondMicrosecond
"SELECT"	selectKwd
"SET"	set
"SHOW"	show
"SMALLINT"	smallIntType
"SPATIAL"	spatial
"SQL"	sql
"SQL_BIG_RESULT"	sqlBigResult
"SQL_CALC_FOUND_ROWS"	sqlCalcFoundRows
"SQL_SMALL_RESULT"	sqlSmallResult
"SQLEXCEPTION"	sqlexception
"SQLSTATE"	sqlstate
"SQLWARNING"	sqlwarning
"SSL"	ssl
"STARTING"	starting
"STATS_EXTENDED"	statsExtended
"STRAIGHT_JOIN"	straightJoin
"TiDB_CURRENT_TSO"	tidbCurrentTSO
"TABLE"	tableKwd
"TABLESAMPLE"	tableSample
"STORED"	stored
"TERMINATED"	terminated
"THEN"	then
"TINYBLOB"	tinyblobType
"TINYINT"	tinyIntType
"TINYTEXT"	tinytextType
"TO"	to
"TRAILING"	trailing
"TRIGGER"	trigger
"TRUE"	trueKwd
"UNIQUE"	unique
"UNION"	union
"UNLOCK"	unlock
"UNSIGNED"	unsigned
"UNTIL"	until
"UPDATE"	update
"USAGE"	usage
"USE"	use
"USING"	using
"UTC_DATE"	utcDate
"UTC_TIMESTAMP"	utcTimestamp
"UTC_TIME"	utcTime
"VALUES"	values
"LONG"	long
"VARCHAR"	varcharType
"VARCHARACTER"	varcharacter
"VARBINARY"	varbinaryType
"VARYING"	varying
"VIRTUAL"	virtual
"WHEN"	when
"WHERE"	where
"WHILE"	while
"WRITE"	write
"WINDOW"	window
"WITH"	with
"XOR"	xor
"YEAR_MONTH"	yearMonth
"ZEROFILL"	zerofill
"NATURAL"	natural

	/* The following tokens belong to UnReservedKeyword. Notice: make sure these tokens are contained in UnReservedKeyword. */
"ACCOUNT"	account
"ACTION"	action
"ADVISE"	advise
"AFTER"	after
"AGAINST"	against
"AGO"	ago
"ALGORITHM"	algorithm
"ALWAYS"	always
"ANY"	any
"ASCII"	ascii
"ATTRIBUTE"	attribute
"ATTRIBUTES"	attributes
"STATS_OPTIONS"	statsOptions
"STATS_SAMPLE_RATE"	statsSampleRate
"STATS_COL_CHOICE"	statsColChoice
"STATS_COL_LIST"	statsColList
"AUTO_ID_CACHE"	autoIdCache
"AUTO_INCREMENT"	autoIncrement
"AUTO_RANDOM"	autoRandom
"AUTO_RANDOM_BASE"	autoRandomBase
"AVG"	avg
"AVG_ROW_LENGTH"	avgRowLength
"BACKEND"	backend
"BACKUP"	backup
"BACKUPS"	backups
"BEGIN"	begin
"BERNOULLI"	bernoulli
"BINDING"	binding
"BINDING_CACHE"	bindingCache
"BINDINGS"	bindings
"BINLOG"	binlog
"BIT"	bitType
"BLOCK"	block
"BOOLEAN"	booleanType
"BOOL"	boolType
"BTREE"	btree
"BYTE"	byteType
"CACHE"	cache
"CALIBRATE"	calibrate
"CAPTURE"	capture
"CASCADED"	cascaded
"CAUSAL"	causal
"CHAIN"	chain
"CHARSET"	charsetKwd
"CHECKPOINT"	checkpoint
"CHECKSUM"	checksum
"CIPHER"	cipher
"CLEANUP"	cleanup
"CLIENT"	client
"CLIENT_ERRORS_SUMMARY"	clientErrorsSummary
"COALESCE"	coalesce
"COLLATION"	collation
"COLUMN_FORMAT"	columnFormat
"COLUMNS"	columns
"CONFIG"	config
"COMMENT"	comment
"COMMIT"	commit
"COMMITTED"	committed
"COMPACT"	compact
"COMPRESSED"	compressed
"COMPRESSION"	compression
"CONCURRENCY"	concurrency
"CONNECTION"	connection
"CONSISTENCY"	consistency
"CONSISTENT"	consistent
"CONTEXT"	context
"CPU"	cpu
"CSV_BACKSLASH_ESCAPE"	csvBackslashEscape
"CSV_DELIMITER"	csvDelimiter
"CSV_HEADER"	csvHeader
"CSV_NOT_NULL"	csvNotNull
"CSV_NULL"	csvNull
"CSV_SEPARATOR"	csvSeparator
"CSV_TRIM_LAST_SEPARATORS"	csvTrimLastSeparators
"CURRENT"	current
"CLOSE"	close
"CLUSTER"	cluster
"CLUSTERED"	clustered
"CYCLE"	cycle
"DATA"	data
"DATETIME"	datetimeType
"DATE"	dateType
"DAY"	day
"DEALLOCATE"	deallocate
"DECLARE"	declare
"DEFINER"	definer
"DELAY_KEY_WRITE"	delayKeyWrite
"DIGEST"	digest
"DIRECTORY"	directory
"DISABLE"	disable
"DISABLED"	disabled
"DISCARD"	discard
"DISK"	disk
"DO"	do
"DUPLICATE"	duplicate
"DYNAMIC"	dynamic
"ENABLE"	enable
"ENABLED"	enabled
"ENCRYPTION"	encryption
"END"	end
"ENFORCED"	enforced
"ENGINE"	engine
"ENGINES"	engines
"ENUM"	enum
"ERROR"	errorKwd
"ESCAPE"	escape
"EVENT"	event
"EVENTS"	events
"EVOLVE"	evolve
"EXCHANGE"	exchange
"EXCLUSIVE"	exclusive
"EXECUTE"	execute
"EXPANSION"	expansion
"EXPIRE"	expire
"EXTENDED"	extended
"FAULTS"	faultsSym
"FIELDS"	fields
"FILE"	file
"FIRST"	first
"FIXED"	fixed
"FLUSH"	flush
"FOUND"	found
"FOLLOWING"	following
"FORMAT"	format
"FULL"	full
"FUNCTION"	function
"GENERAL"	general
"GLOBAL"	global
"GRANTS"	grants
"HANDLER"	handler
"HASH"	hash
"HELP"	help
"HISTOGRAM"	histogram
"HISTORY"	history
"HOSTS"	hosts
"HOUR"	hour
"IDENTIFIED"	identified
"ERRORS"	identSQLErrors
"IMPORT"	importKwd
"IMPORTS"	imports
"INCREMENT"	increment
"INCREMENTAL"	incremental
"INDEXES"	indexes
"INSERT_METHOD"	insertMethod
"INSTANCE"	instance
"INVISIBLE"	invisible
"INVOKER"	invoker
"IO"	io
"IPC"	ipc
"ISOLATION"	isolation
"ISSUER"	issuer
"JSON"	jsonType
"KEY_BLOCK_SIZE"	keyBlockSize
"LABELS"	labels
"LANGUAGE"	language
"LAST"	last
"LAST_BACKUP"	lastBackup
"LASTVAL"	lastval
"LESS"	less
"LEVEL"	level
"LIST"	list
"LOCAL"	local
"LOCKED"	locked
"LOCATION"	location
"LOGS"	logs
"MASTER"	master
"MAX_IDXNUM"	max_idxnum
"MAX_MINUTES"	max_minutes
"MAX_CONNECTIONS_PER_HOUR"	maxConnectionsPerHour
"MAX_QUERIES_PER_HOUR"	maxQueriesPerHour
"MAX_ROWS"	maxRows
"MAX_UPDATES_PER_HOUR"	maxUpdatesPerHour
"MAX_USER_CONNECTIONS"	maxUserConnections
"MB"	mb
"MEMBER"	member
"MEMORY"	memory
"MERGE"	merge
"MICROSECOND"	microsecond
"MIN_ROWS"	minRows
"MINUTE"	minute
"MINVALUE"	minValue
"MODE"	mode
"MODIFY"	modify
"MONTH"	month
"NAMES"	names
"NATIONAL"	national
"NCHAR"	ncharType
"NEVER"	never
"NEXT"	next
"NEXTVAL"	nextval
"NO"	no
"NOCACHE"	nocache
"NOCYCLE"	nocycle
"NODEGROUP"	nodegroup
"NOMAXVALUE"	nomaxvalue
"NOMINVALUE"	nominvalue
"NONCLUSTERED"	nonclustered
"NONE"	none
"NOWAIT"	nowait
"NVARCHAR"	nvarcharType
"NULLS"	nulls
"OFF"	off
"OFFSET"	offset
"OLTP_READ_ONLY"	oltpReadOnly
"OLTP_READ_WRITE"	oltpReadWrite
"OLTP_WRITE_ONLY"	oltpWriteOnly
"ON_DUPLICATE"	onDuplicate
"ONLINE"	online
"ONLY"	only
"OPEN"	open
"OPTIONAL"	optional
"PACK_KEYS"	packKeys
"PAGE"	pageSym
"PARSER"	parser
"PARTIAL"	partial
"PARTITIONING"	partitioning
"PARTITIONS"	partitions
"PASSWORD"	password
"PAUSE"	pause
"PERCENT"	percent
"PER_DB"	per_db
"PER_TABLE"	per_table
	pipesAsOr
"PLUGINS"	plugins
"POINT"	point
"POLICY"	policy
"PRE_SPLIT_REGIONS"	preSplitRegions
"PRECEDING"	preceding
"PREPARE"	prepare
"PRESERVE"	preserve
"PRIVILEGES"	privileges
"PROCESS"	process
"PROCESSLIST"	processlist
"PROFILE"	profile
"PROFILES"	profiles
"PROXY"	proxy
"PURGE"	purge
"QUARTER"	quarter
"QUERIES"	queries
"QUERY"	query
"QUICK"	quick
"RATE_LIMIT"	rateLimit
"REBUILD"	rebuild
"RECOVER"	recover
"REDUNDANT"	redundant
"RELOAD"	reload
"REMOVE"	remove
"REORGANIZE"	reorganize
"REPAIR"	repair
"REPEATABLE"	repeatable
"REPLICA"	replica
"REPLICAS"	replicas
"REPLICATION"	replication
"REQUIRED"	required
"RESOURCE"	resource
"RESPECT"	respect
"RESTART"	restart
"RESTORE"	restore
"RESTORES"	restores
"RESUME"	resume
"REUSE"	reuse
"REVERSE"	reverse
"ROLE"	role
"ROLLBACK"	rollback
"ROLLUP"	rollup
"ROUTINE"	routine
"ROW_COUNT"	rowCount
"ROW_FORMAT"	rowFormat
"RTREE"	rtree
"HYPO"	hypo
"SAN"	san
"SAVEPOINT"	savepoint
"SECOND"	second
"SECONDARY_ENGINE"	secondaryEngine
"SECONDARY_LOAD"	secondaryLoad
"SECONDARY_UNLOAD"	secondaryUnload
"SECURITY"	security
"SEND_CREDENTIALS_TO_TIKV"	sendCredentialsToTiKV
"SEPARATOR"	separator
"SEQUENCE"	sequence
"SERIAL"	serial
"SERIALIZABLE"	serializable
"SESSION"	session
"SETVAL"	setval
"SHARD_ROW_ID_BITS"	shardRowIDBits
"SHARE"	share
"SHARED"	shared
"SHUTDOWN"	shutdown
"SIGNED"	signed
"SIMPLE"	simple
"SKIP"	skip
"SKIP_SCHEMA_FILES"	skipSchemaFiles
"SLAVE"	slave
"SLOW"	slow
"SNAPSHOT"	snapshot
"SOME"	some
"SOURCE"	source
"SQL_BUFFER_RESULT"	sqlBufferResult
"SQL_CACHE"	sqlCache
"SQL_NO_CACHE"	sqlNoCache
"SQL_TSI_DAY"	sqlTsiDay
"SQL_TSI_HOUR"	sqlTsiHour
"SQL_TSI_MINUTE"	sqlTsiMinute
"SQL_TSI_MONTH"	sqlTsiMonth
"SQL_TSI_QUARTER"	sqlTsiQuarter
"SQL_TSI_SECOND"	sqlTsiSecond
"SQL_TSI_WEEK"	sqlTsiWeek
"SQL_TSI_YEAR"	sqlTsiYear
"START"	start
"STATS_AUTO_RECALC"	statsAutoRecalc
"STATS_PERSISTENT"	statsPersistent
"STATS_SAMPLE_PAGES"	statsSamplePages
"STATUS"	status
"STORAGE"	storage
"STRICT_FORMAT"	strictFormat
"SUBJECT"	subject
"SUBPARTITION"	subpartition
"SUBPARTITIONS"	subpartitions
"SUPER"	super
"SWAPS"	swaps
"SWITCHES"	switchesSym
"SYSTEM"	system
"SYSTEM_TIME"	systemTime
"TABLE_CHECKSUM"	tableChecksum
"TABLES"	tables
"TABLESPACE"	tablespace
"TEMPORARY"	temporary
"TEMPTABLE"	temptable
"TEXT"	textType
"THAN"	than
"TIKV_IMPORTER"	tikvImporter
"TIMESTAMP"	timestampType
"TIME"	timeType
"TOKEN_ISSUER"	tokenIssuer
"TYPE"	tp
"TPCC"	tpcc
"TRACE"	trace
"TRADITIONAL"	traditional
"TRANSACTION"	transaction
"TRIGGERS"	triggers
"TRUNCATE"	truncate
"TTL"	ttl
"TTL_ENABLE"	ttlEnable
"TTL_JOB_INTERVAL"	ttlJobInterval
"UNBOUNDED"	unbounded
"UNCOMMITTED"	uncommitted
"UNDEFINED"	undefined
"UNICODE"	unicodeSym
"UNKNOWN"	unknown
"USER"	user
"VALIDATION"	validation
"VALUE"	value
"VARIABLES"	variables
"VIEW"	view
"VISIBLE"	visible
"WARNINGS"	warnings
"WEEK"	week
"WEIGHT_STRING"	weightString
"WITHOUT"	without
"WORKLOAD"	workload
"X509"	x509
"YEAR"	yearType
"WAIT"	wait
"FAILED_LOGIN_ATTEMPTS"	failedLoginAttempts
"PASSWORD_LOCK_TIME"	passwordLockTime

	/* The following tokens belong to NotKeywordToken. Notice: make sure these tokens are contained in NotKeywordToken. */
"ADDDATE"	addDate
"APPROX_COUNT_DISTINCT"	approxCountDistinct
"APPROX_PERCENTILE"	approxPercentile
"BOUND"	bound
"BR"	br
"BRIEF"	briefType
"BURSTABLE"	burstable
"CAST"	cast
"COPY"	copyKwd
"CONSTRAINTS"	constraints
"CURTIME"	curTime
"CURDATE"	curDate
"DATE_ADD"	dateAdd
"DATE_SUB"	dateSub
"DEFINED"	defined
"DOT"	dotType
"DUMP"	dump
"DURATION"	timeDuration
"END_TIME"	endTime
"EXACT"	exact
"EXPR_PUSHDOWN_BLACKLIST"	exprPushdownBlacklist
"EXTRACT"	extract
"FLASHBACK"	flashback
"FOLLOWER"	follower
"FOLLOWER_CONSTRAINTS"	followerConstraints
"FOLLOWERS"	followers
"FULL_BACKUP_STORAGE"	fullBackupStorage
"GET_FORMAT"	getFormat
"GC_TTL"	gcTTL
"GROUP_CONCAT"	groupConcat
"NEXT_ROW_ID"	next_row_id
"INPLACE"	inplace
"INSTANT"	instant
"INTERNAL"	internal
"JSON_ARRAYAGG"	jsonArrayagg
"JSON_OBJECTAGG"	jsonObjectAgg
"LEADER"	leader
"LEADER_CONSTRAINTS"	leaderConstraints
"LEARNER"	learner
"LEARNER_CONSTRAINTS"	learnerConstraints
"LEARNERS"	learners
"METADATA"	metadata
"OPT_RULE_BLACKLIST"	optRuleBlacklist
"PLACEMENT"	placement
"PLAN"	plan
"PLAN_CACHE"	planCache
"POSITION"	position
"PREDICATE"	predicate
"PRIMARY_REGION"	primaryRegion
"RECENT"	recent
"REPLAYER"	replayer
"RESTORED_TS"	restoredTS
"RUNNING"	running
"S3"	s3
"SCHEDULE"	schedule
"STALENESS"	staleness
"START_TIME"	startTime
"START_TS"	startTS
"STD"	std
"STDDEV"	stddev
"STDDEV_POP"	stddevPop
"STDDEV_SAMP"	stddevSamp
"STOP"	stop
"STRICT"	strict
"STRONG"	strong
"SUBDATE"	subDate
"SUM"	sum
"SUBSTRING"	substring
"SURVIVAL_PREFERENCES"	survivalPreferences
"TARGET"	target
"TASK_TYPES"	taskTypes
"TIDB_JSON"	tidbJson
"TIMESTAMPADD"	timestampAdd
"TIMESTAMPDIFF"	timestampDiff
"TLS"	tls
"TOKUDB_DEFAULT"	tokudbDefault
"TOKUDB_FAST"	tokudbFast
"TOKUDB_LZMA"	tokudbLzma
"TOKUDB_QUICKLZ"	tokudbQuickLZ
"TOKUDB_SNAPPY"	tokudbSnappy
"TOKUDB_SMALL"	tokudbSmall
"TOKUDB_UNCOMPRESSED"	tokudbUncompressed
"TOKUDB_ZLIB"	tokudbZlib
"TOKUDB_ZSTD"	tokudbZstd
"TOP"	top
"TRIM"	trim
"UNTIL_TS"	untilTS
"VARIANCE"	variance
"VAR_POP"	varPop
"VAR_SAMP"	varSamp
"VERBOSE"	verboseType
"TRUE_CARD_COST"	trueCardCost
"VOTER"	voter
"VOTER_CONSTRAINTS"	voterConstraints
"VOTERS"	voters
"RU_PER_SEC"	ruRate
"PRIORITY"	priority
"HIGH"	high
"MEDIUM"	medium
"LOW"	low
"IO_READ_BANDWIDTH"	ioReadBandwidth
"IO_WRITE_BANDWIDTH"	ioWriteBandwidth
"EXEC_ELAPSED"	execElapsed
"DRYRUN"	dryRun
"COOLDOWN"	cooldown
"WATCH"	watch
"SIMILAR"	similar
"QUERY_LIMIT"	queryLimit
"BACKGROUND"	background
"UNLIMITED"	unlimited

	/* The following tokens belong to TiDBKeyword. Notice: make sure these tokens are contained in TiDBKeyword. */
"ADMIN"	admin
"BATCH"	batch
"BUCKETS"	buckets
"BUILTINS"	builtins
"CANCEL"	cancel
"CARDINALITY"	cardinality
"CMSKETCH"	cmSketch
"COLUMN_STATS_USAGE"	columnStatsUsage
"CORRELATION"	correlation
"DDL"	ddl
"DEPENDENCY"	dependency
"DEPTH"	depth
"DRAINER"	drainer
"DRY"	dry
"JOBS"	jobs
"JOB"	job
"NODE_ID"	nodeID
"NODE_STATE"	nodeState
"OPTIMISTIC"	optimistic
"PESSIMISTIC"	pessimistic
"PUMP"	pump
"RUN"	run
"SAMPLES"	samples
"SAMPLERATE"	sampleRate
"SESSION_STATES"	sessionStates
"STATISTICS"	statistics
"STATS"	stats
"STATS_META"	statsMeta
"STATS_HISTOGRAMS"	statsHistograms
"STATS_BUCKETS"	statsBuckets
"STATS_HEALTHY"	statsHealthy
"STATS_TOPN"	statsTopN
"STATS_LOCKED"	statsLocked
"HISTOGRAMS_IN_FLIGHT"	histogramsInFlight
"TELEMETRY"	telemetry
"TELEMETRY_ID"	telemetryID
"TIDB"	tidb
"TIFLASH"	tiFlash
"TOPN"	topn
"SPLIT"	split
"WIDTH"	width
"RESET"	reset
"REGIONS"	regions
"REGION"	region

//"&^"	andnot
":="	assignmentEq
"="	eq
">="	ge
"<="	le
"->"	jss
"->>"	juss
"<<"	lsh
"!="	neq
"<>"	neqSynonym
"<=>"	nulleq
"?"	paramMarker
">>"	rsh

"^"	'^'
"~"	'~'
"<"	'<'
">"	'>'
"|"	'|'
"-"	'-'
","	','
";"	';'
":"	':'
"!"	'!'
"/"	'/'
"."	'.'
"("	'('
")"	')'
"{"	'{'
"}"	'}'
"@"	'@'
"*"	'*'
"&"	'&'
"%"	'%'
"+"	'+'

builtinApproxCountDistinct	builtinApproxCountDistinct
builtinApproxPercentile	builtinApproxPercentile
"BIT_AND"	builtinBitAnd
"BIT_OR"	builtinBitOr
"BIT_XOR"	builtinBitXor
builtinCast	builtinCast
builtinCount	builtinCount
builtinCurDate	builtinCurDate
builtinCurTime	builtinCurTime
builtinDateAdd	builtinDateAdd
builtinDateSub	builtinDateSub
builtinExtract	builtinExtract
builtinGroupConcat	builtinGroupConcat
"MAX"	builtinMax
"MIN"	builtinMin
"NOW"	builtinNow
builtinPosition	builtinPosition
builtinStddevPop	builtinStddevPop
builtinStddevSamp	builtinStddevSamp
builtinSubstring	builtinSubstring
builtinSum	builtinSum
builtinSysDate	builtinSysDate
builtinTranslate	builtinTranslate
builtinTrim	builtinTrim
builtinUser	builtinUser
builtinVarPop	builtinVarPop
builtinVarSamp	builtinVarSamp
hintComment	hintComment
insertValues	insertValues
neg	neg
not2	not2
pipesAsOr	pipesAsOr
tableRefPriority	tableRefPriority

bitLit	bitLit
decLit	decLit
hexLit	hexLit
[0-9]+"."[0-9]+	floatLit
[0-9]+	intLit
'(''|[^'\n])*'	stringLit
"@@"{base_id}	doubleAtIdentifier
"@"{base_id}	singleAtIdentifier
{base_id}	identifier

%%
